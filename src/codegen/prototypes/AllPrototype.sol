// SPDX-License-Identifier: MIT
pragma solidity >=0.8.24;

/* Autogenerated file. Do not edit manually. */

import { ResourceId } from "@latticexyz/store/src/ResourceId.sol";
import { IStore } from "@latticexyz/store/src/IStore.sol";
import { Schema } from "@latticexyz/store/src/Schema.sol";
import { EncodedLengths } from "@latticexyz/store/src/EncodedLengths.sol";

import { EBuilding, EResource, EUnit, EMap, EObjectives, EAllianceInviteMode, EAllianceRole, EFleetStance, EPointType } from "../common.sol";
import "codegen/index.sol";

function createPrototype(
  IStore store,
  bytes32[] memory key,
  ResourceId[] memory tableIds,
  bytes[] memory staticData,
  EncodedLengths[] memory encodedLengths,
  bytes[] memory dynamicData
) {
  for (uint256 i = 0; i < tableIds.length; i++) {
    ResourceId tableId = tableIds[i];
    store.setRecord(tableId, key, staticData[i], encodedLengths[i], dynamicData[i]);
  }
}

function createPrototypes(IStore store) {
  WorldPrototype(store);
  CooldownPrototype(store);
  WormholePrototype(store);
  ConquestPrototype(store);
  BuildingPrototype(store);
  ExpansionPrototype(store);
  IronSupplyPrototype(store);
  CopperSupplyPrototype(store);
  LithiumSupplyPrototype(store);
  TitaniumSupplyPrototype(store);
  PlatinumSupplyPrototype(store);
  IridiumSupplyPrototype(store);
  IronPlateSupplyPrototype(store);
  AlloySupplyPrototype(store);
  PVCellSupplyPrototype(store);
  MarketplaceConfigPrototype(store);
  MainBasePrototype(store);
  MainBaseIronL1Prototype(store);
  MainBaseCopperL1Prototype(store);
  MainBaseLithiumL1Prototype(store);
  MainBaseR_EncryptionL1Prototype(store);
  MainBaseR_HPL1Prototype(store);
  MainBaseIronL2Prototype(store);
  MainBaseCopperL2Prototype(store);
  MainBaseLithiumL2Prototype(store);
  MainBaseR_EncryptionL2Prototype(store);
  MainBaseR_HPL2Prototype(store);
  MainBaseIronL3Prototype(store);
  MainBaseCopperL3Prototype(store);
  MainBaseLithiumL3Prototype(store);
  MainBaseR_EncryptionL3Prototype(store);
  MainBaseR_HPL3Prototype(store);
  MainBaseIronL4Prototype(store);
  MainBaseCopperL4Prototype(store);
  MainBaseLithiumL4Prototype(store);
  MainBaseR_EncryptionL4Prototype(store);
  MainBaseR_HPL4Prototype(store);
  MainBaseIronL5Prototype(store);
  MainBaseCopperL5Prototype(store);
  MainBaseLithiumL5Prototype(store);
  MainBaseIronPlateL5Prototype(store);
  MainBaseAlloyL5Prototype(store);
  MainBasePVCellL5Prototype(store);
  MainBaseR_EncryptionL5Prototype(store);
  MainBaseR_HPL5Prototype(store);
  MainBaseIronL6Prototype(store);
  MainBaseCopperL6Prototype(store);
  MainBaseLithiumL6Prototype(store);
  MainBaseIronPlateL6Prototype(store);
  MainBaseAlloyL6Prototype(store);
  MainBasePVCellL6Prototype(store);
  MainBaseR_EncryptionL6Prototype(store);
  MainBaseR_HPL6Prototype(store);
  MainBaseIronL7Prototype(store);
  MainBaseCopperL7Prototype(store);
  MainBaseLithiumL7Prototype(store);
  MainBaseIronPlateL7Prototype(store);
  MainBaseAlloyL7Prototype(store);
  MainBasePVCellL7Prototype(store);
  MainBaseTitaniumL7Prototype(store);
  MainBaseIridiumL7Prototype(store);
  MainBasePlatinumL7Prototype(store);
  MainBaseKimberliteL7Prototype(store);
  MainBaseR_EncryptionL7Prototype(store);
  MainBaseR_HPL7Prototype(store);
  MainBaseIronL8Prototype(store);
  MainBaseCopperL8Prototype(store);
  MainBaseLithiumL8Prototype(store);
  MainBaseIronPlateL8Prototype(store);
  MainBaseAlloyL8Prototype(store);
  MainBasePVCellL8Prototype(store);
  MainBaseTitaniumL8Prototype(store);
  MainBaseIridiumL8Prototype(store);
  MainBasePlatinumL8Prototype(store);
  MainBaseKimberliteL8Prototype(store);
  MainBaseR_EncryptionL8Prototype(store);
  MainBaseR_HPL8Prototype(store);
  MainBaseIronL9Prototype(store);
  MainBaseCopperL9Prototype(store);
  MainBaseLithiumL9Prototype(store);
  MainBaseIronPlateL9Prototype(store);
  MainBaseAlloyL9Prototype(store);
  MainBasePVCellL9Prototype(store);
  MainBaseTitaniumL9Prototype(store);
  MainBaseIridiumL9Prototype(store);
  MainBasePlatinumL9Prototype(store);
  MainBaseKimberliteL9Prototype(store);
  MainBaseR_EncryptionL9Prototype(store);
  MainBaseR_HPL9Prototype(store);
  MainBaseIronL10Prototype(store);
  MainBaseCopperL10Prototype(store);
  MainBaseLithiumL10Prototype(store);
  MainBaseIronPlateL10Prototype(store);
  MainBaseAlloyL10Prototype(store);
  MainBasePVCellL10Prototype(store);
  MainBaseTitaniumL10Prototype(store);
  MainBaseIridiumL10Prototype(store);
  MainBasePlatinumL10Prototype(store);
  MainBaseKimberliteL10Prototype(store);
  MainBaseR_EncryptionL10Prototype(store);
  MainBaseR_HPL10Prototype(store);
  MainBaseIronL11Prototype(store);
  MainBaseCopperL11Prototype(store);
  MainBaseLithiumL11Prototype(store);
  MainBaseIronPlateL11Prototype(store);
  MainBaseAlloyL11Prototype(store);
  MainBasePVCellL11Prototype(store);
  MainBaseTitaniumL11Prototype(store);
  MainBaseIridiumL11Prototype(store);
  MainBasePlatinumL11Prototype(store);
  MainBaseKimberliteL11Prototype(store);
  MainBaseR_EncryptionL11Prototype(store);
  MainBaseR_HPL11Prototype(store);
  MainBaseIronL12Prototype(store);
  MainBaseCopperL12Prototype(store);
  MainBaseLithiumL12Prototype(store);
  MainBaseIronPlateL12Prototype(store);
  MainBaseAlloyL12Prototype(store);
  MainBasePVCellL12Prototype(store);
  MainBaseTitaniumL12Prototype(store);
  MainBaseIridiumL12Prototype(store);
  MainBasePlatinumL12Prototype(store);
  MainBaseKimberliteL12Prototype(store);
  MainBaseR_EncryptionL12Prototype(store);
  MainBaseR_HPL12Prototype(store);
  MainBaseIronL13Prototype(store);
  MainBaseCopperL13Prototype(store);
  MainBaseLithiumL13Prototype(store);
  MainBaseIronPlateL13Prototype(store);
  MainBaseAlloyL13Prototype(store);
  MainBasePVCellL13Prototype(store);
  MainBaseTitaniumL13Prototype(store);
  MainBaseIridiumL13Prototype(store);
  MainBasePlatinumL13Prototype(store);
  MainBaseKimberliteL13Prototype(store);
  MainBaseR_EncryptionL13Prototype(store);
  MainBaseR_HPL13Prototype(store);
  MainBaseIronL14Prototype(store);
  MainBaseCopperL14Prototype(store);
  MainBaseLithiumL14Prototype(store);
  MainBaseIronPlateL14Prototype(store);
  MainBaseAlloyL14Prototype(store);
  MainBasePVCellL14Prototype(store);
  MainBaseTitaniumL14Prototype(store);
  MainBaseIridiumL14Prototype(store);
  MainBasePlatinumL14Prototype(store);
  MainBaseKimberliteL14Prototype(store);
  MainBaseR_EncryptionL14Prototype(store);
  MainBaseR_HPL14Prototype(store);
  MainBaseIronL15Prototype(store);
  MainBaseCopperL15Prototype(store);
  MainBaseLithiumL15Prototype(store);
  MainBaseIronPlateL15Prototype(store);
  MainBaseAlloyL15Prototype(store);
  MainBasePVCellL15Prototype(store);
  MainBaseTitaniumL15Prototype(store);
  MainBaseIridiumL15Prototype(store);
  MainBasePlatinumL15Prototype(store);
  MainBaseKimberliteL15Prototype(store);
  MainBaseR_EncryptionL15Prototype(store);
  MainBaseR_HPL15Prototype(store);
  WormholeBasePrototype(store);
  WormholeBaseIronL1Prototype(store);
  WormholeBaseCopperL1Prototype(store);
  WormholeBaseLithiumL1Prototype(store);
  WormholeBaseR_EncryptionL1Prototype(store);
  WormholeBaseR_HPL1Prototype(store);
  WormholeBaseIronL2Prototype(store);
  WormholeBaseCopperL2Prototype(store);
  WormholeBaseLithiumL2Prototype(store);
  WormholeBaseR_EncryptionL2Prototype(store);
  WormholeBaseR_HPL2Prototype(store);
  WormholeBaseIronL3Prototype(store);
  WormholeBaseCopperL3Prototype(store);
  WormholeBaseLithiumL3Prototype(store);
  WormholeBaseR_EncryptionL3Prototype(store);
  WormholeBaseR_HPL3Prototype(store);
  WormholeBaseIronL4Prototype(store);
  WormholeBaseCopperL4Prototype(store);
  WormholeBaseLithiumL4Prototype(store);
  WormholeBaseR_EncryptionL4Prototype(store);
  WormholeBaseR_HPL4Prototype(store);
  WormholeBaseIronL5Prototype(store);
  WormholeBaseCopperL5Prototype(store);
  WormholeBaseLithiumL5Prototype(store);
  WormholeBaseIronPlateL5Prototype(store);
  WormholeBaseAlloyL5Prototype(store);
  WormholeBasePVCellL5Prototype(store);
  WormholeBaseR_EncryptionL5Prototype(store);
  WormholeBaseR_HPL5Prototype(store);
  WormholeBaseIronL6Prototype(store);
  WormholeBaseCopperL6Prototype(store);
  WormholeBaseLithiumL6Prototype(store);
  WormholeBaseIronPlateL6Prototype(store);
  WormholeBaseAlloyL6Prototype(store);
  WormholeBasePVCellL6Prototype(store);
  WormholeBaseR_EncryptionL6Prototype(store);
  WormholeBaseR_HPL6Prototype(store);
  WormholeBaseIronL7Prototype(store);
  WormholeBaseCopperL7Prototype(store);
  WormholeBaseLithiumL7Prototype(store);
  WormholeBaseIronPlateL7Prototype(store);
  WormholeBaseAlloyL7Prototype(store);
  WormholeBasePVCellL7Prototype(store);
  WormholeBaseTitaniumL7Prototype(store);
  WormholeBaseIridiumL7Prototype(store);
  WormholeBasePlatinumL7Prototype(store);
  WormholeBaseKimberliteL7Prototype(store);
  WormholeBaseR_EncryptionL7Prototype(store);
  WormholeBaseR_HPL7Prototype(store);
  WormholeBaseIronL8Prototype(store);
  WormholeBaseCopperL8Prototype(store);
  WormholeBaseLithiumL8Prototype(store);
  WormholeBaseIronPlateL8Prototype(store);
  WormholeBaseAlloyL8Prototype(store);
  WormholeBasePVCellL8Prototype(store);
  WormholeBaseTitaniumL8Prototype(store);
  WormholeBaseIridiumL8Prototype(store);
  WormholeBasePlatinumL8Prototype(store);
  WormholeBaseKimberliteL8Prototype(store);
  WormholeBaseR_EncryptionL8Prototype(store);
  WormholeBaseR_HPL8Prototype(store);
  WormholeBaseIronL9Prototype(store);
  WormholeBaseCopperL9Prototype(store);
  WormholeBaseLithiumL9Prototype(store);
  WormholeBaseIronPlateL9Prototype(store);
  WormholeBaseAlloyL9Prototype(store);
  WormholeBasePVCellL9Prototype(store);
  WormholeBaseTitaniumL9Prototype(store);
  WormholeBaseIridiumL9Prototype(store);
  WormholeBasePlatinumL9Prototype(store);
  WormholeBaseKimberliteL9Prototype(store);
  WormholeBaseR_EncryptionL9Prototype(store);
  WormholeBaseR_HPL9Prototype(store);
  WormholeBaseIronL10Prototype(store);
  WormholeBaseCopperL10Prototype(store);
  WormholeBaseLithiumL10Prototype(store);
  WormholeBaseIronPlateL10Prototype(store);
  WormholeBaseAlloyL10Prototype(store);
  WormholeBasePVCellL10Prototype(store);
  WormholeBaseTitaniumL10Prototype(store);
  WormholeBaseIridiumL10Prototype(store);
  WormholeBasePlatinumL10Prototype(store);
  WormholeBaseKimberliteL10Prototype(store);
  WormholeBaseR_EncryptionL10Prototype(store);
  WormholeBaseR_HPL10Prototype(store);
  WormholeBaseIronL11Prototype(store);
  WormholeBaseCopperL11Prototype(store);
  WormholeBaseLithiumL11Prototype(store);
  WormholeBaseIronPlateL11Prototype(store);
  WormholeBaseAlloyL11Prototype(store);
  WormholeBasePVCellL11Prototype(store);
  WormholeBaseTitaniumL11Prototype(store);
  WormholeBaseIridiumL11Prototype(store);
  WormholeBasePlatinumL11Prototype(store);
  WormholeBaseKimberliteL11Prototype(store);
  WormholeBaseR_EncryptionL11Prototype(store);
  WormholeBaseR_HPL11Prototype(store);
  WormholeBaseIronL12Prototype(store);
  WormholeBaseCopperL12Prototype(store);
  WormholeBaseLithiumL12Prototype(store);
  WormholeBaseIronPlateL12Prototype(store);
  WormholeBaseAlloyL12Prototype(store);
  WormholeBasePVCellL12Prototype(store);
  WormholeBaseTitaniumL12Prototype(store);
  WormholeBaseIridiumL12Prototype(store);
  WormholeBasePlatinumL12Prototype(store);
  WormholeBaseKimberliteL12Prototype(store);
  WormholeBaseR_EncryptionL12Prototype(store);
  WormholeBaseR_HPL12Prototype(store);
  WormholeBaseIronL13Prototype(store);
  WormholeBaseCopperL13Prototype(store);
  WormholeBaseLithiumL13Prototype(store);
  WormholeBaseIronPlateL13Prototype(store);
  WormholeBaseAlloyL13Prototype(store);
  WormholeBasePVCellL13Prototype(store);
  WormholeBaseTitaniumL13Prototype(store);
  WormholeBaseIridiumL13Prototype(store);
  WormholeBasePlatinumL13Prototype(store);
  WormholeBaseKimberliteL13Prototype(store);
  WormholeBaseR_EncryptionL13Prototype(store);
  WormholeBaseR_HPL13Prototype(store);
  WormholeBaseIronL14Prototype(store);
  WormholeBaseCopperL14Prototype(store);
  WormholeBaseLithiumL14Prototype(store);
  WormholeBaseIronPlateL14Prototype(store);
  WormholeBaseAlloyL14Prototype(store);
  WormholeBasePVCellL14Prototype(store);
  WormholeBaseTitaniumL14Prototype(store);
  WormholeBaseIridiumL14Prototype(store);
  WormholeBasePlatinumL14Prototype(store);
  WormholeBaseKimberliteL14Prototype(store);
  WormholeBaseR_EncryptionL14Prototype(store);
  WormholeBaseR_HPL14Prototype(store);
  WormholeBaseIronL15Prototype(store);
  WormholeBaseCopperL15Prototype(store);
  WormholeBaseLithiumL15Prototype(store);
  WormholeBaseIronPlateL15Prototype(store);
  WormholeBaseAlloyL15Prototype(store);
  WormholeBasePVCellL15Prototype(store);
  WormholeBaseTitaniumL15Prototype(store);
  WormholeBaseIridiumL15Prototype(store);
  WormholeBasePlatinumL15Prototype(store);
  WormholeBaseKimberliteL15Prototype(store);
  WormholeBaseR_EncryptionL15Prototype(store);
  WormholeBaseR_HPL15Prototype(store);
  IronMinePrototype(store);
  CopperMinePrototype(store);
  LithiumMinePrototype(store);
  KimberliteMinePrototype(store);
  IridiumMinePrototype(store);
  PlatinumMinePrototype(store);
  TitaniumMinePrototype(store);
  IronPlateFactoryPrototype(store);
  AlloyFactoryPrototype(store);
  PVCellFactoryPrototype(store);
  StorageUnitPrototype(store);
  StorageUnitIronL1Prototype(store);
  StorageUnitCopperL1Prototype(store);
  StorageUnitLithiumL1Prototype(store);
  StorageUnitIronL2Prototype(store);
  StorageUnitCopperL2Prototype(store);
  StorageUnitLithiumL2Prototype(store);
  StorageUnitIronPlateL2Prototype(store);
  StorageUnitPVCellL2Prototype(store);
  StorageUnitAlloyL2Prototype(store);
  StorageUnitIronL3Prototype(store);
  StorageUnitCopperL3Prototype(store);
  StorageUnitLithiumL3Prototype(store);
  StorageUnitIronPlateL3Prototype(store);
  StorageUnitPVCellL3Prototype(store);
  StorageUnitAlloyL3Prototype(store);
  StorageUnitIronL4Prototype(store);
  StorageUnitCopperL4Prototype(store);
  StorageUnitLithiumL4Prototype(store);
  StorageUnitIronPlateL4Prototype(store);
  StorageUnitPVCellL4Prototype(store);
  StorageUnitAlloyL4Prototype(store);
  StorageUnitIronL5Prototype(store);
  StorageUnitCopperL5Prototype(store);
  StorageUnitLithiumL5Prototype(store);
  StorageUnitIronPlateL5Prototype(store);
  StorageUnitPVCellL5Prototype(store);
  StorageUnitAlloyL5Prototype(store);
  StorageUnitTitaniumL5Prototype(store);
  StorageUnitPlatinumL5Prototype(store);
  StorageUnitIridiumL5Prototype(store);
  StorageUnitKimberliteL5Prototype(store);
  StorageUnitIronL6Prototype(store);
  StorageUnitCopperL6Prototype(store);
  StorageUnitLithiumL6Prototype(store);
  StorageUnitIronPlateL6Prototype(store);
  StorageUnitPVCellL6Prototype(store);
  StorageUnitAlloyL6Prototype(store);
  StorageUnitTitaniumL6Prototype(store);
  StorageUnitPlatinumL6Prototype(store);
  StorageUnitIridiumL6Prototype(store);
  StorageUnitKimberliteL6Prototype(store);
  StorageUnitIronL7Prototype(store);
  StorageUnitCopperL7Prototype(store);
  StorageUnitLithiumL7Prototype(store);
  StorageUnitIronPlateL7Prototype(store);
  StorageUnitPVCellL7Prototype(store);
  StorageUnitAlloyL7Prototype(store);
  StorageUnitTitaniumL7Prototype(store);
  StorageUnitPlatinumL7Prototype(store);
  StorageUnitIridiumL7Prototype(store);
  StorageUnitKimberliteL7Prototype(store);
  StorageUnitIronL8Prototype(store);
  StorageUnitCopperL8Prototype(store);
  StorageUnitLithiumL8Prototype(store);
  StorageUnitIronPlateL8Prototype(store);
  StorageUnitPVCellL8Prototype(store);
  StorageUnitAlloyL8Prototype(store);
  StorageUnitTitaniumL8Prototype(store);
  StorageUnitPlatinumL8Prototype(store);
  StorageUnitIridiumL8Prototype(store);
  StorageUnitKimberliteL8Prototype(store);
  StorageUnitIronL9Prototype(store);
  StorageUnitCopperL9Prototype(store);
  StorageUnitLithiumL9Prototype(store);
  StorageUnitIronPlateL9Prototype(store);
  StorageUnitPVCellL9Prototype(store);
  StorageUnitAlloyL9Prototype(store);
  StorageUnitTitaniumL9Prototype(store);
  StorageUnitPlatinumL9Prototype(store);
  StorageUnitIridiumL9Prototype(store);
  StorageUnitKimberliteL9Prototype(store);
  StorageUnitIronL10Prototype(store);
  StorageUnitCopperL10Prototype(store);
  StorageUnitLithiumL10Prototype(store);
  StorageUnitIronPlateL10Prototype(store);
  StorageUnitPVCellL10Prototype(store);
  StorageUnitAlloyL10Prototype(store);
  StorageUnitTitaniumL10Prototype(store);
  StorageUnitPlatinumL10Prototype(store);
  StorageUnitIridiumL10Prototype(store);
  StorageUnitKimberliteL10Prototype(store);
  SolarPanelPrototype(store);
  GaragePrototype(store);
  HangarPrototype(store);
  DroneFactoryPrototype(store);
  WorkshopPrototype(store);
  ShipyardPrototype(store);
  StarmapperPrototype(store);
  SAMPrototype(store);
  SAMR_HPL1Prototype(store);
  SAMR_HPL2Prototype(store);
  SAMR_HPL3Prototype(store);
  SAMR_HPL4Prototype(store);
  SAMR_HPL5Prototype(store);
  SAMR_HPL6Prototype(store);
  SAMR_HPL7Prototype(store);
  SAMR_HPL8Prototype(store);
  SAMR_HPL9Prototype(store);
  SAMR_HPL10Prototype(store);
  ShieldGeneratorPrototype(store);
  VaultPrototype(store);
  MarketPrototype(store);
  IsUtilityPrototype(store);
  RecoverablesPrototype(store);
  IsAdvancedResourcePrototype(store);
  ColonySlotsConfigPrototype(store);
  UnitPrototype(store);
  FleetStancePrototype(store);
  LightningCraftPrototype(store);
  AnvilDronePrototype(store);
  AegisDronePrototype(store);
  HammerDronePrototype(store);
  StingerDronePrototype(store);
  ColonyShipPrototype(store);
  DroidPrototype(store);
  MinutemanMarinePrototype(store);
  TridentMarinePrototype(store);
  PointMultipliersPrototype(store);
  ObjectivesPrototype(store);
  BuildIronMinePrototype(store);
  BuildCopperMinePrototype(store);
  BuildLithiumMinePrototype(store);
  UpgradeMainBase2Prototype(store);
  UpgradeMainBase3Prototype(store);
  UpgradeMainBase4Prototype(store);
  UpgradeMainBase5Prototype(store);
  ExpandBase2Prototype(store);
  ExpandBase3Prototype(store);
  ExpandBase4Prototype(store);
  UpgradeIronMine2Prototype(store);
  UpgradeIronMine3Prototype(store);
  UpgradeCopperMine2Prototype(store);
  UpgradeCopperMine3Prototype(store);
  UpgradeLithiumMine2Prototype(store);
  UpgradeLithiumMine3Prototype(store);
  BuildGaragePrototype(store);
  UpgradeGaragePrototype(store);
  BuildWorkshopPrototype(store);
  UpgradeWorkshopPrototype(store);
  CreateFleetPrototype(store);
  TransferFromAsteroidPrototype(store);
  TransferFromFleetPrototype(store);
  SendFleetPrototype(store);
  BattleAsteroidPrototype(store);
  OpenBattleReportPrototype(store);
  BattleFleetPrototype(store);
  BuildShipyardPrototype(store);
  UpgradeShipyard2Prototype(store);
  TrainColonyShipPrototype(store);
  DecryptAttackPrototype(store);
  CaptureAsteroidPrototype(store);
  CaptureMotherlodeAsteroidPrototype(store);
  ExtractMotherlodeResourcePrototype(store);
  EarnPrimodiumOnAsteroidPrototype(store);
  EarnPrimodiumOnShardPrototype(store);
  ExplodeShardPrototype(store);
  CaptureWormholeAsteroidPrototype(store);
  TeleportResourcesPrototype(store);
  BuildStarmapperPrototype(store);
  UpgradeStarmapper2Prototype(store);
  DefendWithFleetPrototype(store);
  BlockWithFleetPrototype(store);
  LandFleetPrototype(store);
  TrainMinutemanMarinePrototype(store);
  TrainTridentMarinePrototype(store);
  TrainLightningCraftPrototype(store);
  UpgradeUnitPrototype(store);
  BuildDroneFactoryPrototype(store);
  UpgradeDroneFactory2Prototype(store);
  TrainAnvilDronePrototype(store);
  TrainHammerDronePrototype(store);
  TrainAegisDronePrototype(store);
  TrainStingerDronePrototype(store);
  BuildHangarPrototype(store);
  UpgradeHanger2Prototype(store);
  BuildShieldGeneratorPrototype(store);
  UpgradeShieldGenerator2Prototype(store);
  BuildVaultPrototype(store);
  UpgradeVault2Prototype(store);
  BuildSAMLauncherPrototype(store);
  UpgradeSAMLauncher2Prototype(store);
  BuildStorageUnitPrototype(store);
  UpgradeStorageUnit2Prototype(store);
  BuildIronPlateFactoryPrototype(store);
  UpgradeIronPlateFactory2Prototype(store);
  BuildAlloyFactoryPrototype(store);
  UpgradeAlloyFactory2Prototype(store);
  BuildPVCellFactoryPrototype(store);
  UpgradePVCellFactory2Prototype(store);
  BuildSolarPanelPrototype(store);
  UpgradeSolarPanel2Prototype(store);
  BuildMarketPrototype(store);
  MarketSwapPrototype(store);
  JoinAlliancePrototype(store);
  JoinDiscordPrototype(store);
  FollowTwitterPrototype(store);
  PrimoPlayerPrototype(store);
}

bytes32 constant WorldPrototypeId = "World";

function WorldKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](0);

  return _keyTuple;
}

function WorldPrototype(IStore store) {
  bytes32[] memory keys = WorldKeys();
  ResourceId[] memory tableIds = new ResourceId[](9);
  bytes[] memory staticData = new bytes[](9);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](9);
  bytes[] memory dynamicData = new bytes[](9);

  tableIds[0] = P_AllianceConfig._tableId;
  tableIds[1] = P_GracePeriod._tableId;
  tableIds[2] = P_Asteroid._tableId;
  tableIds[3] = P_GameConfig._tableId;
  tableIds[4] = P_WormholeAsteroidConfig._tableId;
  tableIds[5] = P_AsteroidThresholdProbConfig._tableId;
  tableIds[6] = P_ColonyShipConfig._tableId;
  tableIds[7] = P_UnitPrototypes._tableId;
  tableIds[8] = P_Transportables._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_AllianceConfig.encode(30);
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_GracePeriod.encode(172800, 1800);
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Asteroid.encode(37, 25);
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_GameConfig.encode(
    address(0x3000000000000000000000000000000000000000),
    100,
    10,
    100,
    6,
    2,
    10,
    1000000
  );
  (staticData[4], encodedLengths[4], dynamicData[4]) = P_WormholeAsteroidConfig.encode(0, 1, 6, 0);
  (staticData[5], encodedLengths[5], dynamicData[5]) = P_AsteroidThresholdProbConfig.encode(35, 50, 55, 75, 90, 100);
  (staticData[6], encodedLengths[6], dynamicData[6]) = P_ColonyShipConfig.encode(300000000000000000000, 60);
  bytes32[] memory p_unitprototypes_value = new bytes32[](9);
  p_unitprototypes_value[0] = 0x416567697344726f6e6500000000000000000000000000000000000000000000;
  p_unitprototypes_value[1] = 0x416e76696c44726f6e6500000000000000000000000000000000000000000000;
  p_unitprototypes_value[2] = 0x5374696e67657244726f6e650000000000000000000000000000000000000000;
  p_unitprototypes_value[3] = 0x48616d6d657244726f6e65000000000000000000000000000000000000000000;
  p_unitprototypes_value[4] = 0x4d696e7574656d616e4d6172696e650000000000000000000000000000000000;
  p_unitprototypes_value[5] = 0x54726964656e744d6172696e6500000000000000000000000000000000000000;
  p_unitprototypes_value[6] = 0x4c696768746e696e674372616674000000000000000000000000000000000000;
  p_unitprototypes_value[7] = 0x436f6c6f6e795368697000000000000000000000000000000000000000000000;
  p_unitprototypes_value[8] = 0x44726f6964000000000000000000000000000000000000000000000000000000;
  (staticData[7], encodedLengths[7], dynamicData[7]) = P_UnitPrototypes.encode(p_unitprototypes_value);
  uint8[] memory p_transportables_value = new uint8[](10);
  p_transportables_value[0] = 1;
  p_transportables_value[1] = 2;
  p_transportables_value[2] = 3;
  p_transportables_value[3] = 8;
  p_transportables_value[4] = 10;
  p_transportables_value[5] = 9;
  p_transportables_value[6] = 4;
  p_transportables_value[7] = 7;
  p_transportables_value[8] = 5;
  p_transportables_value[9] = 6;
  (staticData[8], encodedLengths[8], dynamicData[8]) = P_Transportables.encode(p_transportables_value);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant CooldownPrototypeId = "Cooldown";

function CooldownKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](0);

  return _keyTuple;
}

function CooldownPrototype(IStore store) {
  bytes32[] memory keys = CooldownKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_CooldownConfig._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_CooldownConfig.encode(11, 10000, 20000, 100000, 60, 7);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholePrototypeId = "Wormhole";

function WormholeKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](0);

  return _keyTuple;
}

function WormholePrototype(IStore store) {
  bytes32[] memory keys = WormholeKeys();
  ResourceId[] memory tableIds = new ResourceId[](2);
  bytes[] memory staticData = new bytes[](2);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](2);
  bytes[] memory dynamicData = new bytes[](2);

  tableIds[0] = P_WormholeConfig._tableId;
  tableIds[1] = Wormhole._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_WormholeConfig.encode(1716388961, 69420, 21600);
  (staticData[1], encodedLengths[1], dynamicData[1]) = Wormhole.encode(
    1,
    2,
    0,
    0x69206c6f766520776f726d686f6c657300000000000000000000000000000000
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant ConquestPrototypeId = "Conquest";

function ConquestKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](0);

  return _keyTuple;
}

function ConquestPrototype(IStore store) {
  bytes32[] memory keys = ConquestKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ConquestConfig._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ConquestConfig.encode(
    18000,
    25,
    100,
    10,
    50000000000000000000,
    28800,
    1500000000000000000000,
    33599999999999996
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant BuildingPrototypeId = "Building";

function BuildingKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = BuildingPrototypeId;
  return _keyTuple;
}

function BuildingLevelKeys(uint32 level) pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](2);

  _keyTuple[0] = BuildingPrototypeId;
  _keyTuple[1] = bytes32(uint256(level));
  return _keyTuple;
}
function BuildingPrototype(IStore store) {
  createBuildingLevel0(store);
  createBuildingLevel1(store);
  createBuildingLevel2(store);
  createBuildingLevel3(store);
  createBuildingLevel4(store);
  createBuildingLevel5(store);
  createBuildingLevel6(store);
  createBuildingLevel7(store);
  createBuildingLevel8(store);
  createBuildingLevel9(store);
  createBuildingLevel10(store);
  createBuildingLevel11(store);
  createBuildingLevel12(store);
  createBuildingLevel13(store);
  createBuildingLevel14(store);
  createBuildingLevel15(store);
  createBuildingLevel16(store);
  createBuildingLevel17(store);
  createBuildingLevel18(store);
  createBuildingLevel19(store);
  createBuildingLevel20(store);
  createBuildingLevel21(store);
  createBuildingLevel22(store);
  createBuildingLevel23(store);
  createBuildingLevel24(store);
  createBuildingLevel25(store);
}

/* ----------------------------- LEVEL 0 ----------------------------- */
function createBuildingLevel0(IStore store) {
  bytes32[] memory levelKeys = BuildingLevelKeys(0);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x4e554c4c00000000000000000000000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 1 ----------------------------- */
function createBuildingLevel1(IStore store) {
  bytes32[] memory levelKeys = BuildingLevelKeys(1);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x4d61696e42617365000000000000000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 2 ----------------------------- */
function createBuildingLevel2(IStore store) {
  bytes32[] memory levelKeys = BuildingLevelKeys(2);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x576f726d686f6c65426173650000000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 3 ----------------------------- */
function createBuildingLevel3(IStore store) {
  bytes32[] memory levelKeys = BuildingLevelKeys(3);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x4c69746869756d4d696e65000000000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 4 ----------------------------- */
function createBuildingLevel4(IStore store) {
  bytes32[] memory levelKeys = BuildingLevelKeys(4);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x49726f6e4d696e65000000000000000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 5 ----------------------------- */
function createBuildingLevel5(IStore store) {
  bytes32[] memory levelKeys = BuildingLevelKeys(5);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x436f707065724d696e6500000000000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 6 ----------------------------- */
function createBuildingLevel6(IStore store) {
  bytes32[] memory levelKeys = BuildingLevelKeys(6);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x4b696d6265726c6974654d696e65000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 7 ----------------------------- */
function createBuildingLevel7(IStore store) {
  bytes32[] memory levelKeys = BuildingLevelKeys(7);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x4972696469756d4d696e65000000000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 8 ----------------------------- */
function createBuildingLevel8(IStore store) {
  bytes32[] memory levelKeys = BuildingLevelKeys(8);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x546974616e69756d4d696e650000000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 9 ----------------------------- */
function createBuildingLevel9(IStore store) {
  bytes32[] memory levelKeys = BuildingLevelKeys(9);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x506c6174696e756d4d696e650000000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 10 ----------------------------- */
function createBuildingLevel10(IStore store) {
  bytes32[] memory levelKeys = BuildingLevelKeys(10);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x49726f6e506c617465466163746f727900000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 11 ----------------------------- */
function createBuildingLevel11(IStore store) {
  bytes32[] memory levelKeys = BuildingLevelKeys(11);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x416c6c6f79466163746f72790000000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 12 ----------------------------- */
function createBuildingLevel12(IStore store) {
  bytes32[] memory levelKeys = BuildingLevelKeys(12);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x505643656c6c466163746f727900000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 13 ----------------------------- */
function createBuildingLevel13(IStore store) {
  bytes32[] memory levelKeys = BuildingLevelKeys(13);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x536f6c617250616e656c00000000000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 14 ----------------------------- */
function createBuildingLevel14(IStore store) {
  bytes32[] memory levelKeys = BuildingLevelKeys(14);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x48616e6761720000000000000000000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 15 ----------------------------- */
function createBuildingLevel15(IStore store) {
  bytes32[] memory levelKeys = BuildingLevelKeys(15);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x4761726167650000000000000000000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 16 ----------------------------- */
function createBuildingLevel16(IStore store) {
  bytes32[] memory levelKeys = BuildingLevelKeys(16);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x53746f72616765556e6974000000000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 17 ----------------------------- */
function createBuildingLevel17(IStore store) {
  bytes32[] memory levelKeys = BuildingLevelKeys(17);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x576f726b73686f70000000000000000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 18 ----------------------------- */
function createBuildingLevel18(IStore store) {
  bytes32[] memory levelKeys = BuildingLevelKeys(18);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x44726f6e65466163746f72790000000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 19 ----------------------------- */
function createBuildingLevel19(IStore store) {
  bytes32[] memory levelKeys = BuildingLevelKeys(19);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x537461726d617070657200000000000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 20 ----------------------------- */
function createBuildingLevel20(IStore store) {
  bytes32[] memory levelKeys = BuildingLevelKeys(20);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x53414d0000000000000000000000000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 21 ----------------------------- */
function createBuildingLevel21(IStore store) {
  bytes32[] memory levelKeys = BuildingLevelKeys(21);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x536869656c6447656e657261746f720000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 22 ----------------------------- */
function createBuildingLevel22(IStore store) {
  bytes32[] memory levelKeys = BuildingLevelKeys(22);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x5661756c74000000000000000000000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 23 ----------------------------- */
function createBuildingLevel23(IStore store) {
  bytes32[] memory levelKeys = BuildingLevelKeys(23);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x4d61726b65740000000000000000000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 24 ----------------------------- */
function createBuildingLevel24(IStore store) {
  bytes32[] memory levelKeys = BuildingLevelKeys(24);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x5368697079617264000000000000000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 25 ----------------------------- */
function createBuildingLevel25(IStore store) {
  bytes32[] memory levelKeys = BuildingLevelKeys(25);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x4c454e4754480000000000000000000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant ExpansionPrototypeId = "Expansion";

function ExpansionKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = ExpansionPrototypeId;
  return _keyTuple;
}

function ExpansionLevelKeys(uint32 level) pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](2);

  _keyTuple[0] = ExpansionPrototypeId;
  _keyTuple[1] = bytes32(uint256(level));
  return _keyTuple;
}
function ExpansionPrototype(IStore store) {
  bytes32[] memory keys = ExpansionKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_MaxLevel._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_MaxLevel.encode(8);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);

  createExpansionLevel1(store);
  createExpansionLevel2(store);
  createExpansionLevel3(store);
  createExpansionLevel4(store);
  createExpansionLevel5(store);
  createExpansionLevel6(store);
  createExpansionLevel7(store);
  createExpansionLevel8(store);
}

/* ----------------------------- LEVEL 1 ----------------------------- */
function createExpansionLevel1(IStore store) {
  bytes32[] memory levelKeys = ExpansionLevelKeys(1);
  ResourceId[] memory tableIds = new ResourceId[](2);
  bytes[] memory staticData = new bytes[](2);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](2);
  bytes[] memory dynamicData = new bytes[](2);

  tableIds[0] = Dimensions._tableId;
  tableIds[1] = P_RequiredBaseLevel._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = Dimensions.encode(9, 7);
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredBaseLevel.encode(1);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 2 ----------------------------- */
function createExpansionLevel2(IStore store) {
  bytes32[] memory levelKeys = ExpansionLevelKeys(2);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredUpgradeResources._tableId;
  tableIds[1] = Dimensions._tableId;
  tableIds[2] = P_RequiredBaseLevel._tableId;

  uint8[] memory p_requiredupgraderesources__level_resources = new uint8[](3);
  p_requiredupgraderesources__level_resources[0] = 1;
  p_requiredupgraderesources__level_resources[1] = 2;
  p_requiredupgraderesources__level_resources[2] = 3;
  uint256[] memory p_requiredupgraderesources__level_amounts = new uint256[](3);
  p_requiredupgraderesources__level_amounts[0] = 50000000000000000000;
  p_requiredupgraderesources__level_amounts[1] = 50000000000000000000;
  p_requiredupgraderesources__level_amounts[2] = 50000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredUpgradeResources.encode(
    p_requiredupgraderesources__level_resources,
    p_requiredupgraderesources__level_amounts
  );
  (staticData[1], encodedLengths[1], dynamicData[1]) = Dimensions.encode(11, 9);
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredBaseLevel.encode(2);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 3 ----------------------------- */
function createExpansionLevel3(IStore store) {
  bytes32[] memory levelKeys = ExpansionLevelKeys(3);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredUpgradeResources._tableId;
  tableIds[1] = Dimensions._tableId;
  tableIds[2] = P_RequiredBaseLevel._tableId;

  uint8[] memory p_requiredupgraderesources__level_resources = new uint8[](3);
  p_requiredupgraderesources__level_resources[0] = 1;
  p_requiredupgraderesources__level_resources[1] = 2;
  p_requiredupgraderesources__level_resources[2] = 3;
  uint256[] memory p_requiredupgraderesources__level_amounts = new uint256[](3);
  p_requiredupgraderesources__level_amounts[0] = 400000000000000000000;
  p_requiredupgraderesources__level_amounts[1] = 400000000000000000000;
  p_requiredupgraderesources__level_amounts[2] = 400000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredUpgradeResources.encode(
    p_requiredupgraderesources__level_resources,
    p_requiredupgraderesources__level_amounts
  );
  (staticData[1], encodedLengths[1], dynamicData[1]) = Dimensions.encode(13, 11);
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredBaseLevel.encode(3);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 4 ----------------------------- */
function createExpansionLevel4(IStore store) {
  bytes32[] memory levelKeys = ExpansionLevelKeys(4);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredUpgradeResources._tableId;
  tableIds[1] = Dimensions._tableId;
  tableIds[2] = P_RequiredBaseLevel._tableId;

  uint8[] memory p_requiredupgraderesources__level_resources = new uint8[](3);
  p_requiredupgraderesources__level_resources[0] = 1;
  p_requiredupgraderesources__level_resources[1] = 2;
  p_requiredupgraderesources__level_resources[2] = 3;
  uint256[] memory p_requiredupgraderesources__level_amounts = new uint256[](3);
  p_requiredupgraderesources__level_amounts[0] = 1500000000000000000000;
  p_requiredupgraderesources__level_amounts[1] = 1500000000000000000000;
  p_requiredupgraderesources__level_amounts[2] = 1500000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredUpgradeResources.encode(
    p_requiredupgraderesources__level_resources,
    p_requiredupgraderesources__level_amounts
  );
  (staticData[1], encodedLengths[1], dynamicData[1]) = Dimensions.encode(17, 13);
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredBaseLevel.encode(5);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 5 ----------------------------- */
function createExpansionLevel5(IStore store) {
  bytes32[] memory levelKeys = ExpansionLevelKeys(5);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredUpgradeResources._tableId;
  tableIds[1] = Dimensions._tableId;
  tableIds[2] = P_RequiredBaseLevel._tableId;

  uint8[] memory p_requiredupgraderesources__level_resources = new uint8[](4);
  p_requiredupgraderesources__level_resources[0] = 1;
  p_requiredupgraderesources__level_resources[1] = 2;
  p_requiredupgraderesources__level_resources[2] = 3;
  p_requiredupgraderesources__level_resources[3] = 6;
  uint256[] memory p_requiredupgraderesources__level_amounts = new uint256[](4);
  p_requiredupgraderesources__level_amounts[0] = 3000000000000000000000;
  p_requiredupgraderesources__level_amounts[1] = 3000000000000000000000;
  p_requiredupgraderesources__level_amounts[2] = 3000000000000000000000;
  p_requiredupgraderesources__level_amounts[3] = 300000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredUpgradeResources.encode(
    p_requiredupgraderesources__level_resources,
    p_requiredupgraderesources__level_amounts
  );
  (staticData[1], encodedLengths[1], dynamicData[1]) = Dimensions.encode(21, 15);
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredBaseLevel.encode(8);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 6 ----------------------------- */
function createExpansionLevel6(IStore store) {
  bytes32[] memory levelKeys = ExpansionLevelKeys(6);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredUpgradeResources._tableId;
  tableIds[1] = Dimensions._tableId;
  tableIds[2] = P_RequiredBaseLevel._tableId;

  uint8[] memory p_requiredupgraderesources__level_resources = new uint8[](4);
  p_requiredupgraderesources__level_resources[0] = 1;
  p_requiredupgraderesources__level_resources[1] = 2;
  p_requiredupgraderesources__level_resources[2] = 3;
  p_requiredupgraderesources__level_resources[3] = 6;
  uint256[] memory p_requiredupgraderesources__level_amounts = new uint256[](4);
  p_requiredupgraderesources__level_amounts[0] = 7500000000000000000000;
  p_requiredupgraderesources__level_amounts[1] = 7500000000000000000000;
  p_requiredupgraderesources__level_amounts[2] = 7500000000000000000000;
  p_requiredupgraderesources__level_amounts[3] = 1500000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredUpgradeResources.encode(
    p_requiredupgraderesources__level_resources,
    p_requiredupgraderesources__level_amounts
  );
  (staticData[1], encodedLengths[1], dynamicData[1]) = Dimensions.encode(25, 17);
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredBaseLevel.encode(13);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 7 ----------------------------- */
function createExpansionLevel7(IStore store) {
  bytes32[] memory levelKeys = ExpansionLevelKeys(7);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredUpgradeResources._tableId;
  tableIds[1] = Dimensions._tableId;
  tableIds[2] = P_RequiredBaseLevel._tableId;

  uint8[] memory p_requiredupgraderesources__level_resources = new uint8[](4);
  p_requiredupgraderesources__level_resources[0] = 1;
  p_requiredupgraderesources__level_resources[1] = 2;
  p_requiredupgraderesources__level_resources[2] = 3;
  p_requiredupgraderesources__level_resources[3] = 6;
  uint256[] memory p_requiredupgraderesources__level_amounts = new uint256[](4);
  p_requiredupgraderesources__level_amounts[0] = 24999999999999997902848;
  p_requiredupgraderesources__level_amounts[1] = 24999999999999997902848;
  p_requiredupgraderesources__level_amounts[2] = 24999999999999997902848;
  p_requiredupgraderesources__level_amounts[3] = 3000000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredUpgradeResources.encode(
    p_requiredupgraderesources__level_resources,
    p_requiredupgraderesources__level_amounts
  );
  (staticData[1], encodedLengths[1], dynamicData[1]) = Dimensions.encode(31, 21);
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredBaseLevel.encode(14);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 8 ----------------------------- */
function createExpansionLevel8(IStore store) {
  bytes32[] memory levelKeys = ExpansionLevelKeys(8);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredUpgradeResources._tableId;
  tableIds[1] = Dimensions._tableId;
  tableIds[2] = P_RequiredBaseLevel._tableId;

  uint8[] memory p_requiredupgraderesources__level_resources = new uint8[](4);
  p_requiredupgraderesources__level_resources[0] = 1;
  p_requiredupgraderesources__level_resources[1] = 2;
  p_requiredupgraderesources__level_resources[2] = 3;
  p_requiredupgraderesources__level_resources[3] = 6;
  uint256[] memory p_requiredupgraderesources__level_amounts = new uint256[](4);
  p_requiredupgraderesources__level_amounts[0] = 60000000000000000000000;
  p_requiredupgraderesources__level_amounts[1] = 60000000000000000000000;
  p_requiredupgraderesources__level_amounts[2] = 60000000000000000000000;
  p_requiredupgraderesources__level_amounts[3] = 5000000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredUpgradeResources.encode(
    p_requiredupgraderesources__level_resources,
    p_requiredupgraderesources__level_amounts
  );
  (staticData[1], encodedLengths[1], dynamicData[1]) = Dimensions.encode(37, 25);
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredBaseLevel.encode(15);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant IronSupplyPrototypeId = "IronSupply";

function IronSupplyKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](2);
  _keyTuple[0] = bytes32(uint256(1));
  _keyTuple[1] = bytes32(uint256(6));
  return _keyTuple;
}

function IronSupplyPrototype(IStore store) {
  bytes32[] memory keys = IronSupplyKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = Reserves._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = Reserves.encode(32999999999999997902848, 100000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant CopperSupplyPrototypeId = "CopperSupply";

function CopperSupplyKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](2);
  _keyTuple[0] = bytes32(uint256(2));
  _keyTuple[1] = bytes32(uint256(6));
  return _keyTuple;
}

function CopperSupplyPrototype(IStore store) {
  bytes32[] memory keys = CopperSupplyKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = Reserves._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = Reserves.encode(32999999999999997902848, 100000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant LithiumSupplyPrototypeId = "LithiumSupply";

function LithiumSupplyKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](2);
  _keyTuple[0] = bytes32(uint256(3));
  _keyTuple[1] = bytes32(uint256(6));
  return _keyTuple;
}

function LithiumSupplyPrototype(IStore store) {
  bytes32[] memory keys = LithiumSupplyKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = Reserves._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = Reserves.encode(32999999999999997902848, 100000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant TitaniumSupplyPrototypeId = "TitaniumSupply";

function TitaniumSupplyKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](2);
  _keyTuple[0] = bytes32(uint256(4));
  _keyTuple[1] = bytes32(uint256(6));
  return _keyTuple;
}

function TitaniumSupplyPrototype(IStore store) {
  bytes32[] memory keys = TitaniumSupplyKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = Reserves._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = Reserves.encode(100000000000000000000, 100000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant PlatinumSupplyPrototypeId = "PlatinumSupply";

function PlatinumSupplyKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](2);
  _keyTuple[0] = bytes32(uint256(6));
  _keyTuple[1] = bytes32(uint256(7));
  return _keyTuple;
}

function PlatinumSupplyPrototype(IStore store) {
  bytes32[] memory keys = PlatinumSupplyKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = Reserves._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = Reserves.encode(100000000000000000000, 100000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant IridiumSupplyPrototypeId = "IridiumSupply";

function IridiumSupplyKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](2);
  _keyTuple[0] = bytes32(uint256(5));
  _keyTuple[1] = bytes32(uint256(6));
  return _keyTuple;
}

function IridiumSupplyPrototype(IStore store) {
  bytes32[] memory keys = IridiumSupplyKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = Reserves._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = Reserves.encode(100000000000000000000, 100000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant IronPlateSupplyPrototypeId = "IronPlateSupply";

function IronPlateSupplyKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](2);
  _keyTuple[0] = bytes32(uint256(6));
  _keyTuple[1] = bytes32(uint256(8));
  return _keyTuple;
}

function IronPlateSupplyPrototype(IStore store) {
  bytes32[] memory keys = IronPlateSupplyKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = Reserves._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = Reserves.encode(100000000000000000000, 13699999999999998951424);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant AlloySupplyPrototypeId = "AlloySupply";

function AlloySupplyKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](2);
  _keyTuple[0] = bytes32(uint256(6));
  _keyTuple[1] = bytes32(uint256(9));
  return _keyTuple;
}

function AlloySupplyPrototype(IStore store) {
  bytes32[] memory keys = AlloySupplyKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = Reserves._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = Reserves.encode(100000000000000000000, 13699999999999998951424);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant PVCellSupplyPrototypeId = "PVCellSupply";

function PVCellSupplyKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](2);
  _keyTuple[0] = bytes32(uint256(6));
  _keyTuple[1] = bytes32(uint256(10));
  return _keyTuple;
}

function PVCellSupplyPrototype(IStore store) {
  bytes32[] memory keys = PVCellSupplyKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = Reserves._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = Reserves.encode(100000000000000000000, 13699999999999998951424);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MarketplaceConfigPrototypeId = "MarketplaceConfig";

function MarketplaceConfigKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](0);

  return _keyTuple;
}

function MarketplaceConfigPrototype(IStore store) {
  bytes32[] memory keys = MarketplaceConfigKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_MarketplaceConfig._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_MarketplaceConfig.encode(100, false);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBasePrototypeId = "MainBase";

function MainBaseKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = MainBasePrototypeId;
  return _keyTuple;
}

function MainBaseLevelKeys(uint32 level) pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](2);

  _keyTuple[0] = MainBasePrototypeId;
  _keyTuple[1] = bytes32(uint256(level));
  return _keyTuple;
}
function MainBasePrototype(IStore store) {
  bytes32[] memory keys = MainBaseKeys();
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = Position._tableId;
  tableIds[1] = P_Blueprint._tableId;
  tableIds[2] = P_MaxLevel._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = Position.encode(19, 13, 0x0);
  int32[] memory p_blueprint_value = new int32[](18);
  p_blueprint_value[0] = 0;
  p_blueprint_value[1] = 0;
  p_blueprint_value[2] = 0;
  p_blueprint_value[3] = -1;
  p_blueprint_value[4] = 0;
  p_blueprint_value[5] = -2;
  p_blueprint_value[6] = -1;
  p_blueprint_value[7] = 0;
  p_blueprint_value[8] = -1;
  p_blueprint_value[9] = -1;
  p_blueprint_value[10] = -1;
  p_blueprint_value[11] = -2;
  p_blueprint_value[12] = -2;
  p_blueprint_value[13] = 0;
  p_blueprint_value[14] = -2;
  p_blueprint_value[15] = -1;
  p_blueprint_value[16] = -2;
  p_blueprint_value[17] = -2;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_Blueprint.encode(p_blueprint_value);
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_MaxLevel.encode(15);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);

  createMainBaseLevel1(store);
  createMainBaseLevel2(store);
  createMainBaseLevel3(store);
  createMainBaseLevel4(store);
  createMainBaseLevel5(store);
  createMainBaseLevel6(store);
  createMainBaseLevel7(store);
  createMainBaseLevel8(store);
  createMainBaseLevel9(store);
  createMainBaseLevel10(store);
  createMainBaseLevel11(store);
  createMainBaseLevel12(store);
  createMainBaseLevel13(store);
  createMainBaseLevel14(store);
  createMainBaseLevel15(store);
}

/* ----------------------------- LEVEL 1 ----------------------------- */
function createMainBaseLevel1(IStore store) {
  bytes32[] memory levelKeys = MainBaseLevelKeys(1);
  ResourceId[] memory tableIds = new ResourceId[](2);
  bytes[] memory staticData = new bytes[](2);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](2);
  bytes[] memory dynamicData = new bytes[](2);

  tableIds[0] = P_ListMaxResourceUpgrades._tableId;
  tableIds[1] = P_Production._tableId;

  uint8[] memory p_listmaxresourceupgrades__level_value = new uint8[](5);
  p_listmaxresourceupgrades__level_value[0] = 1;
  p_listmaxresourceupgrades__level_value[1] = 2;
  p_listmaxresourceupgrades__level_value[2] = 3;
  p_listmaxresourceupgrades__level_value[3] = 18;
  p_listmaxresourceupgrades__level_value[4] = 17;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ListMaxResourceUpgrades.encode(
    p_listmaxresourceupgrades__level_value
  );
  uint8[] memory p_production__level_resources = new uint8[](3);
  p_production__level_resources[0] = 18;
  p_production__level_resources[1] = 17;
  p_production__level_resources[2] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](3);
  p_production__level_amounts[0] = 16799999999999998;
  p_production__level_amounts[1] = 3000000000000000;
  p_production__level_amounts[2] = 25;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 2 ----------------------------- */
function createMainBaseLevel2(IStore store) {
  bytes32[] memory levelKeys = MainBaseLevelKeys(2);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredResources._tableId;
  tableIds[1] = P_ListMaxResourceUpgrades._tableId;
  tableIds[2] = P_Production._tableId;

  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 2;
  p_requiredresources__level_resources[2] = 3;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 50000000000000000000;
  p_requiredresources__level_amounts[1] = 50000000000000000000;
  p_requiredresources__level_amounts[2] = 50000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_listmaxresourceupgrades__level_value = new uint8[](5);
  p_listmaxresourceupgrades__level_value[0] = 1;
  p_listmaxresourceupgrades__level_value[1] = 2;
  p_listmaxresourceupgrades__level_value[2] = 3;
  p_listmaxresourceupgrades__level_value[3] = 18;
  p_listmaxresourceupgrades__level_value[4] = 17;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_ListMaxResourceUpgrades.encode(
    p_listmaxresourceupgrades__level_value
  );
  uint8[] memory p_production__level_resources = new uint8[](3);
  p_production__level_resources[0] = 18;
  p_production__level_resources[1] = 17;
  p_production__level_resources[2] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](3);
  p_production__level_amounts[0] = 16799999999999998;
  p_production__level_amounts[1] = 6000000000000000;
  p_production__level_amounts[2] = 50;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 3 ----------------------------- */
function createMainBaseLevel3(IStore store) {
  bytes32[] memory levelKeys = MainBaseLevelKeys(3);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredResources._tableId;
  tableIds[1] = P_ListMaxResourceUpgrades._tableId;
  tableIds[2] = P_Production._tableId;

  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 2;
  p_requiredresources__level_resources[2] = 3;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 400000000000000000000;
  p_requiredresources__level_amounts[1] = 400000000000000000000;
  p_requiredresources__level_amounts[2] = 400000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_listmaxresourceupgrades__level_value = new uint8[](5);
  p_listmaxresourceupgrades__level_value[0] = 1;
  p_listmaxresourceupgrades__level_value[1] = 2;
  p_listmaxresourceupgrades__level_value[2] = 3;
  p_listmaxresourceupgrades__level_value[3] = 18;
  p_listmaxresourceupgrades__level_value[4] = 17;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_ListMaxResourceUpgrades.encode(
    p_listmaxresourceupgrades__level_value
  );
  uint8[] memory p_production__level_resources = new uint8[](3);
  p_production__level_resources[0] = 18;
  p_production__level_resources[1] = 17;
  p_production__level_resources[2] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](3);
  p_production__level_amounts[0] = 16799999999999998;
  p_production__level_amounts[1] = 8999999999999999;
  p_production__level_amounts[2] = 50;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 4 ----------------------------- */
function createMainBaseLevel4(IStore store) {
  bytes32[] memory levelKeys = MainBaseLevelKeys(4);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredResources._tableId;
  tableIds[1] = P_ListMaxResourceUpgrades._tableId;
  tableIds[2] = P_Production._tableId;

  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 2;
  p_requiredresources__level_resources[2] = 3;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 800000000000000000000;
  p_requiredresources__level_amounts[1] = 800000000000000000000;
  p_requiredresources__level_amounts[2] = 800000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_listmaxresourceupgrades__level_value = new uint8[](5);
  p_listmaxresourceupgrades__level_value[0] = 1;
  p_listmaxresourceupgrades__level_value[1] = 2;
  p_listmaxresourceupgrades__level_value[2] = 3;
  p_listmaxresourceupgrades__level_value[3] = 18;
  p_listmaxresourceupgrades__level_value[4] = 17;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_ListMaxResourceUpgrades.encode(
    p_listmaxresourceupgrades__level_value
  );
  uint8[] memory p_production__level_resources = new uint8[](3);
  p_production__level_resources[0] = 18;
  p_production__level_resources[1] = 17;
  p_production__level_resources[2] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](3);
  p_production__level_amounts[0] = 16799999999999998;
  p_production__level_amounts[1] = 12000000000000000;
  p_production__level_amounts[2] = 100;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 5 ----------------------------- */
function createMainBaseLevel5(IStore store) {
  bytes32[] memory levelKeys = MainBaseLevelKeys(5);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredResources._tableId;
  tableIds[1] = P_ListMaxResourceUpgrades._tableId;
  tableIds[2] = P_Production._tableId;

  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 2;
  p_requiredresources__level_resources[2] = 3;
  p_requiredresources__level_resources[3] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 1500000000000000000000;
  p_requiredresources__level_amounts[1] = 1500000000000000000000;
  p_requiredresources__level_amounts[2] = 1500000000000000000000;
  p_requiredresources__level_amounts[3] = 50000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_listmaxresourceupgrades__level_value = new uint8[](8);
  p_listmaxresourceupgrades__level_value[0] = 1;
  p_listmaxresourceupgrades__level_value[1] = 2;
  p_listmaxresourceupgrades__level_value[2] = 3;
  p_listmaxresourceupgrades__level_value[3] = 8;
  p_listmaxresourceupgrades__level_value[4] = 9;
  p_listmaxresourceupgrades__level_value[5] = 10;
  p_listmaxresourceupgrades__level_value[6] = 18;
  p_listmaxresourceupgrades__level_value[7] = 17;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_ListMaxResourceUpgrades.encode(
    p_listmaxresourceupgrades__level_value
  );
  uint8[] memory p_production__level_resources = new uint8[](3);
  p_production__level_resources[0] = 18;
  p_production__level_resources[1] = 17;
  p_production__level_resources[2] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](3);
  p_production__level_amounts[0] = 16799999999999998;
  p_production__level_amounts[1] = 15000000000000000;
  p_production__level_amounts[2] = 100;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 6 ----------------------------- */
function createMainBaseLevel6(IStore store) {
  bytes32[] memory levelKeys = MainBaseLevelKeys(6);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredResources._tableId;
  tableIds[1] = P_ListMaxResourceUpgrades._tableId;
  tableIds[2] = P_Production._tableId;

  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 8;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 10;
  p_requiredresources__level_resources[3] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 800000000000000000000;
  p_requiredresources__level_amounts[1] = 800000000000000000000;
  p_requiredresources__level_amounts[2] = 800000000000000000000;
  p_requiredresources__level_amounts[3] = 50000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_listmaxresourceupgrades__level_value = new uint8[](8);
  p_listmaxresourceupgrades__level_value[0] = 1;
  p_listmaxresourceupgrades__level_value[1] = 2;
  p_listmaxresourceupgrades__level_value[2] = 3;
  p_listmaxresourceupgrades__level_value[3] = 8;
  p_listmaxresourceupgrades__level_value[4] = 9;
  p_listmaxresourceupgrades__level_value[5] = 10;
  p_listmaxresourceupgrades__level_value[6] = 18;
  p_listmaxresourceupgrades__level_value[7] = 17;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_ListMaxResourceUpgrades.encode(
    p_listmaxresourceupgrades__level_value
  );
  uint8[] memory p_production__level_resources = new uint8[](3);
  p_production__level_resources[0] = 18;
  p_production__level_resources[1] = 17;
  p_production__level_resources[2] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](3);
  p_production__level_amounts[0] = 16799999999999998;
  p_production__level_amounts[1] = 19000000000000000;
  p_production__level_amounts[2] = 175;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 7 ----------------------------- */
function createMainBaseLevel7(IStore store) {
  bytes32[] memory levelKeys = MainBaseLevelKeys(7);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredResources._tableId;
  tableIds[1] = P_ListMaxResourceUpgrades._tableId;
  tableIds[2] = P_Production._tableId;

  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 8;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 10;
  p_requiredresources__level_resources[3] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 1500000000000000000000;
  p_requiredresources__level_amounts[1] = 1500000000000000000000;
  p_requiredresources__level_amounts[2] = 1500000000000000000000;
  p_requiredresources__level_amounts[3] = 50000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_listmaxresourceupgrades__level_value = new uint8[](12);
  p_listmaxresourceupgrades__level_value[0] = 1;
  p_listmaxresourceupgrades__level_value[1] = 2;
  p_listmaxresourceupgrades__level_value[2] = 3;
  p_listmaxresourceupgrades__level_value[3] = 8;
  p_listmaxresourceupgrades__level_value[4] = 9;
  p_listmaxresourceupgrades__level_value[5] = 10;
  p_listmaxresourceupgrades__level_value[6] = 4;
  p_listmaxresourceupgrades__level_value[7] = 5;
  p_listmaxresourceupgrades__level_value[8] = 7;
  p_listmaxresourceupgrades__level_value[9] = 6;
  p_listmaxresourceupgrades__level_value[10] = 18;
  p_listmaxresourceupgrades__level_value[11] = 17;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_ListMaxResourceUpgrades.encode(
    p_listmaxresourceupgrades__level_value
  );
  uint8[] memory p_production__level_resources = new uint8[](3);
  p_production__level_resources[0] = 18;
  p_production__level_resources[1] = 17;
  p_production__level_resources[2] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](3);
  p_production__level_amounts[0] = 16799999999999998;
  p_production__level_amounts[1] = 23000000000000000;
  p_production__level_amounts[2] = 175;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 8 ----------------------------- */
function createMainBaseLevel8(IStore store) {
  bytes32[] memory levelKeys = MainBaseLevelKeys(8);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredResources._tableId;
  tableIds[1] = P_ListMaxResourceUpgrades._tableId;
  tableIds[2] = P_Production._tableId;

  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 8;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 10;
  p_requiredresources__level_resources[3] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 2500000000000000000000;
  p_requiredresources__level_amounts[1] = 2500000000000000000000;
  p_requiredresources__level_amounts[2] = 2500000000000000000000;
  p_requiredresources__level_amounts[3] = 100000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_listmaxresourceupgrades__level_value = new uint8[](12);
  p_listmaxresourceupgrades__level_value[0] = 1;
  p_listmaxresourceupgrades__level_value[1] = 2;
  p_listmaxresourceupgrades__level_value[2] = 3;
  p_listmaxresourceupgrades__level_value[3] = 8;
  p_listmaxresourceupgrades__level_value[4] = 9;
  p_listmaxresourceupgrades__level_value[5] = 10;
  p_listmaxresourceupgrades__level_value[6] = 4;
  p_listmaxresourceupgrades__level_value[7] = 5;
  p_listmaxresourceupgrades__level_value[8] = 7;
  p_listmaxresourceupgrades__level_value[9] = 6;
  p_listmaxresourceupgrades__level_value[10] = 18;
  p_listmaxresourceupgrades__level_value[11] = 17;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_ListMaxResourceUpgrades.encode(
    p_listmaxresourceupgrades__level_value
  );
  uint8[] memory p_production__level_resources = new uint8[](3);
  p_production__level_resources[0] = 18;
  p_production__level_resources[1] = 17;
  p_production__level_resources[2] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](3);
  p_production__level_amounts[0] = 16799999999999998;
  p_production__level_amounts[1] = 27000000000000000;
  p_production__level_amounts[2] = 250;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 9 ----------------------------- */
function createMainBaseLevel9(IStore store) {
  bytes32[] memory levelKeys = MainBaseLevelKeys(9);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredResources._tableId;
  tableIds[1] = P_ListMaxResourceUpgrades._tableId;
  tableIds[2] = P_Production._tableId;

  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 8;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 10;
  p_requiredresources__level_resources[3] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 4000000000000000000000;
  p_requiredresources__level_amounts[1] = 4000000000000000000000;
  p_requiredresources__level_amounts[2] = 4000000000000000000000;
  p_requiredresources__level_amounts[3] = 250000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_listmaxresourceupgrades__level_value = new uint8[](12);
  p_listmaxresourceupgrades__level_value[0] = 1;
  p_listmaxresourceupgrades__level_value[1] = 2;
  p_listmaxresourceupgrades__level_value[2] = 3;
  p_listmaxresourceupgrades__level_value[3] = 8;
  p_listmaxresourceupgrades__level_value[4] = 9;
  p_listmaxresourceupgrades__level_value[5] = 10;
  p_listmaxresourceupgrades__level_value[6] = 4;
  p_listmaxresourceupgrades__level_value[7] = 5;
  p_listmaxresourceupgrades__level_value[8] = 7;
  p_listmaxresourceupgrades__level_value[9] = 6;
  p_listmaxresourceupgrades__level_value[10] = 18;
  p_listmaxresourceupgrades__level_value[11] = 17;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_ListMaxResourceUpgrades.encode(
    p_listmaxresourceupgrades__level_value
  );
  uint8[] memory p_production__level_resources = new uint8[](3);
  p_production__level_resources[0] = 18;
  p_production__level_resources[1] = 17;
  p_production__level_resources[2] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](3);
  p_production__level_amounts[0] = 16799999999999998;
  p_production__level_amounts[1] = 31000000000000000;
  p_production__level_amounts[2] = 250;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 10 ----------------------------- */
function createMainBaseLevel10(IStore store) {
  bytes32[] memory levelKeys = MainBaseLevelKeys(10);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredResources._tableId;
  tableIds[1] = P_ListMaxResourceUpgrades._tableId;
  tableIds[2] = P_Production._tableId;

  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 4;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 7;
  p_requiredresources__level_resources[3] = 6;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 500000000000000000000;
  p_requiredresources__level_amounts[1] = 500000000000000000000;
  p_requiredresources__level_amounts[2] = 500000000000000000000;
  p_requiredresources__level_amounts[3] = 100000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_listmaxresourceupgrades__level_value = new uint8[](12);
  p_listmaxresourceupgrades__level_value[0] = 1;
  p_listmaxresourceupgrades__level_value[1] = 2;
  p_listmaxresourceupgrades__level_value[2] = 3;
  p_listmaxresourceupgrades__level_value[3] = 8;
  p_listmaxresourceupgrades__level_value[4] = 9;
  p_listmaxresourceupgrades__level_value[5] = 10;
  p_listmaxresourceupgrades__level_value[6] = 4;
  p_listmaxresourceupgrades__level_value[7] = 5;
  p_listmaxresourceupgrades__level_value[8] = 7;
  p_listmaxresourceupgrades__level_value[9] = 6;
  p_listmaxresourceupgrades__level_value[10] = 18;
  p_listmaxresourceupgrades__level_value[11] = 17;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_ListMaxResourceUpgrades.encode(
    p_listmaxresourceupgrades__level_value
  );
  uint8[] memory p_production__level_resources = new uint8[](3);
  p_production__level_resources[0] = 18;
  p_production__level_resources[1] = 17;
  p_production__level_resources[2] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](3);
  p_production__level_amounts[0] = 16799999999999998;
  p_production__level_amounts[1] = 35000000000000004;
  p_production__level_amounts[2] = 325;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 11 ----------------------------- */
function createMainBaseLevel11(IStore store) {
  bytes32[] memory levelKeys = MainBaseLevelKeys(11);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredResources._tableId;
  tableIds[1] = P_ListMaxResourceUpgrades._tableId;
  tableIds[2] = P_Production._tableId;

  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 4;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 7;
  p_requiredresources__level_resources[3] = 6;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 1200000000000000000000;
  p_requiredresources__level_amounts[1] = 1200000000000000000000;
  p_requiredresources__level_amounts[2] = 1200000000000000000000;
  p_requiredresources__level_amounts[3] = 200000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_listmaxresourceupgrades__level_value = new uint8[](12);
  p_listmaxresourceupgrades__level_value[0] = 1;
  p_listmaxresourceupgrades__level_value[1] = 2;
  p_listmaxresourceupgrades__level_value[2] = 3;
  p_listmaxresourceupgrades__level_value[3] = 8;
  p_listmaxresourceupgrades__level_value[4] = 9;
  p_listmaxresourceupgrades__level_value[5] = 10;
  p_listmaxresourceupgrades__level_value[6] = 4;
  p_listmaxresourceupgrades__level_value[7] = 5;
  p_listmaxresourceupgrades__level_value[8] = 7;
  p_listmaxresourceupgrades__level_value[9] = 6;
  p_listmaxresourceupgrades__level_value[10] = 18;
  p_listmaxresourceupgrades__level_value[11] = 17;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_ListMaxResourceUpgrades.encode(
    p_listmaxresourceupgrades__level_value
  );
  uint8[] memory p_production__level_resources = new uint8[](3);
  p_production__level_resources[0] = 18;
  p_production__level_resources[1] = 17;
  p_production__level_resources[2] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](3);
  p_production__level_amounts[0] = 16799999999999998;
  p_production__level_amounts[1] = 39000000000000000;
  p_production__level_amounts[2] = 325;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 12 ----------------------------- */
function createMainBaseLevel12(IStore store) {
  bytes32[] memory levelKeys = MainBaseLevelKeys(12);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredResources._tableId;
  tableIds[1] = P_ListMaxResourceUpgrades._tableId;
  tableIds[2] = P_Production._tableId;

  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 4;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 7;
  p_requiredresources__level_resources[3] = 6;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 2400000000000000000000;
  p_requiredresources__level_amounts[1] = 2400000000000000000000;
  p_requiredresources__level_amounts[2] = 2400000000000000000000;
  p_requiredresources__level_amounts[3] = 400000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_listmaxresourceupgrades__level_value = new uint8[](12);
  p_listmaxresourceupgrades__level_value[0] = 1;
  p_listmaxresourceupgrades__level_value[1] = 2;
  p_listmaxresourceupgrades__level_value[2] = 3;
  p_listmaxresourceupgrades__level_value[3] = 8;
  p_listmaxresourceupgrades__level_value[4] = 9;
  p_listmaxresourceupgrades__level_value[5] = 10;
  p_listmaxresourceupgrades__level_value[6] = 4;
  p_listmaxresourceupgrades__level_value[7] = 5;
  p_listmaxresourceupgrades__level_value[8] = 7;
  p_listmaxresourceupgrades__level_value[9] = 6;
  p_listmaxresourceupgrades__level_value[10] = 18;
  p_listmaxresourceupgrades__level_value[11] = 17;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_ListMaxResourceUpgrades.encode(
    p_listmaxresourceupgrades__level_value
  );
  uint8[] memory p_production__level_resources = new uint8[](3);
  p_production__level_resources[0] = 18;
  p_production__level_resources[1] = 17;
  p_production__level_resources[2] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](3);
  p_production__level_amounts[0] = 16799999999999998;
  p_production__level_amounts[1] = 43000000000000000;
  p_production__level_amounts[2] = 400;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 13 ----------------------------- */
function createMainBaseLevel13(IStore store) {
  bytes32[] memory levelKeys = MainBaseLevelKeys(13);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredResources._tableId;
  tableIds[1] = P_ListMaxResourceUpgrades._tableId;
  tableIds[2] = P_Production._tableId;

  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 4;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 7;
  p_requiredresources__level_resources[3] = 6;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 4000000000000000000000;
  p_requiredresources__level_amounts[1] = 4000000000000000000000;
  p_requiredresources__level_amounts[2] = 4000000000000000000000;
  p_requiredresources__level_amounts[3] = 800000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_listmaxresourceupgrades__level_value = new uint8[](12);
  p_listmaxresourceupgrades__level_value[0] = 1;
  p_listmaxresourceupgrades__level_value[1] = 2;
  p_listmaxresourceupgrades__level_value[2] = 3;
  p_listmaxresourceupgrades__level_value[3] = 8;
  p_listmaxresourceupgrades__level_value[4] = 9;
  p_listmaxresourceupgrades__level_value[5] = 10;
  p_listmaxresourceupgrades__level_value[6] = 4;
  p_listmaxresourceupgrades__level_value[7] = 5;
  p_listmaxresourceupgrades__level_value[8] = 7;
  p_listmaxresourceupgrades__level_value[9] = 6;
  p_listmaxresourceupgrades__level_value[10] = 18;
  p_listmaxresourceupgrades__level_value[11] = 17;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_ListMaxResourceUpgrades.encode(
    p_listmaxresourceupgrades__level_value
  );
  uint8[] memory p_production__level_resources = new uint8[](3);
  p_production__level_resources[0] = 18;
  p_production__level_resources[1] = 17;
  p_production__level_resources[2] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](3);
  p_production__level_amounts[0] = 16799999999999998;
  p_production__level_amounts[1] = 47000000000000000;
  p_production__level_amounts[2] = 400;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 14 ----------------------------- */
function createMainBaseLevel14(IStore store) {
  bytes32[] memory levelKeys = MainBaseLevelKeys(14);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredResources._tableId;
  tableIds[1] = P_ListMaxResourceUpgrades._tableId;
  tableIds[2] = P_Production._tableId;

  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 4;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 7;
  p_requiredresources__level_resources[3] = 6;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 6000000000000000000000;
  p_requiredresources__level_amounts[1] = 6000000000000000000000;
  p_requiredresources__level_amounts[2] = 6000000000000000000000;
  p_requiredresources__level_amounts[3] = 1200000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_listmaxresourceupgrades__level_value = new uint8[](12);
  p_listmaxresourceupgrades__level_value[0] = 1;
  p_listmaxresourceupgrades__level_value[1] = 2;
  p_listmaxresourceupgrades__level_value[2] = 3;
  p_listmaxresourceupgrades__level_value[3] = 8;
  p_listmaxresourceupgrades__level_value[4] = 9;
  p_listmaxresourceupgrades__level_value[5] = 10;
  p_listmaxresourceupgrades__level_value[6] = 4;
  p_listmaxresourceupgrades__level_value[7] = 5;
  p_listmaxresourceupgrades__level_value[8] = 7;
  p_listmaxresourceupgrades__level_value[9] = 6;
  p_listmaxresourceupgrades__level_value[10] = 18;
  p_listmaxresourceupgrades__level_value[11] = 17;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_ListMaxResourceUpgrades.encode(
    p_listmaxresourceupgrades__level_value
  );
  uint8[] memory p_production__level_resources = new uint8[](3);
  p_production__level_resources[0] = 18;
  p_production__level_resources[1] = 17;
  p_production__level_resources[2] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](3);
  p_production__level_amounts[0] = 16799999999999998;
  p_production__level_amounts[1] = 51000000000000000;
  p_production__level_amounts[2] = 500;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 15 ----------------------------- */
function createMainBaseLevel15(IStore store) {
  bytes32[] memory levelKeys = MainBaseLevelKeys(15);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredResources._tableId;
  tableIds[1] = P_ListMaxResourceUpgrades._tableId;
  tableIds[2] = P_Production._tableId;

  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 4;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 7;
  p_requiredresources__level_resources[3] = 6;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 10000000000000000000000;
  p_requiredresources__level_amounts[1] = 10000000000000000000000;
  p_requiredresources__level_amounts[2] = 10000000000000000000000;
  p_requiredresources__level_amounts[3] = 2000000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_listmaxresourceupgrades__level_value = new uint8[](12);
  p_listmaxresourceupgrades__level_value[0] = 1;
  p_listmaxresourceupgrades__level_value[1] = 2;
  p_listmaxresourceupgrades__level_value[2] = 3;
  p_listmaxresourceupgrades__level_value[3] = 8;
  p_listmaxresourceupgrades__level_value[4] = 9;
  p_listmaxresourceupgrades__level_value[5] = 10;
  p_listmaxresourceupgrades__level_value[6] = 4;
  p_listmaxresourceupgrades__level_value[7] = 5;
  p_listmaxresourceupgrades__level_value[8] = 7;
  p_listmaxresourceupgrades__level_value[9] = 6;
  p_listmaxresourceupgrades__level_value[10] = 18;
  p_listmaxresourceupgrades__level_value[11] = 17;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_ListMaxResourceUpgrades.encode(
    p_listmaxresourceupgrades__level_value
  );
  uint8[] memory p_production__level_resources = new uint8[](3);
  p_production__level_resources[0] = 18;
  p_production__level_resources[1] = 17;
  p_production__level_resources[2] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](3);
  p_production__level_amounts[0] = 16799999999999998;
  p_production__level_amounts[1] = 60000000000000000;
  p_production__level_amounts[2] = 600;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseIronL1PrototypeId = "MainBaseIronL1";

function MainBaseIronL1Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(1));
  _keyTuple[2] = bytes32(uint256(1));
  return _keyTuple;
}

function MainBaseIronL1Prototype(IStore store) {
  bytes32[] memory keys = MainBaseIronL1Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(250000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseCopperL1PrototypeId = "MainBaseCopperL1";

function MainBaseCopperL1Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(2));
  _keyTuple[2] = bytes32(uint256(1));
  return _keyTuple;
}

function MainBaseCopperL1Prototype(IStore store) {
  bytes32[] memory keys = MainBaseCopperL1Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(250000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseLithiumL1PrototypeId = "MainBaseLithiumL1";

function MainBaseLithiumL1Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(3));
  _keyTuple[2] = bytes32(uint256(1));
  return _keyTuple;
}

function MainBaseLithiumL1Prototype(IStore store) {
  bytes32[] memory keys = MainBaseLithiumL1Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(250000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseR_EncryptionL1PrototypeId = "MainBaseR_EncryptionL1";

function MainBaseR_EncryptionL1Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(18));
  _keyTuple[2] = bytes32(uint256(1));
  return _keyTuple;
}

function MainBaseR_EncryptionL1Prototype(IStore store) {
  bytes32[] memory keys = MainBaseR_EncryptionL1Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(3000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseR_HPL1PrototypeId = "MainBaseR_HPL1";

function MainBaseR_HPL1Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(17));
  _keyTuple[2] = bytes32(uint256(1));
  return _keyTuple;
}

function MainBaseR_HPL1Prototype(IStore store) {
  bytes32[] memory keys = MainBaseR_HPL1Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(100000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseIronL2PrototypeId = "MainBaseIronL2";

function MainBaseIronL2Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(1));
  _keyTuple[2] = bytes32(uint256(2));
  return _keyTuple;
}

function MainBaseIronL2Prototype(IStore store) {
  bytes32[] memory keys = MainBaseIronL2Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(500000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseCopperL2PrototypeId = "MainBaseCopperL2";

function MainBaseCopperL2Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(2));
  _keyTuple[2] = bytes32(uint256(2));
  return _keyTuple;
}

function MainBaseCopperL2Prototype(IStore store) {
  bytes32[] memory keys = MainBaseCopperL2Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(500000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseLithiumL2PrototypeId = "MainBaseLithiumL2";

function MainBaseLithiumL2Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(3));
  _keyTuple[2] = bytes32(uint256(2));
  return _keyTuple;
}

function MainBaseLithiumL2Prototype(IStore store) {
  bytes32[] memory keys = MainBaseLithiumL2Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(500000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseR_EncryptionL2PrototypeId = "MainBaseR_EncryptionL2";

function MainBaseR_EncryptionL2Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(18));
  _keyTuple[2] = bytes32(uint256(2));
  return _keyTuple;
}

function MainBaseR_EncryptionL2Prototype(IStore store) {
  bytes32[] memory keys = MainBaseR_EncryptionL2Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(3150000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseR_HPL2PrototypeId = "MainBaseR_HPL2";

function MainBaseR_HPL2Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(17));
  _keyTuple[2] = bytes32(uint256(2));
  return _keyTuple;
}

function MainBaseR_HPL2Prototype(IStore store) {
  bytes32[] memory keys = MainBaseR_HPL2Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(250000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseIronL3PrototypeId = "MainBaseIronL3";

function MainBaseIronL3Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(1));
  _keyTuple[2] = bytes32(uint256(3));
  return _keyTuple;
}

function MainBaseIronL3Prototype(IStore store) {
  bytes32[] memory keys = MainBaseIronL3Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(750000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseCopperL3PrototypeId = "MainBaseCopperL3";

function MainBaseCopperL3Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(2));
  _keyTuple[2] = bytes32(uint256(3));
  return _keyTuple;
}

function MainBaseCopperL3Prototype(IStore store) {
  bytes32[] memory keys = MainBaseCopperL3Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(750000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseLithiumL3PrototypeId = "MainBaseLithiumL3";

function MainBaseLithiumL3Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(3));
  _keyTuple[2] = bytes32(uint256(3));
  return _keyTuple;
}

function MainBaseLithiumL3Prototype(IStore store) {
  bytes32[] memory keys = MainBaseLithiumL3Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(750000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseR_EncryptionL3PrototypeId = "MainBaseR_EncryptionL3";

function MainBaseR_EncryptionL3Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(18));
  _keyTuple[2] = bytes32(uint256(3));
  return _keyTuple;
}

function MainBaseR_EncryptionL3Prototype(IStore store) {
  bytes32[] memory keys = MainBaseR_EncryptionL3Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(3300000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseR_HPL3PrototypeId = "MainBaseR_HPL3";

function MainBaseR_HPL3Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(17));
  _keyTuple[2] = bytes32(uint256(3));
  return _keyTuple;
}

function MainBaseR_HPL3Prototype(IStore store) {
  bytes32[] memory keys = MainBaseR_HPL3Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(500000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseIronL4PrototypeId = "MainBaseIronL4";

function MainBaseIronL4Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(1));
  _keyTuple[2] = bytes32(uint256(4));
  return _keyTuple;
}

function MainBaseIronL4Prototype(IStore store) {
  bytes32[] memory keys = MainBaseIronL4Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseCopperL4PrototypeId = "MainBaseCopperL4";

function MainBaseCopperL4Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(2));
  _keyTuple[2] = bytes32(uint256(4));
  return _keyTuple;
}

function MainBaseCopperL4Prototype(IStore store) {
  bytes32[] memory keys = MainBaseCopperL4Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseLithiumL4PrototypeId = "MainBaseLithiumL4";

function MainBaseLithiumL4Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(3));
  _keyTuple[2] = bytes32(uint256(4));
  return _keyTuple;
}

function MainBaseLithiumL4Prototype(IStore store) {
  bytes32[] memory keys = MainBaseLithiumL4Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseR_EncryptionL4PrototypeId = "MainBaseR_EncryptionL4";

function MainBaseR_EncryptionL4Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(18));
  _keyTuple[2] = bytes32(uint256(4));
  return _keyTuple;
}

function MainBaseR_EncryptionL4Prototype(IStore store) {
  bytes32[] memory keys = MainBaseR_EncryptionL4Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(3450000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseR_HPL4PrototypeId = "MainBaseR_HPL4";

function MainBaseR_HPL4Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(17));
  _keyTuple[2] = bytes32(uint256(4));
  return _keyTuple;
}

function MainBaseR_HPL4Prototype(IStore store) {
  bytes32[] memory keys = MainBaseR_HPL4Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseIronL5PrototypeId = "MainBaseIronL5";

function MainBaseIronL5Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(1));
  _keyTuple[2] = bytes32(uint256(5));
  return _keyTuple;
}

function MainBaseIronL5Prototype(IStore store) {
  bytes32[] memory keys = MainBaseIronL5Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1500000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseCopperL5PrototypeId = "MainBaseCopperL5";

function MainBaseCopperL5Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(2));
  _keyTuple[2] = bytes32(uint256(5));
  return _keyTuple;
}

function MainBaseCopperL5Prototype(IStore store) {
  bytes32[] memory keys = MainBaseCopperL5Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1500000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseLithiumL5PrototypeId = "MainBaseLithiumL5";

function MainBaseLithiumL5Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(3));
  _keyTuple[2] = bytes32(uint256(5));
  return _keyTuple;
}

function MainBaseLithiumL5Prototype(IStore store) {
  bytes32[] memory keys = MainBaseLithiumL5Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1500000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseIronPlateL5PrototypeId = "MainBaseIronPlateL5";

function MainBaseIronPlateL5Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(8));
  _keyTuple[2] = bytes32(uint256(5));
  return _keyTuple;
}

function MainBaseIronPlateL5Prototype(IStore store) {
  bytes32[] memory keys = MainBaseIronPlateL5Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseAlloyL5PrototypeId = "MainBaseAlloyL5";

function MainBaseAlloyL5Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(9));
  _keyTuple[2] = bytes32(uint256(5));
  return _keyTuple;
}

function MainBaseAlloyL5Prototype(IStore store) {
  bytes32[] memory keys = MainBaseAlloyL5Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBasePVCellL5PrototypeId = "MainBasePVCellL5";

function MainBasePVCellL5Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(10));
  _keyTuple[2] = bytes32(uint256(5));
  return _keyTuple;
}

function MainBasePVCellL5Prototype(IStore store) {
  bytes32[] memory keys = MainBasePVCellL5Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseR_EncryptionL5PrototypeId = "MainBaseR_EncryptionL5";

function MainBaseR_EncryptionL5Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(18));
  _keyTuple[2] = bytes32(uint256(5));
  return _keyTuple;
}

function MainBaseR_EncryptionL5Prototype(IStore store) {
  bytes32[] memory keys = MainBaseR_EncryptionL5Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(3600000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseR_HPL5PrototypeId = "MainBaseR_HPL5";

function MainBaseR_HPL5Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(17));
  _keyTuple[2] = bytes32(uint256(5));
  return _keyTuple;
}

function MainBaseR_HPL5Prototype(IStore store) {
  bytes32[] memory keys = MainBaseR_HPL5Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(2000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseIronL6PrototypeId = "MainBaseIronL6";

function MainBaseIronL6Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(1));
  _keyTuple[2] = bytes32(uint256(6));
  return _keyTuple;
}

function MainBaseIronL6Prototype(IStore store) {
  bytes32[] memory keys = MainBaseIronL6Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(3000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseCopperL6PrototypeId = "MainBaseCopperL6";

function MainBaseCopperL6Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(2));
  _keyTuple[2] = bytes32(uint256(6));
  return _keyTuple;
}

function MainBaseCopperL6Prototype(IStore store) {
  bytes32[] memory keys = MainBaseCopperL6Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(3000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseLithiumL6PrototypeId = "MainBaseLithiumL6";

function MainBaseLithiumL6Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(3));
  _keyTuple[2] = bytes32(uint256(6));
  return _keyTuple;
}

function MainBaseLithiumL6Prototype(IStore store) {
  bytes32[] memory keys = MainBaseLithiumL6Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(3000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseIronPlateL6PrototypeId = "MainBaseIronPlateL6";

function MainBaseIronPlateL6Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(8));
  _keyTuple[2] = bytes32(uint256(6));
  return _keyTuple;
}

function MainBaseIronPlateL6Prototype(IStore store) {
  bytes32[] memory keys = MainBaseIronPlateL6Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1500000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseAlloyL6PrototypeId = "MainBaseAlloyL6";

function MainBaseAlloyL6Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(9));
  _keyTuple[2] = bytes32(uint256(6));
  return _keyTuple;
}

function MainBaseAlloyL6Prototype(IStore store) {
  bytes32[] memory keys = MainBaseAlloyL6Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1500000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBasePVCellL6PrototypeId = "MainBasePVCellL6";

function MainBasePVCellL6Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(10));
  _keyTuple[2] = bytes32(uint256(6));
  return _keyTuple;
}

function MainBasePVCellL6Prototype(IStore store) {
  bytes32[] memory keys = MainBasePVCellL6Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1500000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseR_EncryptionL6PrototypeId = "MainBaseR_EncryptionL6";

function MainBaseR_EncryptionL6Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(18));
  _keyTuple[2] = bytes32(uint256(6));
  return _keyTuple;
}

function MainBaseR_EncryptionL6Prototype(IStore store) {
  bytes32[] memory keys = MainBaseR_EncryptionL6Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(3750000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseR_HPL6PrototypeId = "MainBaseR_HPL6";

function MainBaseR_HPL6Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(17));
  _keyTuple[2] = bytes32(uint256(6));
  return _keyTuple;
}

function MainBaseR_HPL6Prototype(IStore store) {
  bytes32[] memory keys = MainBaseR_HPL6Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(3000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseIronL7PrototypeId = "MainBaseIronL7";

function MainBaseIronL7Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(1));
  _keyTuple[2] = bytes32(uint256(7));
  return _keyTuple;
}

function MainBaseIronL7Prototype(IStore store) {
  bytes32[] memory keys = MainBaseIronL7Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(6000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseCopperL7PrototypeId = "MainBaseCopperL7";

function MainBaseCopperL7Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(2));
  _keyTuple[2] = bytes32(uint256(7));
  return _keyTuple;
}

function MainBaseCopperL7Prototype(IStore store) {
  bytes32[] memory keys = MainBaseCopperL7Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(6000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseLithiumL7PrototypeId = "MainBaseLithiumL7";

function MainBaseLithiumL7Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(3));
  _keyTuple[2] = bytes32(uint256(7));
  return _keyTuple;
}

function MainBaseLithiumL7Prototype(IStore store) {
  bytes32[] memory keys = MainBaseLithiumL7Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(6000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseIronPlateL7PrototypeId = "MainBaseIronPlateL7";

function MainBaseIronPlateL7Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(8));
  _keyTuple[2] = bytes32(uint256(7));
  return _keyTuple;
}

function MainBaseIronPlateL7Prototype(IStore store) {
  bytes32[] memory keys = MainBaseIronPlateL7Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(2500000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseAlloyL7PrototypeId = "MainBaseAlloyL7";

function MainBaseAlloyL7Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(9));
  _keyTuple[2] = bytes32(uint256(7));
  return _keyTuple;
}

function MainBaseAlloyL7Prototype(IStore store) {
  bytes32[] memory keys = MainBaseAlloyL7Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(2500000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBasePVCellL7PrototypeId = "MainBasePVCellL7";

function MainBasePVCellL7Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(10));
  _keyTuple[2] = bytes32(uint256(7));
  return _keyTuple;
}

function MainBasePVCellL7Prototype(IStore store) {
  bytes32[] memory keys = MainBasePVCellL7Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(2500000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseTitaniumL7PrototypeId = "MainBaseTitaniumL7";

function MainBaseTitaniumL7Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(4));
  _keyTuple[2] = bytes32(uint256(7));
  return _keyTuple;
}

function MainBaseTitaniumL7Prototype(IStore store) {
  bytes32[] memory keys = MainBaseTitaniumL7Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(50000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseIridiumL7PrototypeId = "MainBaseIridiumL7";

function MainBaseIridiumL7Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(5));
  _keyTuple[2] = bytes32(uint256(7));
  return _keyTuple;
}

function MainBaseIridiumL7Prototype(IStore store) {
  bytes32[] memory keys = MainBaseIridiumL7Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(50000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBasePlatinumL7PrototypeId = "MainBasePlatinumL7";

function MainBasePlatinumL7Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(7));
  _keyTuple[2] = bytes32(uint256(7));
  return _keyTuple;
}

function MainBasePlatinumL7Prototype(IStore store) {
  bytes32[] memory keys = MainBasePlatinumL7Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(50000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseKimberliteL7PrototypeId = "MainBaseKimberliteL7";

function MainBaseKimberliteL7Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(6));
  _keyTuple[2] = bytes32(uint256(7));
  return _keyTuple;
}

function MainBaseKimberliteL7Prototype(IStore store) {
  bytes32[] memory keys = MainBaseKimberliteL7Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(50000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseR_EncryptionL7PrototypeId = "MainBaseR_EncryptionL7";

function MainBaseR_EncryptionL7Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(18));
  _keyTuple[2] = bytes32(uint256(7));
  return _keyTuple;
}

function MainBaseR_EncryptionL7Prototype(IStore store) {
  bytes32[] memory keys = MainBaseR_EncryptionL7Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(3900000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseR_HPL7PrototypeId = "MainBaseR_HPL7";

function MainBaseR_HPL7Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(17));
  _keyTuple[2] = bytes32(uint256(7));
  return _keyTuple;
}

function MainBaseR_HPL7Prototype(IStore store) {
  bytes32[] memory keys = MainBaseR_HPL7Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(4500000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseIronL8PrototypeId = "MainBaseIronL8";

function MainBaseIronL8Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(1));
  _keyTuple[2] = bytes32(uint256(8));
  return _keyTuple;
}

function MainBaseIronL8Prototype(IStore store) {
  bytes32[] memory keys = MainBaseIronL8Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(10000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseCopperL8PrototypeId = "MainBaseCopperL8";

function MainBaseCopperL8Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(2));
  _keyTuple[2] = bytes32(uint256(8));
  return _keyTuple;
}

function MainBaseCopperL8Prototype(IStore store) {
  bytes32[] memory keys = MainBaseCopperL8Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(10000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseLithiumL8PrototypeId = "MainBaseLithiumL8";

function MainBaseLithiumL8Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(3));
  _keyTuple[2] = bytes32(uint256(8));
  return _keyTuple;
}

function MainBaseLithiumL8Prototype(IStore store) {
  bytes32[] memory keys = MainBaseLithiumL8Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(10000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseIronPlateL8PrototypeId = "MainBaseIronPlateL8";

function MainBaseIronPlateL8Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(8));
  _keyTuple[2] = bytes32(uint256(8));
  return _keyTuple;
}

function MainBaseIronPlateL8Prototype(IStore store) {
  bytes32[] memory keys = MainBaseIronPlateL8Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(4000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseAlloyL8PrototypeId = "MainBaseAlloyL8";

function MainBaseAlloyL8Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(9));
  _keyTuple[2] = bytes32(uint256(8));
  return _keyTuple;
}

function MainBaseAlloyL8Prototype(IStore store) {
  bytes32[] memory keys = MainBaseAlloyL8Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(4000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBasePVCellL8PrototypeId = "MainBasePVCellL8";

function MainBasePVCellL8Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(10));
  _keyTuple[2] = bytes32(uint256(8));
  return _keyTuple;
}

function MainBasePVCellL8Prototype(IStore store) {
  bytes32[] memory keys = MainBasePVCellL8Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(4000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseTitaniumL8PrototypeId = "MainBaseTitaniumL8";

function MainBaseTitaniumL8Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(4));
  _keyTuple[2] = bytes32(uint256(8));
  return _keyTuple;
}

function MainBaseTitaniumL8Prototype(IStore store) {
  bytes32[] memory keys = MainBaseTitaniumL8Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(150000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseIridiumL8PrototypeId = "MainBaseIridiumL8";

function MainBaseIridiumL8Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(5));
  _keyTuple[2] = bytes32(uint256(8));
  return _keyTuple;
}

function MainBaseIridiumL8Prototype(IStore store) {
  bytes32[] memory keys = MainBaseIridiumL8Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(150000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBasePlatinumL8PrototypeId = "MainBasePlatinumL8";

function MainBasePlatinumL8Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(7));
  _keyTuple[2] = bytes32(uint256(8));
  return _keyTuple;
}

function MainBasePlatinumL8Prototype(IStore store) {
  bytes32[] memory keys = MainBasePlatinumL8Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(150000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseKimberliteL8PrototypeId = "MainBaseKimberliteL8";

function MainBaseKimberliteL8Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(6));
  _keyTuple[2] = bytes32(uint256(8));
  return _keyTuple;
}

function MainBaseKimberliteL8Prototype(IStore store) {
  bytes32[] memory keys = MainBaseKimberliteL8Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(150000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseR_EncryptionL8PrototypeId = "MainBaseR_EncryptionL8";

function MainBaseR_EncryptionL8Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(18));
  _keyTuple[2] = bytes32(uint256(8));
  return _keyTuple;
}

function MainBaseR_EncryptionL8Prototype(IStore store) {
  bytes32[] memory keys = MainBaseR_EncryptionL8Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(4050000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseR_HPL8PrototypeId = "MainBaseR_HPL8";

function MainBaseR_HPL8Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(17));
  _keyTuple[2] = bytes32(uint256(8));
  return _keyTuple;
}

function MainBaseR_HPL8Prototype(IStore store) {
  bytes32[] memory keys = MainBaseR_HPL8Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(6000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseIronL9PrototypeId = "MainBaseIronL9";

function MainBaseIronL9Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(1));
  _keyTuple[2] = bytes32(uint256(9));
  return _keyTuple;
}

function MainBaseIronL9Prototype(IStore store) {
  bytes32[] memory keys = MainBaseIronL9Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(20000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseCopperL9PrototypeId = "MainBaseCopperL9";

function MainBaseCopperL9Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(2));
  _keyTuple[2] = bytes32(uint256(9));
  return _keyTuple;
}

function MainBaseCopperL9Prototype(IStore store) {
  bytes32[] memory keys = MainBaseCopperL9Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(20000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseLithiumL9PrototypeId = "MainBaseLithiumL9";

function MainBaseLithiumL9Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(3));
  _keyTuple[2] = bytes32(uint256(9));
  return _keyTuple;
}

function MainBaseLithiumL9Prototype(IStore store) {
  bytes32[] memory keys = MainBaseLithiumL9Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(20000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseIronPlateL9PrototypeId = "MainBaseIronPlateL9";

function MainBaseIronPlateL9Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(8));
  _keyTuple[2] = bytes32(uint256(9));
  return _keyTuple;
}

function MainBaseIronPlateL9Prototype(IStore store) {
  bytes32[] memory keys = MainBaseIronPlateL9Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(6000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseAlloyL9PrototypeId = "MainBaseAlloyL9";

function MainBaseAlloyL9Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(9));
  _keyTuple[2] = bytes32(uint256(9));
  return _keyTuple;
}

function MainBaseAlloyL9Prototype(IStore store) {
  bytes32[] memory keys = MainBaseAlloyL9Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(6000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBasePVCellL9PrototypeId = "MainBasePVCellL9";

function MainBasePVCellL9Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(10));
  _keyTuple[2] = bytes32(uint256(9));
  return _keyTuple;
}

function MainBasePVCellL9Prototype(IStore store) {
  bytes32[] memory keys = MainBasePVCellL9Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(6000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseTitaniumL9PrototypeId = "MainBaseTitaniumL9";

function MainBaseTitaniumL9Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(4));
  _keyTuple[2] = bytes32(uint256(9));
  return _keyTuple;
}

function MainBaseTitaniumL9Prototype(IStore store) {
  bytes32[] memory keys = MainBaseTitaniumL9Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(400000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseIridiumL9PrototypeId = "MainBaseIridiumL9";

function MainBaseIridiumL9Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(5));
  _keyTuple[2] = bytes32(uint256(9));
  return _keyTuple;
}

function MainBaseIridiumL9Prototype(IStore store) {
  bytes32[] memory keys = MainBaseIridiumL9Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(400000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBasePlatinumL9PrototypeId = "MainBasePlatinumL9";

function MainBasePlatinumL9Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(7));
  _keyTuple[2] = bytes32(uint256(9));
  return _keyTuple;
}

function MainBasePlatinumL9Prototype(IStore store) {
  bytes32[] memory keys = MainBasePlatinumL9Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(400000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseKimberliteL9PrototypeId = "MainBaseKimberliteL9";

function MainBaseKimberliteL9Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(6));
  _keyTuple[2] = bytes32(uint256(9));
  return _keyTuple;
}

function MainBaseKimberliteL9Prototype(IStore store) {
  bytes32[] memory keys = MainBaseKimberliteL9Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(400000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseR_EncryptionL9PrototypeId = "MainBaseR_EncryptionL9";

function MainBaseR_EncryptionL9Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(18));
  _keyTuple[2] = bytes32(uint256(9));
  return _keyTuple;
}

function MainBaseR_EncryptionL9Prototype(IStore store) {
  bytes32[] memory keys = MainBaseR_EncryptionL9Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(4200000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseR_HPL9PrototypeId = "MainBaseR_HPL9";

function MainBaseR_HPL9Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(17));
  _keyTuple[2] = bytes32(uint256(9));
  return _keyTuple;
}

function MainBaseR_HPL9Prototype(IStore store) {
  bytes32[] memory keys = MainBaseR_HPL9Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(8000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseIronL10PrototypeId = "MainBaseIronL10";

function MainBaseIronL10Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(1));
  _keyTuple[2] = bytes32(uint256(10));
  return _keyTuple;
}

function MainBaseIronL10Prototype(IStore store) {
  bytes32[] memory keys = MainBaseIronL10Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(30000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseCopperL10PrototypeId = "MainBaseCopperL10";

function MainBaseCopperL10Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(2));
  _keyTuple[2] = bytes32(uint256(10));
  return _keyTuple;
}

function MainBaseCopperL10Prototype(IStore store) {
  bytes32[] memory keys = MainBaseCopperL10Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(30000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseLithiumL10PrototypeId = "MainBaseLithiumL10";

function MainBaseLithiumL10Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(3));
  _keyTuple[2] = bytes32(uint256(10));
  return _keyTuple;
}

function MainBaseLithiumL10Prototype(IStore store) {
  bytes32[] memory keys = MainBaseLithiumL10Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(30000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseIronPlateL10PrototypeId = "MainBaseIronPlateL10";

function MainBaseIronPlateL10Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(8));
  _keyTuple[2] = bytes32(uint256(10));
  return _keyTuple;
}

function MainBaseIronPlateL10Prototype(IStore store) {
  bytes32[] memory keys = MainBaseIronPlateL10Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(8000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseAlloyL10PrototypeId = "MainBaseAlloyL10";

function MainBaseAlloyL10Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(9));
  _keyTuple[2] = bytes32(uint256(10));
  return _keyTuple;
}

function MainBaseAlloyL10Prototype(IStore store) {
  bytes32[] memory keys = MainBaseAlloyL10Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(8000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBasePVCellL10PrototypeId = "MainBasePVCellL10";

function MainBasePVCellL10Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(10));
  _keyTuple[2] = bytes32(uint256(10));
  return _keyTuple;
}

function MainBasePVCellL10Prototype(IStore store) {
  bytes32[] memory keys = MainBasePVCellL10Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(8000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseTitaniumL10PrototypeId = "MainBaseTitaniumL10";

function MainBaseTitaniumL10Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(4));
  _keyTuple[2] = bytes32(uint256(10));
  return _keyTuple;
}

function MainBaseTitaniumL10Prototype(IStore store) {
  bytes32[] memory keys = MainBaseTitaniumL10Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(600000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseIridiumL10PrototypeId = "MainBaseIridiumL10";

function MainBaseIridiumL10Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(5));
  _keyTuple[2] = bytes32(uint256(10));
  return _keyTuple;
}

function MainBaseIridiumL10Prototype(IStore store) {
  bytes32[] memory keys = MainBaseIridiumL10Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(600000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBasePlatinumL10PrototypeId = "MainBasePlatinumL10";

function MainBasePlatinumL10Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(7));
  _keyTuple[2] = bytes32(uint256(10));
  return _keyTuple;
}

function MainBasePlatinumL10Prototype(IStore store) {
  bytes32[] memory keys = MainBasePlatinumL10Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(600000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseKimberliteL10PrototypeId = "MainBaseKimberliteL10";

function MainBaseKimberliteL10Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(6));
  _keyTuple[2] = bytes32(uint256(10));
  return _keyTuple;
}

function MainBaseKimberliteL10Prototype(IStore store) {
  bytes32[] memory keys = MainBaseKimberliteL10Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(600000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseR_EncryptionL10PrototypeId = "MainBaseR_EncryptionL10";

function MainBaseR_EncryptionL10Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(18));
  _keyTuple[2] = bytes32(uint256(10));
  return _keyTuple;
}

function MainBaseR_EncryptionL10Prototype(IStore store) {
  bytes32[] memory keys = MainBaseR_EncryptionL10Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(4500000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseR_HPL10PrototypeId = "MainBaseR_HPL10";

function MainBaseR_HPL10Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(17));
  _keyTuple[2] = bytes32(uint256(10));
  return _keyTuple;
}

function MainBaseR_HPL10Prototype(IStore store) {
  bytes32[] memory keys = MainBaseR_HPL10Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(10000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseIronL11PrototypeId = "MainBaseIronL11";

function MainBaseIronL11Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(1));
  _keyTuple[2] = bytes32(uint256(11));
  return _keyTuple;
}

function MainBaseIronL11Prototype(IStore store) {
  bytes32[] memory keys = MainBaseIronL11Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(40000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseCopperL11PrototypeId = "MainBaseCopperL11";

function MainBaseCopperL11Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(2));
  _keyTuple[2] = bytes32(uint256(11));
  return _keyTuple;
}

function MainBaseCopperL11Prototype(IStore store) {
  bytes32[] memory keys = MainBaseCopperL11Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(40000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseLithiumL11PrototypeId = "MainBaseLithiumL11";

function MainBaseLithiumL11Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(3));
  _keyTuple[2] = bytes32(uint256(11));
  return _keyTuple;
}

function MainBaseLithiumL11Prototype(IStore store) {
  bytes32[] memory keys = MainBaseLithiumL11Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(40000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseIronPlateL11PrototypeId = "MainBaseIronPlateL11";

function MainBaseIronPlateL11Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(8));
  _keyTuple[2] = bytes32(uint256(11));
  return _keyTuple;
}

function MainBaseIronPlateL11Prototype(IStore store) {
  bytes32[] memory keys = MainBaseIronPlateL11Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(10000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseAlloyL11PrototypeId = "MainBaseAlloyL11";

function MainBaseAlloyL11Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(9));
  _keyTuple[2] = bytes32(uint256(11));
  return _keyTuple;
}

function MainBaseAlloyL11Prototype(IStore store) {
  bytes32[] memory keys = MainBaseAlloyL11Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(10000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBasePVCellL11PrototypeId = "MainBasePVCellL11";

function MainBasePVCellL11Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(10));
  _keyTuple[2] = bytes32(uint256(11));
  return _keyTuple;
}

function MainBasePVCellL11Prototype(IStore store) {
  bytes32[] memory keys = MainBasePVCellL11Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(10000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseTitaniumL11PrototypeId = "MainBaseTitaniumL11";

function MainBaseTitaniumL11Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(4));
  _keyTuple[2] = bytes32(uint256(11));
  return _keyTuple;
}

function MainBaseTitaniumL11Prototype(IStore store) {
  bytes32[] memory keys = MainBaseTitaniumL11Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(800000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseIridiumL11PrototypeId = "MainBaseIridiumL11";

function MainBaseIridiumL11Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(5));
  _keyTuple[2] = bytes32(uint256(11));
  return _keyTuple;
}

function MainBaseIridiumL11Prototype(IStore store) {
  bytes32[] memory keys = MainBaseIridiumL11Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(800000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBasePlatinumL11PrototypeId = "MainBasePlatinumL11";

function MainBasePlatinumL11Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(7));
  _keyTuple[2] = bytes32(uint256(11));
  return _keyTuple;
}

function MainBasePlatinumL11Prototype(IStore store) {
  bytes32[] memory keys = MainBasePlatinumL11Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(800000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseKimberliteL11PrototypeId = "MainBaseKimberliteL11";

function MainBaseKimberliteL11Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(6));
  _keyTuple[2] = bytes32(uint256(11));
  return _keyTuple;
}

function MainBaseKimberliteL11Prototype(IStore store) {
  bytes32[] memory keys = MainBaseKimberliteL11Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(800000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseR_EncryptionL11PrototypeId = "MainBaseR_EncryptionL11";

function MainBaseR_EncryptionL11Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(18));
  _keyTuple[2] = bytes32(uint256(11));
  return _keyTuple;
}

function MainBaseR_EncryptionL11Prototype(IStore store) {
  bytes32[] memory keys = MainBaseR_EncryptionL11Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(4800000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseR_HPL11PrototypeId = "MainBaseR_HPL11";

function MainBaseR_HPL11Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(17));
  _keyTuple[2] = bytes32(uint256(11));
  return _keyTuple;
}

function MainBaseR_HPL11Prototype(IStore store) {
  bytes32[] memory keys = MainBaseR_HPL11Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(12499999999999998951424);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseIronL12PrototypeId = "MainBaseIronL12";

function MainBaseIronL12Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(1));
  _keyTuple[2] = bytes32(uint256(12));
  return _keyTuple;
}

function MainBaseIronL12Prototype(IStore store) {
  bytes32[] memory keys = MainBaseIronL12Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(49999999999999995805696);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseCopperL12PrototypeId = "MainBaseCopperL12";

function MainBaseCopperL12Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(2));
  _keyTuple[2] = bytes32(uint256(12));
  return _keyTuple;
}

function MainBaseCopperL12Prototype(IStore store) {
  bytes32[] memory keys = MainBaseCopperL12Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(49999999999999995805696);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseLithiumL12PrototypeId = "MainBaseLithiumL12";

function MainBaseLithiumL12Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(3));
  _keyTuple[2] = bytes32(uint256(12));
  return _keyTuple;
}

function MainBaseLithiumL12Prototype(IStore store) {
  bytes32[] memory keys = MainBaseLithiumL12Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(49999999999999995805696);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseIronPlateL12PrototypeId = "MainBaseIronPlateL12";

function MainBaseIronPlateL12Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(8));
  _keyTuple[2] = bytes32(uint256(12));
  return _keyTuple;
}

function MainBaseIronPlateL12Prototype(IStore store) {
  bytes32[] memory keys = MainBaseIronPlateL12Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(12000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseAlloyL12PrototypeId = "MainBaseAlloyL12";

function MainBaseAlloyL12Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(9));
  _keyTuple[2] = bytes32(uint256(12));
  return _keyTuple;
}

function MainBaseAlloyL12Prototype(IStore store) {
  bytes32[] memory keys = MainBaseAlloyL12Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(12000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBasePVCellL12PrototypeId = "MainBasePVCellL12";

function MainBasePVCellL12Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(10));
  _keyTuple[2] = bytes32(uint256(12));
  return _keyTuple;
}

function MainBasePVCellL12Prototype(IStore store) {
  bytes32[] memory keys = MainBasePVCellL12Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(12000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseTitaniumL12PrototypeId = "MainBaseTitaniumL12";

function MainBaseTitaniumL12Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(4));
  _keyTuple[2] = bytes32(uint256(12));
  return _keyTuple;
}

function MainBaseTitaniumL12Prototype(IStore store) {
  bytes32[] memory keys = MainBaseTitaniumL12Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseIridiumL12PrototypeId = "MainBaseIridiumL12";

function MainBaseIridiumL12Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(5));
  _keyTuple[2] = bytes32(uint256(12));
  return _keyTuple;
}

function MainBaseIridiumL12Prototype(IStore store) {
  bytes32[] memory keys = MainBaseIridiumL12Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBasePlatinumL12PrototypeId = "MainBasePlatinumL12";

function MainBasePlatinumL12Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(7));
  _keyTuple[2] = bytes32(uint256(12));
  return _keyTuple;
}

function MainBasePlatinumL12Prototype(IStore store) {
  bytes32[] memory keys = MainBasePlatinumL12Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseKimberliteL12PrototypeId = "MainBaseKimberliteL12";

function MainBaseKimberliteL12Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(6));
  _keyTuple[2] = bytes32(uint256(12));
  return _keyTuple;
}

function MainBaseKimberliteL12Prototype(IStore store) {
  bytes32[] memory keys = MainBaseKimberliteL12Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseR_EncryptionL12PrototypeId = "MainBaseR_EncryptionL12";

function MainBaseR_EncryptionL12Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(18));
  _keyTuple[2] = bytes32(uint256(12));
  return _keyTuple;
}

function MainBaseR_EncryptionL12Prototype(IStore store) {
  bytes32[] memory keys = MainBaseR_EncryptionL12Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(5100000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseR_HPL12PrototypeId = "MainBaseR_HPL12";

function MainBaseR_HPL12Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(17));
  _keyTuple[2] = bytes32(uint256(12));
  return _keyTuple;
}

function MainBaseR_HPL12Prototype(IStore store) {
  bytes32[] memory keys = MainBaseR_HPL12Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(15000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseIronL13PrototypeId = "MainBaseIronL13";

function MainBaseIronL13Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(1));
  _keyTuple[2] = bytes32(uint256(13));
  return _keyTuple;
}

function MainBaseIronL13Prototype(IStore store) {
  bytes32[] memory keys = MainBaseIronL13Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(60000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseCopperL13PrototypeId = "MainBaseCopperL13";

function MainBaseCopperL13Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(2));
  _keyTuple[2] = bytes32(uint256(13));
  return _keyTuple;
}

function MainBaseCopperL13Prototype(IStore store) {
  bytes32[] memory keys = MainBaseCopperL13Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(60000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseLithiumL13PrototypeId = "MainBaseLithiumL13";

function MainBaseLithiumL13Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(3));
  _keyTuple[2] = bytes32(uint256(13));
  return _keyTuple;
}

function MainBaseLithiumL13Prototype(IStore store) {
  bytes32[] memory keys = MainBaseLithiumL13Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(60000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseIronPlateL13PrototypeId = "MainBaseIronPlateL13";

function MainBaseIronPlateL13Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(8));
  _keyTuple[2] = bytes32(uint256(13));
  return _keyTuple;
}

function MainBaseIronPlateL13Prototype(IStore store) {
  bytes32[] memory keys = MainBaseIronPlateL13Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(14000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseAlloyL13PrototypeId = "MainBaseAlloyL13";

function MainBaseAlloyL13Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(9));
  _keyTuple[2] = bytes32(uint256(13));
  return _keyTuple;
}

function MainBaseAlloyL13Prototype(IStore store) {
  bytes32[] memory keys = MainBaseAlloyL13Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(14000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBasePVCellL13PrototypeId = "MainBasePVCellL13";

function MainBasePVCellL13Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(10));
  _keyTuple[2] = bytes32(uint256(13));
  return _keyTuple;
}

function MainBasePVCellL13Prototype(IStore store) {
  bytes32[] memory keys = MainBasePVCellL13Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(14000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseTitaniumL13PrototypeId = "MainBaseTitaniumL13";

function MainBaseTitaniumL13Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(4));
  _keyTuple[2] = bytes32(uint256(13));
  return _keyTuple;
}

function MainBaseTitaniumL13Prototype(IStore store) {
  bytes32[] memory keys = MainBaseTitaniumL13Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1500000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseIridiumL13PrototypeId = "MainBaseIridiumL13";

function MainBaseIridiumL13Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(5));
  _keyTuple[2] = bytes32(uint256(13));
  return _keyTuple;
}

function MainBaseIridiumL13Prototype(IStore store) {
  bytes32[] memory keys = MainBaseIridiumL13Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1500000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBasePlatinumL13PrototypeId = "MainBasePlatinumL13";

function MainBasePlatinumL13Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(7));
  _keyTuple[2] = bytes32(uint256(13));
  return _keyTuple;
}

function MainBasePlatinumL13Prototype(IStore store) {
  bytes32[] memory keys = MainBasePlatinumL13Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1500000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseKimberliteL13PrototypeId = "MainBaseKimberliteL13";

function MainBaseKimberliteL13Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(6));
  _keyTuple[2] = bytes32(uint256(13));
  return _keyTuple;
}

function MainBaseKimberliteL13Prototype(IStore store) {
  bytes32[] memory keys = MainBaseKimberliteL13Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1500000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseR_EncryptionL13PrototypeId = "MainBaseR_EncryptionL13";

function MainBaseR_EncryptionL13Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(18));
  _keyTuple[2] = bytes32(uint256(13));
  return _keyTuple;
}

function MainBaseR_EncryptionL13Prototype(IStore store) {
  bytes32[] memory keys = MainBaseR_EncryptionL13Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(5400000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseR_HPL13PrototypeId = "MainBaseR_HPL13";

function MainBaseR_HPL13Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(17));
  _keyTuple[2] = bytes32(uint256(13));
  return _keyTuple;
}

function MainBaseR_HPL13Prototype(IStore store) {
  bytes32[] memory keys = MainBaseR_HPL13Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(17500000000000001048576);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseIronL14PrototypeId = "MainBaseIronL14";

function MainBaseIronL14Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(1));
  _keyTuple[2] = bytes32(uint256(14));
  return _keyTuple;
}

function MainBaseIronL14Prototype(IStore store) {
  bytes32[] memory keys = MainBaseIronL14Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(70000000000000004194304);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseCopperL14PrototypeId = "MainBaseCopperL14";

function MainBaseCopperL14Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(2));
  _keyTuple[2] = bytes32(uint256(14));
  return _keyTuple;
}

function MainBaseCopperL14Prototype(IStore store) {
  bytes32[] memory keys = MainBaseCopperL14Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(70000000000000004194304);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseLithiumL14PrototypeId = "MainBaseLithiumL14";

function MainBaseLithiumL14Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(3));
  _keyTuple[2] = bytes32(uint256(14));
  return _keyTuple;
}

function MainBaseLithiumL14Prototype(IStore store) {
  bytes32[] memory keys = MainBaseLithiumL14Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(70000000000000004194304);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseIronPlateL14PrototypeId = "MainBaseIronPlateL14";

function MainBaseIronPlateL14Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(8));
  _keyTuple[2] = bytes32(uint256(14));
  return _keyTuple;
}

function MainBaseIronPlateL14Prototype(IStore store) {
  bytes32[] memory keys = MainBaseIronPlateL14Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(16000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseAlloyL14PrototypeId = "MainBaseAlloyL14";

function MainBaseAlloyL14Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(9));
  _keyTuple[2] = bytes32(uint256(14));
  return _keyTuple;
}

function MainBaseAlloyL14Prototype(IStore store) {
  bytes32[] memory keys = MainBaseAlloyL14Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(16000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBasePVCellL14PrototypeId = "MainBasePVCellL14";

function MainBasePVCellL14Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(10));
  _keyTuple[2] = bytes32(uint256(14));
  return _keyTuple;
}

function MainBasePVCellL14Prototype(IStore store) {
  bytes32[] memory keys = MainBasePVCellL14Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(16000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseTitaniumL14PrototypeId = "MainBaseTitaniumL14";

function MainBaseTitaniumL14Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(4));
  _keyTuple[2] = bytes32(uint256(14));
  return _keyTuple;
}

function MainBaseTitaniumL14Prototype(IStore store) {
  bytes32[] memory keys = MainBaseTitaniumL14Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(2000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseIridiumL14PrototypeId = "MainBaseIridiumL14";

function MainBaseIridiumL14Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(5));
  _keyTuple[2] = bytes32(uint256(14));
  return _keyTuple;
}

function MainBaseIridiumL14Prototype(IStore store) {
  bytes32[] memory keys = MainBaseIridiumL14Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(2000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBasePlatinumL14PrototypeId = "MainBasePlatinumL14";

function MainBasePlatinumL14Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(7));
  _keyTuple[2] = bytes32(uint256(14));
  return _keyTuple;
}

function MainBasePlatinumL14Prototype(IStore store) {
  bytes32[] memory keys = MainBasePlatinumL14Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(2000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseKimberliteL14PrototypeId = "MainBaseKimberliteL14";

function MainBaseKimberliteL14Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(6));
  _keyTuple[2] = bytes32(uint256(14));
  return _keyTuple;
}

function MainBaseKimberliteL14Prototype(IStore store) {
  bytes32[] memory keys = MainBaseKimberliteL14Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(2000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseR_EncryptionL14PrototypeId = "MainBaseR_EncryptionL14";

function MainBaseR_EncryptionL14Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(18));
  _keyTuple[2] = bytes32(uint256(14));
  return _keyTuple;
}

function MainBaseR_EncryptionL14Prototype(IStore store) {
  bytes32[] memory keys = MainBaseR_EncryptionL14Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(5700000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseR_HPL14PrototypeId = "MainBaseR_HPL14";

function MainBaseR_HPL14Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(17));
  _keyTuple[2] = bytes32(uint256(14));
  return _keyTuple;
}

function MainBaseR_HPL14Prototype(IStore store) {
  bytes32[] memory keys = MainBaseR_HPL14Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(20000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseIronL15PrototypeId = "MainBaseIronL15";

function MainBaseIronL15Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(1));
  _keyTuple[2] = bytes32(uint256(15));
  return _keyTuple;
}

function MainBaseIronL15Prototype(IStore store) {
  bytes32[] memory keys = MainBaseIronL15Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(80000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseCopperL15PrototypeId = "MainBaseCopperL15";

function MainBaseCopperL15Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(2));
  _keyTuple[2] = bytes32(uint256(15));
  return _keyTuple;
}

function MainBaseCopperL15Prototype(IStore store) {
  bytes32[] memory keys = MainBaseCopperL15Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(80000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseLithiumL15PrototypeId = "MainBaseLithiumL15";

function MainBaseLithiumL15Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(3));
  _keyTuple[2] = bytes32(uint256(15));
  return _keyTuple;
}

function MainBaseLithiumL15Prototype(IStore store) {
  bytes32[] memory keys = MainBaseLithiumL15Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(80000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseIronPlateL15PrototypeId = "MainBaseIronPlateL15";

function MainBaseIronPlateL15Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(8));
  _keyTuple[2] = bytes32(uint256(15));
  return _keyTuple;
}

function MainBaseIronPlateL15Prototype(IStore store) {
  bytes32[] memory keys = MainBaseIronPlateL15Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(20000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseAlloyL15PrototypeId = "MainBaseAlloyL15";

function MainBaseAlloyL15Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(9));
  _keyTuple[2] = bytes32(uint256(15));
  return _keyTuple;
}

function MainBaseAlloyL15Prototype(IStore store) {
  bytes32[] memory keys = MainBaseAlloyL15Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(20000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBasePVCellL15PrototypeId = "MainBasePVCellL15";

function MainBasePVCellL15Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(10));
  _keyTuple[2] = bytes32(uint256(15));
  return _keyTuple;
}

function MainBasePVCellL15Prototype(IStore store) {
  bytes32[] memory keys = MainBasePVCellL15Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(20000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseTitaniumL15PrototypeId = "MainBaseTitaniumL15";

function MainBaseTitaniumL15Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(4));
  _keyTuple[2] = bytes32(uint256(15));
  return _keyTuple;
}

function MainBaseTitaniumL15Prototype(IStore store) {
  bytes32[] memory keys = MainBaseTitaniumL15Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(2500000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseIridiumL15PrototypeId = "MainBaseIridiumL15";

function MainBaseIridiumL15Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(5));
  _keyTuple[2] = bytes32(uint256(15));
  return _keyTuple;
}

function MainBaseIridiumL15Prototype(IStore store) {
  bytes32[] memory keys = MainBaseIridiumL15Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(2500000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBasePlatinumL15PrototypeId = "MainBasePlatinumL15";

function MainBasePlatinumL15Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(7));
  _keyTuple[2] = bytes32(uint256(15));
  return _keyTuple;
}

function MainBasePlatinumL15Prototype(IStore store) {
  bytes32[] memory keys = MainBasePlatinumL15Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(2500000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseKimberliteL15PrototypeId = "MainBaseKimberliteL15";

function MainBaseKimberliteL15Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(6));
  _keyTuple[2] = bytes32(uint256(15));
  return _keyTuple;
}

function MainBaseKimberliteL15Prototype(IStore store) {
  bytes32[] memory keys = MainBaseKimberliteL15Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(2500000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseR_EncryptionL15PrototypeId = "MainBaseR_EncryptionL15";

function MainBaseR_EncryptionL15Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(18));
  _keyTuple[2] = bytes32(uint256(15));
  return _keyTuple;
}

function MainBaseR_EncryptionL15Prototype(IStore store) {
  bytes32[] memory keys = MainBaseR_EncryptionL15Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(6000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MainBaseR_HPL15PrototypeId = "MainBaseR_HPL15";

function MainBaseR_HPL15Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x4d61696e42617365000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(17));
  _keyTuple[2] = bytes32(uint256(15));
  return _keyTuple;
}

function MainBaseR_HPL15Prototype(IStore store) {
  bytes32[] memory keys = MainBaseR_HPL15Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(24999999999999997902848);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBasePrototypeId = "WormholeBase";

function WormholeBaseKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = WormholeBasePrototypeId;
  return _keyTuple;
}

function WormholeBaseLevelKeys(uint32 level) pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](2);

  _keyTuple[0] = WormholeBasePrototypeId;
  _keyTuple[1] = bytes32(uint256(level));
  return _keyTuple;
}
function WormholeBasePrototype(IStore store) {
  bytes32[] memory keys = WormholeBaseKeys();
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_Blueprint._tableId;
  tableIds[1] = Position._tableId;
  tableIds[2] = P_MaxLevel._tableId;

  int32[] memory p_blueprint_value = new int32[](70);
  p_blueprint_value[0] = 0;
  p_blueprint_value[1] = 0;
  p_blueprint_value[2] = 0;
  p_blueprint_value[3] = -1;
  p_blueprint_value[4] = 0;
  p_blueprint_value[5] = -2;
  p_blueprint_value[6] = 0;
  p_blueprint_value[7] = -3;
  p_blueprint_value[8] = 0;
  p_blueprint_value[9] = -4;
  p_blueprint_value[10] = -1;
  p_blueprint_value[11] = 0;
  p_blueprint_value[12] = -1;
  p_blueprint_value[13] = -1;
  p_blueprint_value[14] = -1;
  p_blueprint_value[15] = -2;
  p_blueprint_value[16] = -1;
  p_blueprint_value[17] = -3;
  p_blueprint_value[18] = -1;
  p_blueprint_value[19] = -4;
  p_blueprint_value[20] = -2;
  p_blueprint_value[21] = 0;
  p_blueprint_value[22] = -2;
  p_blueprint_value[23] = -1;
  p_blueprint_value[24] = -2;
  p_blueprint_value[25] = -2;
  p_blueprint_value[26] = -2;
  p_blueprint_value[27] = -3;
  p_blueprint_value[28] = -2;
  p_blueprint_value[29] = -4;
  p_blueprint_value[30] = -3;
  p_blueprint_value[31] = 0;
  p_blueprint_value[32] = -3;
  p_blueprint_value[33] = -1;
  p_blueprint_value[34] = -3;
  p_blueprint_value[35] = -2;
  p_blueprint_value[36] = -3;
  p_blueprint_value[37] = -3;
  p_blueprint_value[38] = -3;
  p_blueprint_value[39] = -4;
  p_blueprint_value[40] = -4;
  p_blueprint_value[41] = 0;
  p_blueprint_value[42] = -4;
  p_blueprint_value[43] = -1;
  p_blueprint_value[44] = -4;
  p_blueprint_value[45] = -2;
  p_blueprint_value[46] = -4;
  p_blueprint_value[47] = -3;
  p_blueprint_value[48] = -4;
  p_blueprint_value[49] = -4;
  p_blueprint_value[50] = -5;
  p_blueprint_value[51] = 0;
  p_blueprint_value[52] = -5;
  p_blueprint_value[53] = -1;
  p_blueprint_value[54] = -5;
  p_blueprint_value[55] = -2;
  p_blueprint_value[56] = -5;
  p_blueprint_value[57] = -3;
  p_blueprint_value[58] = -5;
  p_blueprint_value[59] = -4;
  p_blueprint_value[60] = -6;
  p_blueprint_value[61] = 0;
  p_blueprint_value[62] = -6;
  p_blueprint_value[63] = -1;
  p_blueprint_value[64] = -6;
  p_blueprint_value[65] = -2;
  p_blueprint_value[66] = -6;
  p_blueprint_value[67] = -3;
  p_blueprint_value[68] = -6;
  p_blueprint_value[69] = -4;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_Blueprint.encode(p_blueprint_value);
  (staticData[1], encodedLengths[1], dynamicData[1]) = Position.encode(21, 14, 0x0);
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_MaxLevel.encode(15);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);

  createWormholeBaseLevel1(store);
  createWormholeBaseLevel2(store);
  createWormholeBaseLevel3(store);
  createWormholeBaseLevel4(store);
  createWormholeBaseLevel5(store);
  createWormholeBaseLevel6(store);
  createWormholeBaseLevel7(store);
  createWormholeBaseLevel8(store);
  createWormholeBaseLevel9(store);
  createWormholeBaseLevel10(store);
  createWormholeBaseLevel11(store);
  createWormholeBaseLevel12(store);
  createWormholeBaseLevel13(store);
  createWormholeBaseLevel14(store);
  createWormholeBaseLevel15(store);
}

/* ----------------------------- LEVEL 1 ----------------------------- */
function createWormholeBaseLevel1(IStore store) {
  bytes32[] memory levelKeys = WormholeBaseLevelKeys(1);
  ResourceId[] memory tableIds = new ResourceId[](2);
  bytes[] memory staticData = new bytes[](2);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](2);
  bytes[] memory dynamicData = new bytes[](2);

  tableIds[0] = P_ListMaxResourceUpgrades._tableId;
  tableIds[1] = P_Production._tableId;

  uint8[] memory p_listmaxresourceupgrades__level_value = new uint8[](5);
  p_listmaxresourceupgrades__level_value[0] = 1;
  p_listmaxresourceupgrades__level_value[1] = 2;
  p_listmaxresourceupgrades__level_value[2] = 3;
  p_listmaxresourceupgrades__level_value[3] = 18;
  p_listmaxresourceupgrades__level_value[4] = 17;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ListMaxResourceUpgrades.encode(
    p_listmaxresourceupgrades__level_value
  );
  uint8[] memory p_production__level_resources = new uint8[](3);
  p_production__level_resources[0] = 18;
  p_production__level_resources[1] = 17;
  p_production__level_resources[2] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](3);
  p_production__level_amounts[0] = 16799999999999998;
  p_production__level_amounts[1] = 6000000000000000;
  p_production__level_amounts[2] = 50;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 2 ----------------------------- */
function createWormholeBaseLevel2(IStore store) {
  bytes32[] memory levelKeys = WormholeBaseLevelKeys(2);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredResources._tableId;
  tableIds[1] = P_ListMaxResourceUpgrades._tableId;
  tableIds[2] = P_Production._tableId;

  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 2;
  p_requiredresources__level_resources[2] = 3;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 50000000000000000000;
  p_requiredresources__level_amounts[1] = 50000000000000000000;
  p_requiredresources__level_amounts[2] = 50000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_listmaxresourceupgrades__level_value = new uint8[](5);
  p_listmaxresourceupgrades__level_value[0] = 1;
  p_listmaxresourceupgrades__level_value[1] = 2;
  p_listmaxresourceupgrades__level_value[2] = 3;
  p_listmaxresourceupgrades__level_value[3] = 18;
  p_listmaxresourceupgrades__level_value[4] = 17;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_ListMaxResourceUpgrades.encode(
    p_listmaxresourceupgrades__level_value
  );
  uint8[] memory p_production__level_resources = new uint8[](3);
  p_production__level_resources[0] = 18;
  p_production__level_resources[1] = 17;
  p_production__level_resources[2] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](3);
  p_production__level_amounts[0] = 16799999999999998;
  p_production__level_amounts[1] = 12000000000000000;
  p_production__level_amounts[2] = 100;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 3 ----------------------------- */
function createWormholeBaseLevel3(IStore store) {
  bytes32[] memory levelKeys = WormholeBaseLevelKeys(3);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredResources._tableId;
  tableIds[1] = P_ListMaxResourceUpgrades._tableId;
  tableIds[2] = P_Production._tableId;

  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 2;
  p_requiredresources__level_resources[2] = 3;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 400000000000000000000;
  p_requiredresources__level_amounts[1] = 400000000000000000000;
  p_requiredresources__level_amounts[2] = 400000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_listmaxresourceupgrades__level_value = new uint8[](5);
  p_listmaxresourceupgrades__level_value[0] = 1;
  p_listmaxresourceupgrades__level_value[1] = 2;
  p_listmaxresourceupgrades__level_value[2] = 3;
  p_listmaxresourceupgrades__level_value[3] = 18;
  p_listmaxresourceupgrades__level_value[4] = 17;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_ListMaxResourceUpgrades.encode(
    p_listmaxresourceupgrades__level_value
  );
  uint8[] memory p_production__level_resources = new uint8[](3);
  p_production__level_resources[0] = 18;
  p_production__level_resources[1] = 17;
  p_production__level_resources[2] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](3);
  p_production__level_amounts[0] = 16799999999999998;
  p_production__level_amounts[1] = 17999999999999998;
  p_production__level_amounts[2] = 100;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 4 ----------------------------- */
function createWormholeBaseLevel4(IStore store) {
  bytes32[] memory levelKeys = WormholeBaseLevelKeys(4);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredResources._tableId;
  tableIds[1] = P_ListMaxResourceUpgrades._tableId;
  tableIds[2] = P_Production._tableId;

  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 2;
  p_requiredresources__level_resources[2] = 3;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 800000000000000000000;
  p_requiredresources__level_amounts[1] = 800000000000000000000;
  p_requiredresources__level_amounts[2] = 800000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_listmaxresourceupgrades__level_value = new uint8[](5);
  p_listmaxresourceupgrades__level_value[0] = 1;
  p_listmaxresourceupgrades__level_value[1] = 2;
  p_listmaxresourceupgrades__level_value[2] = 3;
  p_listmaxresourceupgrades__level_value[3] = 18;
  p_listmaxresourceupgrades__level_value[4] = 17;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_ListMaxResourceUpgrades.encode(
    p_listmaxresourceupgrades__level_value
  );
  uint8[] memory p_production__level_resources = new uint8[](3);
  p_production__level_resources[0] = 18;
  p_production__level_resources[1] = 17;
  p_production__level_resources[2] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](3);
  p_production__level_amounts[0] = 16799999999999998;
  p_production__level_amounts[1] = 24000000000000000;
  p_production__level_amounts[2] = 200;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 5 ----------------------------- */
function createWormholeBaseLevel5(IStore store) {
  bytes32[] memory levelKeys = WormholeBaseLevelKeys(5);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredResources._tableId;
  tableIds[1] = P_ListMaxResourceUpgrades._tableId;
  tableIds[2] = P_Production._tableId;

  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 2;
  p_requiredresources__level_resources[2] = 3;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 1500000000000000000000;
  p_requiredresources__level_amounts[1] = 1500000000000000000000;
  p_requiredresources__level_amounts[2] = 1500000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_listmaxresourceupgrades__level_value = new uint8[](8);
  p_listmaxresourceupgrades__level_value[0] = 1;
  p_listmaxresourceupgrades__level_value[1] = 2;
  p_listmaxresourceupgrades__level_value[2] = 3;
  p_listmaxresourceupgrades__level_value[3] = 8;
  p_listmaxresourceupgrades__level_value[4] = 9;
  p_listmaxresourceupgrades__level_value[5] = 10;
  p_listmaxresourceupgrades__level_value[6] = 18;
  p_listmaxresourceupgrades__level_value[7] = 17;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_ListMaxResourceUpgrades.encode(
    p_listmaxresourceupgrades__level_value
  );
  uint8[] memory p_production__level_resources = new uint8[](3);
  p_production__level_resources[0] = 18;
  p_production__level_resources[1] = 17;
  p_production__level_resources[2] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](3);
  p_production__level_amounts[0] = 16799999999999998;
  p_production__level_amounts[1] = 30000000000000000;
  p_production__level_amounts[2] = 200;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 6 ----------------------------- */
function createWormholeBaseLevel6(IStore store) {
  bytes32[] memory levelKeys = WormholeBaseLevelKeys(6);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredResources._tableId;
  tableIds[1] = P_ListMaxResourceUpgrades._tableId;
  tableIds[2] = P_Production._tableId;

  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 8;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 10;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 1200000000000000000000;
  p_requiredresources__level_amounts[1] = 1200000000000000000000;
  p_requiredresources__level_amounts[2] = 1200000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_listmaxresourceupgrades__level_value = new uint8[](8);
  p_listmaxresourceupgrades__level_value[0] = 1;
  p_listmaxresourceupgrades__level_value[1] = 2;
  p_listmaxresourceupgrades__level_value[2] = 3;
  p_listmaxresourceupgrades__level_value[3] = 8;
  p_listmaxresourceupgrades__level_value[4] = 9;
  p_listmaxresourceupgrades__level_value[5] = 10;
  p_listmaxresourceupgrades__level_value[6] = 18;
  p_listmaxresourceupgrades__level_value[7] = 17;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_ListMaxResourceUpgrades.encode(
    p_listmaxresourceupgrades__level_value
  );
  uint8[] memory p_production__level_resources = new uint8[](3);
  p_production__level_resources[0] = 18;
  p_production__level_resources[1] = 17;
  p_production__level_resources[2] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](3);
  p_production__level_amounts[0] = 16799999999999998;
  p_production__level_amounts[1] = 38000000000000000;
  p_production__level_amounts[2] = 350;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 7 ----------------------------- */
function createWormholeBaseLevel7(IStore store) {
  bytes32[] memory levelKeys = WormholeBaseLevelKeys(7);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredResources._tableId;
  tableIds[1] = P_ListMaxResourceUpgrades._tableId;
  tableIds[2] = P_Production._tableId;

  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 8;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 10;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 2000000000000000000000;
  p_requiredresources__level_amounts[1] = 2000000000000000000000;
  p_requiredresources__level_amounts[2] = 2000000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_listmaxresourceupgrades__level_value = new uint8[](12);
  p_listmaxresourceupgrades__level_value[0] = 1;
  p_listmaxresourceupgrades__level_value[1] = 2;
  p_listmaxresourceupgrades__level_value[2] = 3;
  p_listmaxresourceupgrades__level_value[3] = 8;
  p_listmaxresourceupgrades__level_value[4] = 9;
  p_listmaxresourceupgrades__level_value[5] = 10;
  p_listmaxresourceupgrades__level_value[6] = 4;
  p_listmaxresourceupgrades__level_value[7] = 5;
  p_listmaxresourceupgrades__level_value[8] = 7;
  p_listmaxresourceupgrades__level_value[9] = 6;
  p_listmaxresourceupgrades__level_value[10] = 18;
  p_listmaxresourceupgrades__level_value[11] = 17;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_ListMaxResourceUpgrades.encode(
    p_listmaxresourceupgrades__level_value
  );
  uint8[] memory p_production__level_resources = new uint8[](3);
  p_production__level_resources[0] = 18;
  p_production__level_resources[1] = 17;
  p_production__level_resources[2] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](3);
  p_production__level_amounts[0] = 16799999999999998;
  p_production__level_amounts[1] = 46000000000000000;
  p_production__level_amounts[2] = 350;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 8 ----------------------------- */
function createWormholeBaseLevel8(IStore store) {
  bytes32[] memory levelKeys = WormholeBaseLevelKeys(8);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredResources._tableId;
  tableIds[1] = P_ListMaxResourceUpgrades._tableId;
  tableIds[2] = P_Production._tableId;

  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 8;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 10;
  p_requiredresources__level_resources[3] = 6;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 3000000000000000000000;
  p_requiredresources__level_amounts[1] = 3000000000000000000000;
  p_requiredresources__level_amounts[2] = 3000000000000000000000;
  p_requiredresources__level_amounts[3] = 100000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_listmaxresourceupgrades__level_value = new uint8[](12);
  p_listmaxresourceupgrades__level_value[0] = 1;
  p_listmaxresourceupgrades__level_value[1] = 2;
  p_listmaxresourceupgrades__level_value[2] = 3;
  p_listmaxresourceupgrades__level_value[3] = 8;
  p_listmaxresourceupgrades__level_value[4] = 9;
  p_listmaxresourceupgrades__level_value[5] = 10;
  p_listmaxresourceupgrades__level_value[6] = 4;
  p_listmaxresourceupgrades__level_value[7] = 5;
  p_listmaxresourceupgrades__level_value[8] = 7;
  p_listmaxresourceupgrades__level_value[9] = 6;
  p_listmaxresourceupgrades__level_value[10] = 18;
  p_listmaxresourceupgrades__level_value[11] = 17;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_ListMaxResourceUpgrades.encode(
    p_listmaxresourceupgrades__level_value
  );
  uint8[] memory p_production__level_resources = new uint8[](3);
  p_production__level_resources[0] = 18;
  p_production__level_resources[1] = 17;
  p_production__level_resources[2] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](3);
  p_production__level_amounts[0] = 16799999999999998;
  p_production__level_amounts[1] = 54000000000000000;
  p_production__level_amounts[2] = 500;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 9 ----------------------------- */
function createWormholeBaseLevel9(IStore store) {
  bytes32[] memory levelKeys = WormholeBaseLevelKeys(9);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredResources._tableId;
  tableIds[1] = P_ListMaxResourceUpgrades._tableId;
  tableIds[2] = P_Production._tableId;

  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 8;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 10;
  p_requiredresources__level_resources[3] = 6;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 4000000000000000000000;
  p_requiredresources__level_amounts[1] = 4000000000000000000000;
  p_requiredresources__level_amounts[2] = 4000000000000000000000;
  p_requiredresources__level_amounts[3] = 200000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_listmaxresourceupgrades__level_value = new uint8[](12);
  p_listmaxresourceupgrades__level_value[0] = 1;
  p_listmaxresourceupgrades__level_value[1] = 2;
  p_listmaxresourceupgrades__level_value[2] = 3;
  p_listmaxresourceupgrades__level_value[3] = 8;
  p_listmaxresourceupgrades__level_value[4] = 9;
  p_listmaxresourceupgrades__level_value[5] = 10;
  p_listmaxresourceupgrades__level_value[6] = 4;
  p_listmaxresourceupgrades__level_value[7] = 5;
  p_listmaxresourceupgrades__level_value[8] = 7;
  p_listmaxresourceupgrades__level_value[9] = 6;
  p_listmaxresourceupgrades__level_value[10] = 18;
  p_listmaxresourceupgrades__level_value[11] = 17;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_ListMaxResourceUpgrades.encode(
    p_listmaxresourceupgrades__level_value
  );
  uint8[] memory p_production__level_resources = new uint8[](3);
  p_production__level_resources[0] = 18;
  p_production__level_resources[1] = 17;
  p_production__level_resources[2] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](3);
  p_production__level_amounts[0] = 16799999999999998;
  p_production__level_amounts[1] = 62000000000000000;
  p_production__level_amounts[2] = 500;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 10 ----------------------------- */
function createWormholeBaseLevel10(IStore store) {
  bytes32[] memory levelKeys = WormholeBaseLevelKeys(10);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredResources._tableId;
  tableIds[1] = P_ListMaxResourceUpgrades._tableId;
  tableIds[2] = P_Production._tableId;

  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 4;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 7;
  p_requiredresources__level_resources[3] = 6;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 800000000000000000000;
  p_requiredresources__level_amounts[1] = 800000000000000000000;
  p_requiredresources__level_amounts[2] = 800000000000000000000;
  p_requiredresources__level_amounts[3] = 100000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_listmaxresourceupgrades__level_value = new uint8[](12);
  p_listmaxresourceupgrades__level_value[0] = 1;
  p_listmaxresourceupgrades__level_value[1] = 2;
  p_listmaxresourceupgrades__level_value[2] = 3;
  p_listmaxresourceupgrades__level_value[3] = 8;
  p_listmaxresourceupgrades__level_value[4] = 9;
  p_listmaxresourceupgrades__level_value[5] = 10;
  p_listmaxresourceupgrades__level_value[6] = 4;
  p_listmaxresourceupgrades__level_value[7] = 5;
  p_listmaxresourceupgrades__level_value[8] = 7;
  p_listmaxresourceupgrades__level_value[9] = 6;
  p_listmaxresourceupgrades__level_value[10] = 18;
  p_listmaxresourceupgrades__level_value[11] = 17;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_ListMaxResourceUpgrades.encode(
    p_listmaxresourceupgrades__level_value
  );
  uint8[] memory p_production__level_resources = new uint8[](3);
  p_production__level_resources[0] = 18;
  p_production__level_resources[1] = 17;
  p_production__level_resources[2] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](3);
  p_production__level_amounts[0] = 16799999999999998;
  p_production__level_amounts[1] = 70000000000000008;
  p_production__level_amounts[2] = 650;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 11 ----------------------------- */
function createWormholeBaseLevel11(IStore store) {
  bytes32[] memory levelKeys = WormholeBaseLevelKeys(11);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredResources._tableId;
  tableIds[1] = P_ListMaxResourceUpgrades._tableId;
  tableIds[2] = P_Production._tableId;

  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 4;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 7;
  p_requiredresources__level_resources[3] = 6;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 1500000000000000000000;
  p_requiredresources__level_amounts[1] = 1500000000000000000000;
  p_requiredresources__level_amounts[2] = 1500000000000000000000;
  p_requiredresources__level_amounts[3] = 100000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_listmaxresourceupgrades__level_value = new uint8[](12);
  p_listmaxresourceupgrades__level_value[0] = 1;
  p_listmaxresourceupgrades__level_value[1] = 2;
  p_listmaxresourceupgrades__level_value[2] = 3;
  p_listmaxresourceupgrades__level_value[3] = 8;
  p_listmaxresourceupgrades__level_value[4] = 9;
  p_listmaxresourceupgrades__level_value[5] = 10;
  p_listmaxresourceupgrades__level_value[6] = 4;
  p_listmaxresourceupgrades__level_value[7] = 5;
  p_listmaxresourceupgrades__level_value[8] = 7;
  p_listmaxresourceupgrades__level_value[9] = 6;
  p_listmaxresourceupgrades__level_value[10] = 18;
  p_listmaxresourceupgrades__level_value[11] = 17;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_ListMaxResourceUpgrades.encode(
    p_listmaxresourceupgrades__level_value
  );
  uint8[] memory p_production__level_resources = new uint8[](3);
  p_production__level_resources[0] = 18;
  p_production__level_resources[1] = 17;
  p_production__level_resources[2] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](3);
  p_production__level_amounts[0] = 16799999999999998;
  p_production__level_amounts[1] = 78000000000000000;
  p_production__level_amounts[2] = 650;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 12 ----------------------------- */
function createWormholeBaseLevel12(IStore store) {
  bytes32[] memory levelKeys = WormholeBaseLevelKeys(12);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredResources._tableId;
  tableIds[1] = P_ListMaxResourceUpgrades._tableId;
  tableIds[2] = P_Production._tableId;

  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 4;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 7;
  p_requiredresources__level_resources[3] = 6;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 2500000000000000000000;
  p_requiredresources__level_amounts[1] = 2500000000000000000000;
  p_requiredresources__level_amounts[2] = 2500000000000000000000;
  p_requiredresources__level_amounts[3] = 250000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_listmaxresourceupgrades__level_value = new uint8[](12);
  p_listmaxresourceupgrades__level_value[0] = 1;
  p_listmaxresourceupgrades__level_value[1] = 2;
  p_listmaxresourceupgrades__level_value[2] = 3;
  p_listmaxresourceupgrades__level_value[3] = 8;
  p_listmaxresourceupgrades__level_value[4] = 9;
  p_listmaxresourceupgrades__level_value[5] = 10;
  p_listmaxresourceupgrades__level_value[6] = 4;
  p_listmaxresourceupgrades__level_value[7] = 5;
  p_listmaxresourceupgrades__level_value[8] = 7;
  p_listmaxresourceupgrades__level_value[9] = 6;
  p_listmaxresourceupgrades__level_value[10] = 18;
  p_listmaxresourceupgrades__level_value[11] = 17;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_ListMaxResourceUpgrades.encode(
    p_listmaxresourceupgrades__level_value
  );
  uint8[] memory p_production__level_resources = new uint8[](3);
  p_production__level_resources[0] = 18;
  p_production__level_resources[1] = 17;
  p_production__level_resources[2] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](3);
  p_production__level_amounts[0] = 16799999999999998;
  p_production__level_amounts[1] = 86000000000000000;
  p_production__level_amounts[2] = 800;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 13 ----------------------------- */
function createWormholeBaseLevel13(IStore store) {
  bytes32[] memory levelKeys = WormholeBaseLevelKeys(13);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredResources._tableId;
  tableIds[1] = P_ListMaxResourceUpgrades._tableId;
  tableIds[2] = P_Production._tableId;

  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 4;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 7;
  p_requiredresources__level_resources[3] = 6;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 4000000000000000000000;
  p_requiredresources__level_amounts[1] = 4000000000000000000000;
  p_requiredresources__level_amounts[2] = 4000000000000000000000;
  p_requiredresources__level_amounts[3] = 800000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_listmaxresourceupgrades__level_value = new uint8[](12);
  p_listmaxresourceupgrades__level_value[0] = 1;
  p_listmaxresourceupgrades__level_value[1] = 2;
  p_listmaxresourceupgrades__level_value[2] = 3;
  p_listmaxresourceupgrades__level_value[3] = 8;
  p_listmaxresourceupgrades__level_value[4] = 9;
  p_listmaxresourceupgrades__level_value[5] = 10;
  p_listmaxresourceupgrades__level_value[6] = 4;
  p_listmaxresourceupgrades__level_value[7] = 5;
  p_listmaxresourceupgrades__level_value[8] = 7;
  p_listmaxresourceupgrades__level_value[9] = 6;
  p_listmaxresourceupgrades__level_value[10] = 18;
  p_listmaxresourceupgrades__level_value[11] = 17;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_ListMaxResourceUpgrades.encode(
    p_listmaxresourceupgrades__level_value
  );
  uint8[] memory p_production__level_resources = new uint8[](3);
  p_production__level_resources[0] = 18;
  p_production__level_resources[1] = 17;
  p_production__level_resources[2] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](3);
  p_production__level_amounts[0] = 16799999999999998;
  p_production__level_amounts[1] = 94000000000000000;
  p_production__level_amounts[2] = 800;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 14 ----------------------------- */
function createWormholeBaseLevel14(IStore store) {
  bytes32[] memory levelKeys = WormholeBaseLevelKeys(14);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredResources._tableId;
  tableIds[1] = P_ListMaxResourceUpgrades._tableId;
  tableIds[2] = P_Production._tableId;

  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 4;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 7;
  p_requiredresources__level_resources[3] = 6;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 6000000000000000000000;
  p_requiredresources__level_amounts[1] = 6000000000000000000000;
  p_requiredresources__level_amounts[2] = 6000000000000000000000;
  p_requiredresources__level_amounts[3] = 1200000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_listmaxresourceupgrades__level_value = new uint8[](12);
  p_listmaxresourceupgrades__level_value[0] = 1;
  p_listmaxresourceupgrades__level_value[1] = 2;
  p_listmaxresourceupgrades__level_value[2] = 3;
  p_listmaxresourceupgrades__level_value[3] = 8;
  p_listmaxresourceupgrades__level_value[4] = 9;
  p_listmaxresourceupgrades__level_value[5] = 10;
  p_listmaxresourceupgrades__level_value[6] = 4;
  p_listmaxresourceupgrades__level_value[7] = 5;
  p_listmaxresourceupgrades__level_value[8] = 7;
  p_listmaxresourceupgrades__level_value[9] = 6;
  p_listmaxresourceupgrades__level_value[10] = 18;
  p_listmaxresourceupgrades__level_value[11] = 17;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_ListMaxResourceUpgrades.encode(
    p_listmaxresourceupgrades__level_value
  );
  uint8[] memory p_production__level_resources = new uint8[](3);
  p_production__level_resources[0] = 18;
  p_production__level_resources[1] = 17;
  p_production__level_resources[2] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](3);
  p_production__level_amounts[0] = 16799999999999998;
  p_production__level_amounts[1] = 102000000000000000;
  p_production__level_amounts[2] = 1000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 15 ----------------------------- */
function createWormholeBaseLevel15(IStore store) {
  bytes32[] memory levelKeys = WormholeBaseLevelKeys(15);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredResources._tableId;
  tableIds[1] = P_ListMaxResourceUpgrades._tableId;
  tableIds[2] = P_Production._tableId;

  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 4;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 7;
  p_requiredresources__level_resources[3] = 6;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 10000000000000000000000;
  p_requiredresources__level_amounts[1] = 10000000000000000000000;
  p_requiredresources__level_amounts[2] = 10000000000000000000000;
  p_requiredresources__level_amounts[3] = 2000000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_listmaxresourceupgrades__level_value = new uint8[](12);
  p_listmaxresourceupgrades__level_value[0] = 1;
  p_listmaxresourceupgrades__level_value[1] = 2;
  p_listmaxresourceupgrades__level_value[2] = 3;
  p_listmaxresourceupgrades__level_value[3] = 8;
  p_listmaxresourceupgrades__level_value[4] = 9;
  p_listmaxresourceupgrades__level_value[5] = 10;
  p_listmaxresourceupgrades__level_value[6] = 4;
  p_listmaxresourceupgrades__level_value[7] = 5;
  p_listmaxresourceupgrades__level_value[8] = 7;
  p_listmaxresourceupgrades__level_value[9] = 6;
  p_listmaxresourceupgrades__level_value[10] = 18;
  p_listmaxresourceupgrades__level_value[11] = 17;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_ListMaxResourceUpgrades.encode(
    p_listmaxresourceupgrades__level_value
  );
  uint8[] memory p_production__level_resources = new uint8[](3);
  p_production__level_resources[0] = 18;
  p_production__level_resources[1] = 17;
  p_production__level_resources[2] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](3);
  p_production__level_amounts[0] = 16799999999999998;
  p_production__level_amounts[1] = 120000000000000000;
  p_production__level_amounts[2] = 1200;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseIronL1PrototypeId = "WormholeBaseIronL1";

function WormholeBaseIronL1Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(1));
  _keyTuple[2] = bytes32(uint256(1));
  return _keyTuple;
}

function WormholeBaseIronL1Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseIronL1Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(500000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseCopperL1PrototypeId = "WormholeBaseCopperL1";

function WormholeBaseCopperL1Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(2));
  _keyTuple[2] = bytes32(uint256(1));
  return _keyTuple;
}

function WormholeBaseCopperL1Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseCopperL1Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(500000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseLithiumL1PrototypeId = "WormholeBaseLithiumL1";

function WormholeBaseLithiumL1Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(3));
  _keyTuple[2] = bytes32(uint256(1));
  return _keyTuple;
}

function WormholeBaseLithiumL1Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseLithiumL1Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(500000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseR_EncryptionL1PrototypeId = "WormholeBaseR_EncryptionL1";

function WormholeBaseR_EncryptionL1Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(18));
  _keyTuple[2] = bytes32(uint256(1));
  return _keyTuple;
}

function WormholeBaseR_EncryptionL1Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseR_EncryptionL1Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(3000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseR_HPL1PrototypeId = "WormholeBaseR_HPL1";

function WormholeBaseR_HPL1Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(17));
  _keyTuple[2] = bytes32(uint256(1));
  return _keyTuple;
}

function WormholeBaseR_HPL1Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseR_HPL1Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(100000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseIronL2PrototypeId = "WormholeBaseIronL2";

function WormholeBaseIronL2Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(1));
  _keyTuple[2] = bytes32(uint256(2));
  return _keyTuple;
}

function WormholeBaseIronL2Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseIronL2Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseCopperL2PrototypeId = "WormholeBaseCopperL2";

function WormholeBaseCopperL2Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(2));
  _keyTuple[2] = bytes32(uint256(2));
  return _keyTuple;
}

function WormholeBaseCopperL2Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseCopperL2Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseLithiumL2PrototypeId = "WormholeBaseLithiumL2";

function WormholeBaseLithiumL2Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(3));
  _keyTuple[2] = bytes32(uint256(2));
  return _keyTuple;
}

function WormholeBaseLithiumL2Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseLithiumL2Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseR_EncryptionL2PrototypeId = "WormholeBaseR_EncryptionL2";

function WormholeBaseR_EncryptionL2Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(18));
  _keyTuple[2] = bytes32(uint256(2));
  return _keyTuple;
}

function WormholeBaseR_EncryptionL2Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseR_EncryptionL2Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(3600000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseR_HPL2PrototypeId = "WormholeBaseR_HPL2";

function WormholeBaseR_HPL2Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(17));
  _keyTuple[2] = bytes32(uint256(2));
  return _keyTuple;
}

function WormholeBaseR_HPL2Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseR_HPL2Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(250000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseIronL3PrototypeId = "WormholeBaseIronL3";

function WormholeBaseIronL3Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(1));
  _keyTuple[2] = bytes32(uint256(3));
  return _keyTuple;
}

function WormholeBaseIronL3Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseIronL3Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1500000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseCopperL3PrototypeId = "WormholeBaseCopperL3";

function WormholeBaseCopperL3Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(2));
  _keyTuple[2] = bytes32(uint256(3));
  return _keyTuple;
}

function WormholeBaseCopperL3Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseCopperL3Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1500000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseLithiumL3PrototypeId = "WormholeBaseLithiumL3";

function WormholeBaseLithiumL3Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(3));
  _keyTuple[2] = bytes32(uint256(3));
  return _keyTuple;
}

function WormholeBaseLithiumL3Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseLithiumL3Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1500000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseR_EncryptionL3PrototypeId = "WormholeBaseR_EncryptionL3";

function WormholeBaseR_EncryptionL3Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(18));
  _keyTuple[2] = bytes32(uint256(3));
  return _keyTuple;
}

function WormholeBaseR_EncryptionL3Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseR_EncryptionL3Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(4200000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseR_HPL3PrototypeId = "WormholeBaseR_HPL3";

function WormholeBaseR_HPL3Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(17));
  _keyTuple[2] = bytes32(uint256(3));
  return _keyTuple;
}

function WormholeBaseR_HPL3Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseR_HPL3Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(500000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseIronL4PrototypeId = "WormholeBaseIronL4";

function WormholeBaseIronL4Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(1));
  _keyTuple[2] = bytes32(uint256(4));
  return _keyTuple;
}

function WormholeBaseIronL4Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseIronL4Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(2000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseCopperL4PrototypeId = "WormholeBaseCopperL4";

function WormholeBaseCopperL4Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(2));
  _keyTuple[2] = bytes32(uint256(4));
  return _keyTuple;
}

function WormholeBaseCopperL4Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseCopperL4Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(2000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseLithiumL4PrototypeId = "WormholeBaseLithiumL4";

function WormholeBaseLithiumL4Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(3));
  _keyTuple[2] = bytes32(uint256(4));
  return _keyTuple;
}

function WormholeBaseLithiumL4Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseLithiumL4Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(2000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseR_EncryptionL4PrototypeId = "WormholeBaseR_EncryptionL4";

function WormholeBaseR_EncryptionL4Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(18));
  _keyTuple[2] = bytes32(uint256(4));
  return _keyTuple;
}

function WormholeBaseR_EncryptionL4Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseR_EncryptionL4Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(4800000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseR_HPL4PrototypeId = "WormholeBaseR_HPL4";

function WormholeBaseR_HPL4Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(17));
  _keyTuple[2] = bytes32(uint256(4));
  return _keyTuple;
}

function WormholeBaseR_HPL4Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseR_HPL4Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseIronL5PrototypeId = "WormholeBaseIronL5";

function WormholeBaseIronL5Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(1));
  _keyTuple[2] = bytes32(uint256(5));
  return _keyTuple;
}

function WormholeBaseIronL5Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseIronL5Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(3000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseCopperL5PrototypeId = "WormholeBaseCopperL5";

function WormholeBaseCopperL5Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(2));
  _keyTuple[2] = bytes32(uint256(5));
  return _keyTuple;
}

function WormholeBaseCopperL5Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseCopperL5Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(3000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseLithiumL5PrototypeId = "WormholeBaseLithiumL5";

function WormholeBaseLithiumL5Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(3));
  _keyTuple[2] = bytes32(uint256(5));
  return _keyTuple;
}

function WormholeBaseLithiumL5Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseLithiumL5Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(3000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseIronPlateL5PrototypeId = "WormholeBaseIronPlateL5";

function WormholeBaseIronPlateL5Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(8));
  _keyTuple[2] = bytes32(uint256(5));
  return _keyTuple;
}

function WormholeBaseIronPlateL5Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseIronPlateL5Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(2000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseAlloyL5PrototypeId = "WormholeBaseAlloyL5";

function WormholeBaseAlloyL5Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(9));
  _keyTuple[2] = bytes32(uint256(5));
  return _keyTuple;
}

function WormholeBaseAlloyL5Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseAlloyL5Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(2000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBasePVCellL5PrototypeId = "WormholeBasePVCellL5";

function WormholeBasePVCellL5Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(10));
  _keyTuple[2] = bytes32(uint256(5));
  return _keyTuple;
}

function WormholeBasePVCellL5Prototype(IStore store) {
  bytes32[] memory keys = WormholeBasePVCellL5Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(2000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseR_EncryptionL5PrototypeId = "WormholeBaseR_EncryptionL5";

function WormholeBaseR_EncryptionL5Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(18));
  _keyTuple[2] = bytes32(uint256(5));
  return _keyTuple;
}

function WormholeBaseR_EncryptionL5Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseR_EncryptionL5Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(5400000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseR_HPL5PrototypeId = "WormholeBaseR_HPL5";

function WormholeBaseR_HPL5Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(17));
  _keyTuple[2] = bytes32(uint256(5));
  return _keyTuple;
}

function WormholeBaseR_HPL5Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseR_HPL5Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(2000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseIronL6PrototypeId = "WormholeBaseIronL6";

function WormholeBaseIronL6Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(1));
  _keyTuple[2] = bytes32(uint256(6));
  return _keyTuple;
}

function WormholeBaseIronL6Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseIronL6Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(6000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseCopperL6PrototypeId = "WormholeBaseCopperL6";

function WormholeBaseCopperL6Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(2));
  _keyTuple[2] = bytes32(uint256(6));
  return _keyTuple;
}

function WormholeBaseCopperL6Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseCopperL6Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(6000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseLithiumL6PrototypeId = "WormholeBaseLithiumL6";

function WormholeBaseLithiumL6Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(3));
  _keyTuple[2] = bytes32(uint256(6));
  return _keyTuple;
}

function WormholeBaseLithiumL6Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseLithiumL6Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(6000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseIronPlateL6PrototypeId = "WormholeBaseIronPlateL6";

function WormholeBaseIronPlateL6Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(8));
  _keyTuple[2] = bytes32(uint256(6));
  return _keyTuple;
}

function WormholeBaseIronPlateL6Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseIronPlateL6Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(3000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseAlloyL6PrototypeId = "WormholeBaseAlloyL6";

function WormholeBaseAlloyL6Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(9));
  _keyTuple[2] = bytes32(uint256(6));
  return _keyTuple;
}

function WormholeBaseAlloyL6Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseAlloyL6Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(3000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBasePVCellL6PrototypeId = "WormholeBasePVCellL6";

function WormholeBasePVCellL6Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(10));
  _keyTuple[2] = bytes32(uint256(6));
  return _keyTuple;
}

function WormholeBasePVCellL6Prototype(IStore store) {
  bytes32[] memory keys = WormholeBasePVCellL6Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(3000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseR_EncryptionL6PrototypeId = "WormholeBaseR_EncryptionL6";

function WormholeBaseR_EncryptionL6Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(18));
  _keyTuple[2] = bytes32(uint256(6));
  return _keyTuple;
}

function WormholeBaseR_EncryptionL6Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseR_EncryptionL6Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(6000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseR_HPL6PrototypeId = "WormholeBaseR_HPL6";

function WormholeBaseR_HPL6Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(17));
  _keyTuple[2] = bytes32(uint256(6));
  return _keyTuple;
}

function WormholeBaseR_HPL6Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseR_HPL6Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(3000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseIronL7PrototypeId = "WormholeBaseIronL7";

function WormholeBaseIronL7Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(1));
  _keyTuple[2] = bytes32(uint256(7));
  return _keyTuple;
}

function WormholeBaseIronL7Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseIronL7Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(12000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseCopperL7PrototypeId = "WormholeBaseCopperL7";

function WormholeBaseCopperL7Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(2));
  _keyTuple[2] = bytes32(uint256(7));
  return _keyTuple;
}

function WormholeBaseCopperL7Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseCopperL7Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(12000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseLithiumL7PrototypeId = "WormholeBaseLithiumL7";

function WormholeBaseLithiumL7Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(3));
  _keyTuple[2] = bytes32(uint256(7));
  return _keyTuple;
}

function WormholeBaseLithiumL7Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseLithiumL7Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(12000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseIronPlateL7PrototypeId = "WormholeBaseIronPlateL7";

function WormholeBaseIronPlateL7Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(8));
  _keyTuple[2] = bytes32(uint256(7));
  return _keyTuple;
}

function WormholeBaseIronPlateL7Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseIronPlateL7Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(5000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseAlloyL7PrototypeId = "WormholeBaseAlloyL7";

function WormholeBaseAlloyL7Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(9));
  _keyTuple[2] = bytes32(uint256(7));
  return _keyTuple;
}

function WormholeBaseAlloyL7Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseAlloyL7Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(5000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBasePVCellL7PrototypeId = "WormholeBasePVCellL7";

function WormholeBasePVCellL7Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(10));
  _keyTuple[2] = bytes32(uint256(7));
  return _keyTuple;
}

function WormholeBasePVCellL7Prototype(IStore store) {
  bytes32[] memory keys = WormholeBasePVCellL7Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(5000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseTitaniumL7PrototypeId = "WormholeBaseTitaniumL7";

function WormholeBaseTitaniumL7Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(4));
  _keyTuple[2] = bytes32(uint256(7));
  return _keyTuple;
}

function WormholeBaseTitaniumL7Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseTitaniumL7Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(100000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseIridiumL7PrototypeId = "WormholeBaseIridiumL7";

function WormholeBaseIridiumL7Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(5));
  _keyTuple[2] = bytes32(uint256(7));
  return _keyTuple;
}

function WormholeBaseIridiumL7Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseIridiumL7Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(100000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBasePlatinumL7PrototypeId = "WormholeBasePlatinumL7";

function WormholeBasePlatinumL7Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(7));
  _keyTuple[2] = bytes32(uint256(7));
  return _keyTuple;
}

function WormholeBasePlatinumL7Prototype(IStore store) {
  bytes32[] memory keys = WormholeBasePlatinumL7Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(100000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseKimberliteL7PrototypeId = "WormholeBaseKimberliteL7";

function WormholeBaseKimberliteL7Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(6));
  _keyTuple[2] = bytes32(uint256(7));
  return _keyTuple;
}

function WormholeBaseKimberliteL7Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseKimberliteL7Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(100000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseR_EncryptionL7PrototypeId = "WormholeBaseR_EncryptionL7";

function WormholeBaseR_EncryptionL7Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(18));
  _keyTuple[2] = bytes32(uint256(7));
  return _keyTuple;
}

function WormholeBaseR_EncryptionL7Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseR_EncryptionL7Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(6600000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseR_HPL7PrototypeId = "WormholeBaseR_HPL7";

function WormholeBaseR_HPL7Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(17));
  _keyTuple[2] = bytes32(uint256(7));
  return _keyTuple;
}

function WormholeBaseR_HPL7Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseR_HPL7Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(4500000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseIronL8PrototypeId = "WormholeBaseIronL8";

function WormholeBaseIronL8Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(1));
  _keyTuple[2] = bytes32(uint256(8));
  return _keyTuple;
}

function WormholeBaseIronL8Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseIronL8Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(20000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseCopperL8PrototypeId = "WormholeBaseCopperL8";

function WormholeBaseCopperL8Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(2));
  _keyTuple[2] = bytes32(uint256(8));
  return _keyTuple;
}

function WormholeBaseCopperL8Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseCopperL8Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(20000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseLithiumL8PrototypeId = "WormholeBaseLithiumL8";

function WormholeBaseLithiumL8Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(3));
  _keyTuple[2] = bytes32(uint256(8));
  return _keyTuple;
}

function WormholeBaseLithiumL8Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseLithiumL8Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(20000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseIronPlateL8PrototypeId = "WormholeBaseIronPlateL8";

function WormholeBaseIronPlateL8Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(8));
  _keyTuple[2] = bytes32(uint256(8));
  return _keyTuple;
}

function WormholeBaseIronPlateL8Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseIronPlateL8Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(8000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseAlloyL8PrototypeId = "WormholeBaseAlloyL8";

function WormholeBaseAlloyL8Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(9));
  _keyTuple[2] = bytes32(uint256(8));
  return _keyTuple;
}

function WormholeBaseAlloyL8Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseAlloyL8Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(8000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBasePVCellL8PrototypeId = "WormholeBasePVCellL8";

function WormholeBasePVCellL8Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(10));
  _keyTuple[2] = bytes32(uint256(8));
  return _keyTuple;
}

function WormholeBasePVCellL8Prototype(IStore store) {
  bytes32[] memory keys = WormholeBasePVCellL8Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(8000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseTitaniumL8PrototypeId = "WormholeBaseTitaniumL8";

function WormholeBaseTitaniumL8Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(4));
  _keyTuple[2] = bytes32(uint256(8));
  return _keyTuple;
}

function WormholeBaseTitaniumL8Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseTitaniumL8Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(300000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseIridiumL8PrototypeId = "WormholeBaseIridiumL8";

function WormholeBaseIridiumL8Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(5));
  _keyTuple[2] = bytes32(uint256(8));
  return _keyTuple;
}

function WormholeBaseIridiumL8Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseIridiumL8Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(300000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBasePlatinumL8PrototypeId = "WormholeBasePlatinumL8";

function WormholeBasePlatinumL8Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(7));
  _keyTuple[2] = bytes32(uint256(8));
  return _keyTuple;
}

function WormholeBasePlatinumL8Prototype(IStore store) {
  bytes32[] memory keys = WormholeBasePlatinumL8Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(300000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseKimberliteL8PrototypeId = "WormholeBaseKimberliteL8";

function WormholeBaseKimberliteL8Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(6));
  _keyTuple[2] = bytes32(uint256(8));
  return _keyTuple;
}

function WormholeBaseKimberliteL8Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseKimberliteL8Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(300000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseR_EncryptionL8PrototypeId = "WormholeBaseR_EncryptionL8";

function WormholeBaseR_EncryptionL8Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(18));
  _keyTuple[2] = bytes32(uint256(8));
  return _keyTuple;
}

function WormholeBaseR_EncryptionL8Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseR_EncryptionL8Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(7200000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseR_HPL8PrototypeId = "WormholeBaseR_HPL8";

function WormholeBaseR_HPL8Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(17));
  _keyTuple[2] = bytes32(uint256(8));
  return _keyTuple;
}

function WormholeBaseR_HPL8Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseR_HPL8Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(6000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseIronL9PrototypeId = "WormholeBaseIronL9";

function WormholeBaseIronL9Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(1));
  _keyTuple[2] = bytes32(uint256(9));
  return _keyTuple;
}

function WormholeBaseIronL9Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseIronL9Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(40000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseCopperL9PrototypeId = "WormholeBaseCopperL9";

function WormholeBaseCopperL9Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(2));
  _keyTuple[2] = bytes32(uint256(9));
  return _keyTuple;
}

function WormholeBaseCopperL9Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseCopperL9Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(40000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseLithiumL9PrototypeId = "WormholeBaseLithiumL9";

function WormholeBaseLithiumL9Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(3));
  _keyTuple[2] = bytes32(uint256(9));
  return _keyTuple;
}

function WormholeBaseLithiumL9Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseLithiumL9Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(40000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseIronPlateL9PrototypeId = "WormholeBaseIronPlateL9";

function WormholeBaseIronPlateL9Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(8));
  _keyTuple[2] = bytes32(uint256(9));
  return _keyTuple;
}

function WormholeBaseIronPlateL9Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseIronPlateL9Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(12000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseAlloyL9PrototypeId = "WormholeBaseAlloyL9";

function WormholeBaseAlloyL9Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(9));
  _keyTuple[2] = bytes32(uint256(9));
  return _keyTuple;
}

function WormholeBaseAlloyL9Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseAlloyL9Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(12000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBasePVCellL9PrototypeId = "WormholeBasePVCellL9";

function WormholeBasePVCellL9Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(10));
  _keyTuple[2] = bytes32(uint256(9));
  return _keyTuple;
}

function WormholeBasePVCellL9Prototype(IStore store) {
  bytes32[] memory keys = WormholeBasePVCellL9Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(12000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseTitaniumL9PrototypeId = "WormholeBaseTitaniumL9";

function WormholeBaseTitaniumL9Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(4));
  _keyTuple[2] = bytes32(uint256(9));
  return _keyTuple;
}

function WormholeBaseTitaniumL9Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseTitaniumL9Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(800000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseIridiumL9PrototypeId = "WormholeBaseIridiumL9";

function WormholeBaseIridiumL9Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(5));
  _keyTuple[2] = bytes32(uint256(9));
  return _keyTuple;
}

function WormholeBaseIridiumL9Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseIridiumL9Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(800000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBasePlatinumL9PrototypeId = "WormholeBasePlatinumL9";

function WormholeBasePlatinumL9Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(7));
  _keyTuple[2] = bytes32(uint256(9));
  return _keyTuple;
}

function WormholeBasePlatinumL9Prototype(IStore store) {
  bytes32[] memory keys = WormholeBasePlatinumL9Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(800000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseKimberliteL9PrototypeId = "WormholeBaseKimberliteL9";

function WormholeBaseKimberliteL9Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(6));
  _keyTuple[2] = bytes32(uint256(9));
  return _keyTuple;
}

function WormholeBaseKimberliteL9Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseKimberliteL9Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(800000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseR_EncryptionL9PrototypeId = "WormholeBaseR_EncryptionL9";

function WormholeBaseR_EncryptionL9Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(18));
  _keyTuple[2] = bytes32(uint256(9));
  return _keyTuple;
}

function WormholeBaseR_EncryptionL9Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseR_EncryptionL9Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(7800000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseR_HPL9PrototypeId = "WormholeBaseR_HPL9";

function WormholeBaseR_HPL9Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(17));
  _keyTuple[2] = bytes32(uint256(9));
  return _keyTuple;
}

function WormholeBaseR_HPL9Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseR_HPL9Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(8000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseIronL10PrototypeId = "WormholeBaseIronL10";

function WormholeBaseIronL10Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(1));
  _keyTuple[2] = bytes32(uint256(10));
  return _keyTuple;
}

function WormholeBaseIronL10Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseIronL10Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(60000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseCopperL10PrototypeId = "WormholeBaseCopperL10";

function WormholeBaseCopperL10Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(2));
  _keyTuple[2] = bytes32(uint256(10));
  return _keyTuple;
}

function WormholeBaseCopperL10Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseCopperL10Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(60000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseLithiumL10PrototypeId = "WormholeBaseLithiumL10";

function WormholeBaseLithiumL10Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(3));
  _keyTuple[2] = bytes32(uint256(10));
  return _keyTuple;
}

function WormholeBaseLithiumL10Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseLithiumL10Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(60000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseIronPlateL10PrototypeId = "WormholeBaseIronPlateL10";

function WormholeBaseIronPlateL10Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(8));
  _keyTuple[2] = bytes32(uint256(10));
  return _keyTuple;
}

function WormholeBaseIronPlateL10Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseIronPlateL10Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(16000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseAlloyL10PrototypeId = "WormholeBaseAlloyL10";

function WormholeBaseAlloyL10Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(9));
  _keyTuple[2] = bytes32(uint256(10));
  return _keyTuple;
}

function WormholeBaseAlloyL10Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseAlloyL10Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(16000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBasePVCellL10PrototypeId = "WormholeBasePVCellL10";

function WormholeBasePVCellL10Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(10));
  _keyTuple[2] = bytes32(uint256(10));
  return _keyTuple;
}

function WormholeBasePVCellL10Prototype(IStore store) {
  bytes32[] memory keys = WormholeBasePVCellL10Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(16000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseTitaniumL10PrototypeId = "WormholeBaseTitaniumL10";

function WormholeBaseTitaniumL10Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(4));
  _keyTuple[2] = bytes32(uint256(10));
  return _keyTuple;
}

function WormholeBaseTitaniumL10Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseTitaniumL10Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1200000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseIridiumL10PrototypeId = "WormholeBaseIridiumL10";

function WormholeBaseIridiumL10Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(5));
  _keyTuple[2] = bytes32(uint256(10));
  return _keyTuple;
}

function WormholeBaseIridiumL10Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseIridiumL10Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1200000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBasePlatinumL10PrototypeId = "WormholeBasePlatinumL10";

function WormholeBasePlatinumL10Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(7));
  _keyTuple[2] = bytes32(uint256(10));
  return _keyTuple;
}

function WormholeBasePlatinumL10Prototype(IStore store) {
  bytes32[] memory keys = WormholeBasePlatinumL10Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1200000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseKimberliteL10PrototypeId = "WormholeBaseKimberliteL10";

function WormholeBaseKimberliteL10Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(6));
  _keyTuple[2] = bytes32(uint256(10));
  return _keyTuple;
}

function WormholeBaseKimberliteL10Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseKimberliteL10Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1200000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseR_EncryptionL10PrototypeId = "WormholeBaseR_EncryptionL10";

function WormholeBaseR_EncryptionL10Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(18));
  _keyTuple[2] = bytes32(uint256(10));
  return _keyTuple;
}

function WormholeBaseR_EncryptionL10Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseR_EncryptionL10Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(8400000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseR_HPL10PrototypeId = "WormholeBaseR_HPL10";

function WormholeBaseR_HPL10Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(17));
  _keyTuple[2] = bytes32(uint256(10));
  return _keyTuple;
}

function WormholeBaseR_HPL10Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseR_HPL10Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(10000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseIronL11PrototypeId = "WormholeBaseIronL11";

function WormholeBaseIronL11Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(1));
  _keyTuple[2] = bytes32(uint256(11));
  return _keyTuple;
}

function WormholeBaseIronL11Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseIronL11Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(80000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseCopperL11PrototypeId = "WormholeBaseCopperL11";

function WormholeBaseCopperL11Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(2));
  _keyTuple[2] = bytes32(uint256(11));
  return _keyTuple;
}

function WormholeBaseCopperL11Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseCopperL11Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(80000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseLithiumL11PrototypeId = "WormholeBaseLithiumL11";

function WormholeBaseLithiumL11Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(3));
  _keyTuple[2] = bytes32(uint256(11));
  return _keyTuple;
}

function WormholeBaseLithiumL11Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseLithiumL11Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(80000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseIronPlateL11PrototypeId = "WormholeBaseIronPlateL11";

function WormholeBaseIronPlateL11Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(8));
  _keyTuple[2] = bytes32(uint256(11));
  return _keyTuple;
}

function WormholeBaseIronPlateL11Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseIronPlateL11Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(20000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseAlloyL11PrototypeId = "WormholeBaseAlloyL11";

function WormholeBaseAlloyL11Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(9));
  _keyTuple[2] = bytes32(uint256(11));
  return _keyTuple;
}

function WormholeBaseAlloyL11Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseAlloyL11Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(20000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBasePVCellL11PrototypeId = "WormholeBasePVCellL11";

function WormholeBasePVCellL11Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(10));
  _keyTuple[2] = bytes32(uint256(11));
  return _keyTuple;
}

function WormholeBasePVCellL11Prototype(IStore store) {
  bytes32[] memory keys = WormholeBasePVCellL11Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(20000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseTitaniumL11PrototypeId = "WormholeBaseTitaniumL11";

function WormholeBaseTitaniumL11Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(4));
  _keyTuple[2] = bytes32(uint256(11));
  return _keyTuple;
}

function WormholeBaseTitaniumL11Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseTitaniumL11Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1600000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseIridiumL11PrototypeId = "WormholeBaseIridiumL11";

function WormholeBaseIridiumL11Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(5));
  _keyTuple[2] = bytes32(uint256(11));
  return _keyTuple;
}

function WormholeBaseIridiumL11Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseIridiumL11Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1600000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBasePlatinumL11PrototypeId = "WormholeBasePlatinumL11";

function WormholeBasePlatinumL11Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(7));
  _keyTuple[2] = bytes32(uint256(11));
  return _keyTuple;
}

function WormholeBasePlatinumL11Prototype(IStore store) {
  bytes32[] memory keys = WormholeBasePlatinumL11Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1600000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseKimberliteL11PrototypeId = "WormholeBaseKimberliteL11";

function WormholeBaseKimberliteL11Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(6));
  _keyTuple[2] = bytes32(uint256(11));
  return _keyTuple;
}

function WormholeBaseKimberliteL11Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseKimberliteL11Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1600000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseR_EncryptionL11PrototypeId = "WormholeBaseR_EncryptionL11";

function WormholeBaseR_EncryptionL11Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(18));
  _keyTuple[2] = bytes32(uint256(11));
  return _keyTuple;
}

function WormholeBaseR_EncryptionL11Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseR_EncryptionL11Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(9000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseR_HPL11PrototypeId = "WormholeBaseR_HPL11";

function WormholeBaseR_HPL11Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(17));
  _keyTuple[2] = bytes32(uint256(11));
  return _keyTuple;
}

function WormholeBaseR_HPL11Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseR_HPL11Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(12499999999999998951424);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseIronL12PrototypeId = "WormholeBaseIronL12";

function WormholeBaseIronL12Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(1));
  _keyTuple[2] = bytes32(uint256(12));
  return _keyTuple;
}

function WormholeBaseIronL12Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseIronL12Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(99999999999999991611392);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseCopperL12PrototypeId = "WormholeBaseCopperL12";

function WormholeBaseCopperL12Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(2));
  _keyTuple[2] = bytes32(uint256(12));
  return _keyTuple;
}

function WormholeBaseCopperL12Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseCopperL12Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(99999999999999991611392);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseLithiumL12PrototypeId = "WormholeBaseLithiumL12";

function WormholeBaseLithiumL12Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(3));
  _keyTuple[2] = bytes32(uint256(12));
  return _keyTuple;
}

function WormholeBaseLithiumL12Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseLithiumL12Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(99999999999999991611392);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseIronPlateL12PrototypeId = "WormholeBaseIronPlateL12";

function WormholeBaseIronPlateL12Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(8));
  _keyTuple[2] = bytes32(uint256(12));
  return _keyTuple;
}

function WormholeBaseIronPlateL12Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseIronPlateL12Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(24999999999999997902848);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseAlloyL12PrototypeId = "WormholeBaseAlloyL12";

function WormholeBaseAlloyL12Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(9));
  _keyTuple[2] = bytes32(uint256(12));
  return _keyTuple;
}

function WormholeBaseAlloyL12Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseAlloyL12Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(24999999999999997902848);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBasePVCellL12PrototypeId = "WormholeBasePVCellL12";

function WormholeBasePVCellL12Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(10));
  _keyTuple[2] = bytes32(uint256(12));
  return _keyTuple;
}

function WormholeBasePVCellL12Prototype(IStore store) {
  bytes32[] memory keys = WormholeBasePVCellL12Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(24999999999999997902848);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseTitaniumL12PrototypeId = "WormholeBaseTitaniumL12";

function WormholeBaseTitaniumL12Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(4));
  _keyTuple[2] = bytes32(uint256(12));
  return _keyTuple;
}

function WormholeBaseTitaniumL12Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseTitaniumL12Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(2500000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseIridiumL12PrototypeId = "WormholeBaseIridiumL12";

function WormholeBaseIridiumL12Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(5));
  _keyTuple[2] = bytes32(uint256(12));
  return _keyTuple;
}

function WormholeBaseIridiumL12Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseIridiumL12Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(2500000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBasePlatinumL12PrototypeId = "WormholeBasePlatinumL12";

function WormholeBasePlatinumL12Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(7));
  _keyTuple[2] = bytes32(uint256(12));
  return _keyTuple;
}

function WormholeBasePlatinumL12Prototype(IStore store) {
  bytes32[] memory keys = WormholeBasePlatinumL12Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(2500000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseKimberliteL12PrototypeId = "WormholeBaseKimberliteL12";

function WormholeBaseKimberliteL12Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(6));
  _keyTuple[2] = bytes32(uint256(12));
  return _keyTuple;
}

function WormholeBaseKimberliteL12Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseKimberliteL12Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(2500000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseR_EncryptionL12PrototypeId = "WormholeBaseR_EncryptionL12";

function WormholeBaseR_EncryptionL12Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(18));
  _keyTuple[2] = bytes32(uint256(12));
  return _keyTuple;
}

function WormholeBaseR_EncryptionL12Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseR_EncryptionL12Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(9600000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseR_HPL12PrototypeId = "WormholeBaseR_HPL12";

function WormholeBaseR_HPL12Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(17));
  _keyTuple[2] = bytes32(uint256(12));
  return _keyTuple;
}

function WormholeBaseR_HPL12Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseR_HPL12Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(15000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseIronL13PrototypeId = "WormholeBaseIronL13";

function WormholeBaseIronL13Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(1));
  _keyTuple[2] = bytes32(uint256(13));
  return _keyTuple;
}

function WormholeBaseIronL13Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseIronL13Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(124999999999999997902848);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseCopperL13PrototypeId = "WormholeBaseCopperL13";

function WormholeBaseCopperL13Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(2));
  _keyTuple[2] = bytes32(uint256(13));
  return _keyTuple;
}

function WormholeBaseCopperL13Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseCopperL13Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(124999999999999997902848);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseLithiumL13PrototypeId = "WormholeBaseLithiumL13";

function WormholeBaseLithiumL13Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(3));
  _keyTuple[2] = bytes32(uint256(13));
  return _keyTuple;
}

function WormholeBaseLithiumL13Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseLithiumL13Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(124999999999999997902848);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseIronPlateL13PrototypeId = "WormholeBaseIronPlateL13";

function WormholeBaseIronPlateL13Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(8));
  _keyTuple[2] = bytes32(uint256(13));
  return _keyTuple;
}

function WormholeBaseIronPlateL13Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseIronPlateL13Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(30000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseAlloyL13PrototypeId = "WormholeBaseAlloyL13";

function WormholeBaseAlloyL13Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(9));
  _keyTuple[2] = bytes32(uint256(13));
  return _keyTuple;
}

function WormholeBaseAlloyL13Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseAlloyL13Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(30000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBasePVCellL13PrototypeId = "WormholeBasePVCellL13";

function WormholeBasePVCellL13Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(10));
  _keyTuple[2] = bytes32(uint256(13));
  return _keyTuple;
}

function WormholeBasePVCellL13Prototype(IStore store) {
  bytes32[] memory keys = WormholeBasePVCellL13Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(30000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseTitaniumL13PrototypeId = "WormholeBaseTitaniumL13";

function WormholeBaseTitaniumL13Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(4));
  _keyTuple[2] = bytes32(uint256(13));
  return _keyTuple;
}

function WormholeBaseTitaniumL13Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseTitaniumL13Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(3500000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseIridiumL13PrototypeId = "WormholeBaseIridiumL13";

function WormholeBaseIridiumL13Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(5));
  _keyTuple[2] = bytes32(uint256(13));
  return _keyTuple;
}

function WormholeBaseIridiumL13Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseIridiumL13Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(3500000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBasePlatinumL13PrototypeId = "WormholeBasePlatinumL13";

function WormholeBasePlatinumL13Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(7));
  _keyTuple[2] = bytes32(uint256(13));
  return _keyTuple;
}

function WormholeBasePlatinumL13Prototype(IStore store) {
  bytes32[] memory keys = WormholeBasePlatinumL13Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(3500000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseKimberliteL13PrototypeId = "WormholeBaseKimberliteL13";

function WormholeBaseKimberliteL13Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(6));
  _keyTuple[2] = bytes32(uint256(13));
  return _keyTuple;
}

function WormholeBaseKimberliteL13Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseKimberliteL13Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(3500000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseR_EncryptionL13PrototypeId = "WormholeBaseR_EncryptionL13";

function WormholeBaseR_EncryptionL13Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(18));
  _keyTuple[2] = bytes32(uint256(13));
  return _keyTuple;
}

function WormholeBaseR_EncryptionL13Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseR_EncryptionL13Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(10200000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseR_HPL13PrototypeId = "WormholeBaseR_HPL13";

function WormholeBaseR_HPL13Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(17));
  _keyTuple[2] = bytes32(uint256(13));
  return _keyTuple;
}

function WormholeBaseR_HPL13Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseR_HPL13Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(17500000000000001048576);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseIronL14PrototypeId = "WormholeBaseIronL14";

function WormholeBaseIronL14Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(1));
  _keyTuple[2] = bytes32(uint256(14));
  return _keyTuple;
}

function WormholeBaseIronL14Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseIronL14Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(150000000000000004194304);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseCopperL14PrototypeId = "WormholeBaseCopperL14";

function WormholeBaseCopperL14Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(2));
  _keyTuple[2] = bytes32(uint256(14));
  return _keyTuple;
}

function WormholeBaseCopperL14Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseCopperL14Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(150000000000000004194304);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseLithiumL14PrototypeId = "WormholeBaseLithiumL14";

function WormholeBaseLithiumL14Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(3));
  _keyTuple[2] = bytes32(uint256(14));
  return _keyTuple;
}

function WormholeBaseLithiumL14Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseLithiumL14Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(150000000000000004194304);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseIronPlateL14PrototypeId = "WormholeBaseIronPlateL14";

function WormholeBaseIronPlateL14Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(8));
  _keyTuple[2] = bytes32(uint256(14));
  return _keyTuple;
}

function WormholeBaseIronPlateL14Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseIronPlateL14Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(35000000000000002097152);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseAlloyL14PrototypeId = "WormholeBaseAlloyL14";

function WormholeBaseAlloyL14Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(9));
  _keyTuple[2] = bytes32(uint256(14));
  return _keyTuple;
}

function WormholeBaseAlloyL14Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseAlloyL14Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(35000000000000002097152);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBasePVCellL14PrototypeId = "WormholeBasePVCellL14";

function WormholeBasePVCellL14Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(10));
  _keyTuple[2] = bytes32(uint256(14));
  return _keyTuple;
}

function WormholeBasePVCellL14Prototype(IStore store) {
  bytes32[] memory keys = WormholeBasePVCellL14Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(35000000000000002097152);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseTitaniumL14PrototypeId = "WormholeBaseTitaniumL14";

function WormholeBaseTitaniumL14Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(4));
  _keyTuple[2] = bytes32(uint256(14));
  return _keyTuple;
}

function WormholeBaseTitaniumL14Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseTitaniumL14Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(5000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseIridiumL14PrototypeId = "WormholeBaseIridiumL14";

function WormholeBaseIridiumL14Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(5));
  _keyTuple[2] = bytes32(uint256(14));
  return _keyTuple;
}

function WormholeBaseIridiumL14Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseIridiumL14Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(5000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBasePlatinumL14PrototypeId = "WormholeBasePlatinumL14";

function WormholeBasePlatinumL14Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(7));
  _keyTuple[2] = bytes32(uint256(14));
  return _keyTuple;
}

function WormholeBasePlatinumL14Prototype(IStore store) {
  bytes32[] memory keys = WormholeBasePlatinumL14Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(5000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseKimberliteL14PrototypeId = "WormholeBaseKimberliteL14";

function WormholeBaseKimberliteL14Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(6));
  _keyTuple[2] = bytes32(uint256(14));
  return _keyTuple;
}

function WormholeBaseKimberliteL14Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseKimberliteL14Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(5000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseR_EncryptionL14PrototypeId = "WormholeBaseR_EncryptionL14";

function WormholeBaseR_EncryptionL14Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(18));
  _keyTuple[2] = bytes32(uint256(14));
  return _keyTuple;
}

function WormholeBaseR_EncryptionL14Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseR_EncryptionL14Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(11000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseR_HPL14PrototypeId = "WormholeBaseR_HPL14";

function WormholeBaseR_HPL14Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(17));
  _keyTuple[2] = bytes32(uint256(14));
  return _keyTuple;
}

function WormholeBaseR_HPL14Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseR_HPL14Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(20000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseIronL15PrototypeId = "WormholeBaseIronL15";

function WormholeBaseIronL15Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(1));
  _keyTuple[2] = bytes32(uint256(15));
  return _keyTuple;
}

function WormholeBaseIronL15Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseIronL15Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(199999999999999983222784);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseCopperL15PrototypeId = "WormholeBaseCopperL15";

function WormholeBaseCopperL15Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(2));
  _keyTuple[2] = bytes32(uint256(15));
  return _keyTuple;
}

function WormholeBaseCopperL15Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseCopperL15Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(199999999999999983222784);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseLithiumL15PrototypeId = "WormholeBaseLithiumL15";

function WormholeBaseLithiumL15Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(3));
  _keyTuple[2] = bytes32(uint256(15));
  return _keyTuple;
}

function WormholeBaseLithiumL15Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseLithiumL15Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(199999999999999983222784);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseIronPlateL15PrototypeId = "WormholeBaseIronPlateL15";

function WormholeBaseIronPlateL15Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(8));
  _keyTuple[2] = bytes32(uint256(15));
  return _keyTuple;
}

function WormholeBaseIronPlateL15Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseIronPlateL15Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(49999999999999995805696);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseAlloyL15PrototypeId = "WormholeBaseAlloyL15";

function WormholeBaseAlloyL15Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(9));
  _keyTuple[2] = bytes32(uint256(15));
  return _keyTuple;
}

function WormholeBaseAlloyL15Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseAlloyL15Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(49999999999999995805696);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBasePVCellL15PrototypeId = "WormholeBasePVCellL15";

function WormholeBasePVCellL15Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(10));
  _keyTuple[2] = bytes32(uint256(15));
  return _keyTuple;
}

function WormholeBasePVCellL15Prototype(IStore store) {
  bytes32[] memory keys = WormholeBasePVCellL15Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(49999999999999995805696);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseTitaniumL15PrototypeId = "WormholeBaseTitaniumL15";

function WormholeBaseTitaniumL15Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(4));
  _keyTuple[2] = bytes32(uint256(15));
  return _keyTuple;
}

function WormholeBaseTitaniumL15Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseTitaniumL15Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(10000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseIridiumL15PrototypeId = "WormholeBaseIridiumL15";

function WormholeBaseIridiumL15Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(5));
  _keyTuple[2] = bytes32(uint256(15));
  return _keyTuple;
}

function WormholeBaseIridiumL15Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseIridiumL15Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(10000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBasePlatinumL15PrototypeId = "WormholeBasePlatinumL15";

function WormholeBasePlatinumL15Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(7));
  _keyTuple[2] = bytes32(uint256(15));
  return _keyTuple;
}

function WormholeBasePlatinumL15Prototype(IStore store) {
  bytes32[] memory keys = WormholeBasePlatinumL15Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(10000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseKimberliteL15PrototypeId = "WormholeBaseKimberliteL15";

function WormholeBaseKimberliteL15Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(6));
  _keyTuple[2] = bytes32(uint256(15));
  return _keyTuple;
}

function WormholeBaseKimberliteL15Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseKimberliteL15Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(10000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseR_EncryptionL15PrototypeId = "WormholeBaseR_EncryptionL15";

function WormholeBaseR_EncryptionL15Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(18));
  _keyTuple[2] = bytes32(uint256(15));
  return _keyTuple;
}

function WormholeBaseR_EncryptionL15Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseR_EncryptionL15Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(12000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WormholeBaseR_HPL15PrototypeId = "WormholeBaseR_HPL15";

function WormholeBaseR_HPL15Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x576f726d686f6c65426173650000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(17));
  _keyTuple[2] = bytes32(uint256(15));
  return _keyTuple;
}

function WormholeBaseR_HPL15Prototype(IStore store) {
  bytes32[] memory keys = WormholeBaseR_HPL15Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(24999999999999997902848);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant IronMinePrototypeId = "IronMine";

function IronMineKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = IronMinePrototypeId;
  return _keyTuple;
}

function IronMineLevelKeys(uint32 level) pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](2);

  _keyTuple[0] = IronMinePrototypeId;
  _keyTuple[1] = bytes32(uint256(level));
  return _keyTuple;
}
function IronMinePrototype(IStore store) {
  bytes32[] memory keys = IronMineKeys();
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_Blueprint._tableId;
  tableIds[1] = P_MaxLevel._tableId;
  tableIds[2] = P_RequiredTile._tableId;

  int32[] memory p_blueprint_value = new int32[](2);
  p_blueprint_value[0] = 0;
  p_blueprint_value[1] = 0;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_Blueprint.encode(p_blueprint_value);
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_MaxLevel.encode(15);
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredTile.encode(1);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);

  createIronMineLevel1(store);
  createIronMineLevel2(store);
  createIronMineLevel3(store);
  createIronMineLevel4(store);
  createIronMineLevel5(store);
  createIronMineLevel6(store);
  createIronMineLevel7(store);
  createIronMineLevel8(store);
  createIronMineLevel9(store);
  createIronMineLevel10(store);
  createIronMineLevel11(store);
  createIronMineLevel12(store);
  createIronMineLevel13(store);
  createIronMineLevel14(store);
  createIronMineLevel15(store);
}

/* ----------------------------- LEVEL 1 ----------------------------- */
function createIronMineLevel1(IStore store) {
  bytes32[] memory levelKeys = IronMineLevelKeys(1);
  ResourceId[] memory tableIds = new ResourceId[](2);
  bytes[] memory staticData = new bytes[](2);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](2);
  bytes[] memory dynamicData = new bytes[](2);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(1);
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 1;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 90000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 2 ----------------------------- */
function createIronMineLevel2(IStore store) {
  bytes32[] memory levelKeys = IronMineLevelKeys(2);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(1);
  uint8[] memory p_requiredresources__level_resources = new uint8[](1);
  p_requiredresources__level_resources[0] = 1;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](1);
  p_requiredresources__level_amounts[0] = 150000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 1;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 120000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 3 ----------------------------- */
function createIronMineLevel3(IStore store) {
  bytes32[] memory levelKeys = IronMineLevelKeys(3);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(2);
  uint8[] memory p_requiredresources__level_resources = new uint8[](1);
  p_requiredresources__level_resources[0] = 1;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](1);
  p_requiredresources__level_amounts[0] = 400000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 1;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 150000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 4 ----------------------------- */
function createIronMineLevel4(IStore store) {
  bytes32[] memory levelKeys = IronMineLevelKeys(4);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(3);
  uint8[] memory p_requiredresources__level_resources = new uint8[](1);
  p_requiredresources__level_resources[0] = 1;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](1);
  p_requiredresources__level_amounts[0] = 1200000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 1;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 180000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 5 ----------------------------- */
function createIronMineLevel5(IStore store) {
  bytes32[] memory levelKeys = IronMineLevelKeys(5);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(4);
  uint8[] memory p_requiredresources__level_resources = new uint8[](1);
  p_requiredresources__level_resources[0] = 1;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](1);
  p_requiredresources__level_amounts[0] = 2000000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 1;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 230000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 6 ----------------------------- */
function createIronMineLevel6(IStore store) {
  bytes32[] memory levelKeys = IronMineLevelKeys(6);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(6);
  uint8[] memory p_requiredresources__level_resources = new uint8[](2);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 8;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](2);
  p_requiredresources__level_amounts[0] = 2500000000000000000000;
  p_requiredresources__level_amounts[1] = 500000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 1;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 280000000000000032;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 7 ----------------------------- */
function createIronMineLevel7(IStore store) {
  bytes32[] memory levelKeys = IronMineLevelKeys(7);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(7);
  uint8[] memory p_requiredresources__level_resources = new uint8[](2);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 8;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](2);
  p_requiredresources__level_amounts[0] = 5000000000000000000000;
  p_requiredresources__level_amounts[1] = 1000000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 1;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 330000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 8 ----------------------------- */
function createIronMineLevel8(IStore store) {
  bytes32[] memory levelKeys = IronMineLevelKeys(8);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(8);
  uint8[] memory p_requiredresources__level_resources = new uint8[](2);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 8;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](2);
  p_requiredresources__level_amounts[0] = 10000000000000000000000;
  p_requiredresources__level_amounts[1] = 1500000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 1;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 380000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 9 ----------------------------- */
function createIronMineLevel9(IStore store) {
  bytes32[] memory levelKeys = IronMineLevelKeys(9);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(9);
  uint8[] memory p_requiredresources__level_resources = new uint8[](2);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 8;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](2);
  p_requiredresources__level_amounts[0] = 20000000000000000000000;
  p_requiredresources__level_amounts[1] = 2000000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 1;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 430000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 10 ----------------------------- */
function createIronMineLevel10(IStore store) {
  bytes32[] memory levelKeys = IronMineLevelKeys(10);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(10);
  uint8[] memory p_requiredresources__level_resources = new uint8[](2);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 4;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](2);
  p_requiredresources__level_amounts[0] = 35000000000000002097152;
  p_requiredresources__level_amounts[1] = 800000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 1;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 500000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 11 ----------------------------- */
function createIronMineLevel11(IStore store) {
  bytes32[] memory levelKeys = IronMineLevelKeys(11);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(11);
  uint8[] memory p_requiredresources__level_resources = new uint8[](2);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 4;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](2);
  p_requiredresources__level_amounts[0] = 49999999999999995805696;
  p_requiredresources__level_amounts[1] = 1500000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 1;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 569999999999999936;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 12 ----------------------------- */
function createIronMineLevel12(IStore store) {
  bytes32[] memory levelKeys = IronMineLevelKeys(12);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(12);
  uint8[] memory p_requiredresources__level_resources = new uint8[](2);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 4;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](2);
  p_requiredresources__level_amounts[0] = 75000000000000002097152;
  p_requiredresources__level_amounts[1] = 2000000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 1;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 650000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 13 ----------------------------- */
function createIronMineLevel13(IStore store) {
  bytes32[] memory levelKeys = IronMineLevelKeys(13);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(13);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 4;
  p_requiredresources__level_resources[2] = 6;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 99999999999999991611392;
  p_requiredresources__level_amounts[1] = 5000000000000000000000;
  p_requiredresources__level_amounts[2] = 1000000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 1;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 750000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 14 ----------------------------- */
function createIronMineLevel14(IStore store) {
  bytes32[] memory levelKeys = IronMineLevelKeys(14);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(14);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 4;
  p_requiredresources__level_resources[2] = 6;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 99999999999999991611392;
  p_requiredresources__level_amounts[1] = 8000000000000000000000;
  p_requiredresources__level_amounts[2] = 1500000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 1;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 870000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 15 ----------------------------- */
function createIronMineLevel15(IStore store) {
  bytes32[] memory levelKeys = IronMineLevelKeys(15);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(15);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 4;
  p_requiredresources__level_resources[2] = 6;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 99999999999999991611392;
  p_requiredresources__level_amounts[1] = 10000000000000000000000;
  p_requiredresources__level_amounts[2] = 2000000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 1;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 1000000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant CopperMinePrototypeId = "CopperMine";

function CopperMineKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = CopperMinePrototypeId;
  return _keyTuple;
}

function CopperMineLevelKeys(uint32 level) pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](2);

  _keyTuple[0] = CopperMinePrototypeId;
  _keyTuple[1] = bytes32(uint256(level));
  return _keyTuple;
}
function CopperMinePrototype(IStore store) {
  bytes32[] memory keys = CopperMineKeys();
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_Blueprint._tableId;
  tableIds[1] = P_MaxLevel._tableId;
  tableIds[2] = P_RequiredTile._tableId;

  int32[] memory p_blueprint_value = new int32[](2);
  p_blueprint_value[0] = 0;
  p_blueprint_value[1] = 0;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_Blueprint.encode(p_blueprint_value);
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_MaxLevel.encode(15);
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredTile.encode(1);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);

  createCopperMineLevel1(store);
  createCopperMineLevel2(store);
  createCopperMineLevel3(store);
  createCopperMineLevel4(store);
  createCopperMineLevel5(store);
  createCopperMineLevel6(store);
  createCopperMineLevel7(store);
  createCopperMineLevel8(store);
  createCopperMineLevel9(store);
  createCopperMineLevel10(store);
  createCopperMineLevel11(store);
  createCopperMineLevel12(store);
  createCopperMineLevel13(store);
  createCopperMineLevel14(store);
  createCopperMineLevel15(store);
}

/* ----------------------------- LEVEL 1 ----------------------------- */
function createCopperMineLevel1(IStore store) {
  bytes32[] memory levelKeys = CopperMineLevelKeys(1);
  ResourceId[] memory tableIds = new ResourceId[](2);
  bytes[] memory staticData = new bytes[](2);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](2);
  bytes[] memory dynamicData = new bytes[](2);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(1);
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 2;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 90000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 2 ----------------------------- */
function createCopperMineLevel2(IStore store) {
  bytes32[] memory levelKeys = CopperMineLevelKeys(2);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(1);
  uint8[] memory p_requiredresources__level_resources = new uint8[](2);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 2;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](2);
  p_requiredresources__level_amounts[0] = 50000000000000000000;
  p_requiredresources__level_amounts[1] = 100000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 2;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 120000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 3 ----------------------------- */
function createCopperMineLevel3(IStore store) {
  bytes32[] memory levelKeys = CopperMineLevelKeys(3);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(2);
  uint8[] memory p_requiredresources__level_resources = new uint8[](2);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 2;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](2);
  p_requiredresources__level_amounts[0] = 100000000000000000000;
  p_requiredresources__level_amounts[1] = 300000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 2;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 150000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 4 ----------------------------- */
function createCopperMineLevel4(IStore store) {
  bytes32[] memory levelKeys = CopperMineLevelKeys(4);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(3);
  uint8[] memory p_requiredresources__level_resources = new uint8[](2);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 2;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](2);
  p_requiredresources__level_amounts[0] = 200000000000000000000;
  p_requiredresources__level_amounts[1] = 1000000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 2;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 180000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 5 ----------------------------- */
function createCopperMineLevel5(IStore store) {
  bytes32[] memory levelKeys = CopperMineLevelKeys(5);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(4);
  uint8[] memory p_requiredresources__level_resources = new uint8[](2);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 2;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](2);
  p_requiredresources__level_amounts[0] = 400000000000000000000;
  p_requiredresources__level_amounts[1] = 1600000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 2;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 230000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 6 ----------------------------- */
function createCopperMineLevel6(IStore store) {
  bytes32[] memory levelKeys = CopperMineLevelKeys(6);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(6);
  uint8[] memory p_requiredresources__level_resources = new uint8[](2);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 9;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](2);
  p_requiredresources__level_amounts[0] = 2500000000000000000000;
  p_requiredresources__level_amounts[1] = 500000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 2;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 280000000000000032;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 7 ----------------------------- */
function createCopperMineLevel7(IStore store) {
  bytes32[] memory levelKeys = CopperMineLevelKeys(7);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(7);
  uint8[] memory p_requiredresources__level_resources = new uint8[](2);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 9;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](2);
  p_requiredresources__level_amounts[0] = 5000000000000000000000;
  p_requiredresources__level_amounts[1] = 1000000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 2;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 330000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 8 ----------------------------- */
function createCopperMineLevel8(IStore store) {
  bytes32[] memory levelKeys = CopperMineLevelKeys(8);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(8);
  uint8[] memory p_requiredresources__level_resources = new uint8[](2);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 9;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](2);
  p_requiredresources__level_amounts[0] = 10000000000000000000000;
  p_requiredresources__level_amounts[1] = 1500000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 2;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 380000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 9 ----------------------------- */
function createCopperMineLevel9(IStore store) {
  bytes32[] memory levelKeys = CopperMineLevelKeys(9);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(9);
  uint8[] memory p_requiredresources__level_resources = new uint8[](2);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 9;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](2);
  p_requiredresources__level_amounts[0] = 20000000000000000000000;
  p_requiredresources__level_amounts[1] = 2000000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 2;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 430000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 10 ----------------------------- */
function createCopperMineLevel10(IStore store) {
  bytes32[] memory levelKeys = CopperMineLevelKeys(10);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(10);
  uint8[] memory p_requiredresources__level_resources = new uint8[](2);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 5;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](2);
  p_requiredresources__level_amounts[0] = 35000000000000002097152;
  p_requiredresources__level_amounts[1] = 800000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 2;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 500000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 11 ----------------------------- */
function createCopperMineLevel11(IStore store) {
  bytes32[] memory levelKeys = CopperMineLevelKeys(11);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(11);
  uint8[] memory p_requiredresources__level_resources = new uint8[](2);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 5;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](2);
  p_requiredresources__level_amounts[0] = 49999999999999995805696;
  p_requiredresources__level_amounts[1] = 1500000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 2;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 569999999999999936;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 12 ----------------------------- */
function createCopperMineLevel12(IStore store) {
  bytes32[] memory levelKeys = CopperMineLevelKeys(12);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(12);
  uint8[] memory p_requiredresources__level_resources = new uint8[](2);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 5;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](2);
  p_requiredresources__level_amounts[0] = 75000000000000002097152;
  p_requiredresources__level_amounts[1] = 3000000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 2;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 650000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 13 ----------------------------- */
function createCopperMineLevel13(IStore store) {
  bytes32[] memory levelKeys = CopperMineLevelKeys(13);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(13);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 6;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 99999999999999991611392;
  p_requiredresources__level_amounts[1] = 5000000000000000000000;
  p_requiredresources__level_amounts[2] = 1000000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 2;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 750000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 14 ----------------------------- */
function createCopperMineLevel14(IStore store) {
  bytes32[] memory levelKeys = CopperMineLevelKeys(14);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(14);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 6;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 99999999999999991611392;
  p_requiredresources__level_amounts[1] = 8000000000000000000000;
  p_requiredresources__level_amounts[2] = 1500000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 2;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 870000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 15 ----------------------------- */
function createCopperMineLevel15(IStore store) {
  bytes32[] memory levelKeys = CopperMineLevelKeys(15);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(15);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 6;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 99999999999999991611392;
  p_requiredresources__level_amounts[1] = 10000000000000000000000;
  p_requiredresources__level_amounts[2] = 2000000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 2;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 1000000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant LithiumMinePrototypeId = "LithiumMine";

function LithiumMineKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = LithiumMinePrototypeId;
  return _keyTuple;
}

function LithiumMineLevelKeys(uint32 level) pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](2);

  _keyTuple[0] = LithiumMinePrototypeId;
  _keyTuple[1] = bytes32(uint256(level));
  return _keyTuple;
}
function LithiumMinePrototype(IStore store) {
  bytes32[] memory keys = LithiumMineKeys();
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_Blueprint._tableId;
  tableIds[1] = P_MaxLevel._tableId;
  tableIds[2] = P_RequiredTile._tableId;

  int32[] memory p_blueprint_value = new int32[](2);
  p_blueprint_value[0] = 0;
  p_blueprint_value[1] = 0;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_Blueprint.encode(p_blueprint_value);
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_MaxLevel.encode(15);
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredTile.encode(1);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);

  createLithiumMineLevel1(store);
  createLithiumMineLevel2(store);
  createLithiumMineLevel3(store);
  createLithiumMineLevel4(store);
  createLithiumMineLevel5(store);
  createLithiumMineLevel6(store);
  createLithiumMineLevel7(store);
  createLithiumMineLevel8(store);
  createLithiumMineLevel9(store);
  createLithiumMineLevel10(store);
  createLithiumMineLevel11(store);
  createLithiumMineLevel12(store);
  createLithiumMineLevel13(store);
  createLithiumMineLevel14(store);
  createLithiumMineLevel15(store);
}

/* ----------------------------- LEVEL 1 ----------------------------- */
function createLithiumMineLevel1(IStore store) {
  bytes32[] memory levelKeys = LithiumMineLevelKeys(1);
  ResourceId[] memory tableIds = new ResourceId[](2);
  bytes[] memory staticData = new bytes[](2);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](2);
  bytes[] memory dynamicData = new bytes[](2);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(1);
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 3;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 90000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 2 ----------------------------- */
function createLithiumMineLevel2(IStore store) {
  bytes32[] memory levelKeys = LithiumMineLevelKeys(2);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(1);
  uint8[] memory p_requiredresources__level_resources = new uint8[](2);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 3;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](2);
  p_requiredresources__level_amounts[0] = 50000000000000000000;
  p_requiredresources__level_amounts[1] = 100000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 3;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 120000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 3 ----------------------------- */
function createLithiumMineLevel3(IStore store) {
  bytes32[] memory levelKeys = LithiumMineLevelKeys(3);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(2);
  uint8[] memory p_requiredresources__level_resources = new uint8[](2);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 3;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](2);
  p_requiredresources__level_amounts[0] = 100000000000000000000;
  p_requiredresources__level_amounts[1] = 300000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 3;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 150000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 4 ----------------------------- */
function createLithiumMineLevel4(IStore store) {
  bytes32[] memory levelKeys = LithiumMineLevelKeys(4);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(3);
  uint8[] memory p_requiredresources__level_resources = new uint8[](2);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 3;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](2);
  p_requiredresources__level_amounts[0] = 200000000000000000000;
  p_requiredresources__level_amounts[1] = 1000000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 3;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 180000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 5 ----------------------------- */
function createLithiumMineLevel5(IStore store) {
  bytes32[] memory levelKeys = LithiumMineLevelKeys(5);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(4);
  uint8[] memory p_requiredresources__level_resources = new uint8[](2);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 3;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](2);
  p_requiredresources__level_amounts[0] = 400000000000000000000;
  p_requiredresources__level_amounts[1] = 1600000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 3;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 230000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 6 ----------------------------- */
function createLithiumMineLevel6(IStore store) {
  bytes32[] memory levelKeys = LithiumMineLevelKeys(6);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(6);
  uint8[] memory p_requiredresources__level_resources = new uint8[](2);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 10;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](2);
  p_requiredresources__level_amounts[0] = 2500000000000000000000;
  p_requiredresources__level_amounts[1] = 500000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 3;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 280000000000000032;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 7 ----------------------------- */
function createLithiumMineLevel7(IStore store) {
  bytes32[] memory levelKeys = LithiumMineLevelKeys(7);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(7);
  uint8[] memory p_requiredresources__level_resources = new uint8[](2);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 10;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](2);
  p_requiredresources__level_amounts[0] = 5000000000000000000000;
  p_requiredresources__level_amounts[1] = 1000000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 3;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 330000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 8 ----------------------------- */
function createLithiumMineLevel8(IStore store) {
  bytes32[] memory levelKeys = LithiumMineLevelKeys(8);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(8);
  uint8[] memory p_requiredresources__level_resources = new uint8[](2);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 10;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](2);
  p_requiredresources__level_amounts[0] = 10000000000000000000000;
  p_requiredresources__level_amounts[1] = 1500000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 3;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 380000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 9 ----------------------------- */
function createLithiumMineLevel9(IStore store) {
  bytes32[] memory levelKeys = LithiumMineLevelKeys(9);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(9);
  uint8[] memory p_requiredresources__level_resources = new uint8[](2);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 10;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](2);
  p_requiredresources__level_amounts[0] = 20000000000000000000000;
  p_requiredresources__level_amounts[1] = 2000000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 3;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 430000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 10 ----------------------------- */
function createLithiumMineLevel10(IStore store) {
  bytes32[] memory levelKeys = LithiumMineLevelKeys(10);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(10);
  uint8[] memory p_requiredresources__level_resources = new uint8[](2);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 7;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](2);
  p_requiredresources__level_amounts[0] = 35000000000000002097152;
  p_requiredresources__level_amounts[1] = 800000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 3;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 500000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 11 ----------------------------- */
function createLithiumMineLevel11(IStore store) {
  bytes32[] memory levelKeys = LithiumMineLevelKeys(11);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(11);
  uint8[] memory p_requiredresources__level_resources = new uint8[](2);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 7;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](2);
  p_requiredresources__level_amounts[0] = 49999999999999995805696;
  p_requiredresources__level_amounts[1] = 1500000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 3;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 569999999999999936;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 12 ----------------------------- */
function createLithiumMineLevel12(IStore store) {
  bytes32[] memory levelKeys = LithiumMineLevelKeys(12);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(12);
  uint8[] memory p_requiredresources__level_resources = new uint8[](2);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 7;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](2);
  p_requiredresources__level_amounts[0] = 75000000000000002097152;
  p_requiredresources__level_amounts[1] = 3000000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 3;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 650000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 13 ----------------------------- */
function createLithiumMineLevel13(IStore store) {
  bytes32[] memory levelKeys = LithiumMineLevelKeys(13);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(13);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 7;
  p_requiredresources__level_resources[2] = 6;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 99999999999999991611392;
  p_requiredresources__level_amounts[1] = 5000000000000000000000;
  p_requiredresources__level_amounts[2] = 1000000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 3;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 750000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 14 ----------------------------- */
function createLithiumMineLevel14(IStore store) {
  bytes32[] memory levelKeys = LithiumMineLevelKeys(14);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(14);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 7;
  p_requiredresources__level_resources[2] = 6;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 99999999999999991611392;
  p_requiredresources__level_amounts[1] = 8000000000000000000000;
  p_requiredresources__level_amounts[2] = 1500000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 3;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 870000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 15 ----------------------------- */
function createLithiumMineLevel15(IStore store) {
  bytes32[] memory levelKeys = LithiumMineLevelKeys(15);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(15);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 7;
  p_requiredresources__level_resources[2] = 6;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 99999999999999991611392;
  p_requiredresources__level_amounts[1] = 10000000000000000000000;
  p_requiredresources__level_amounts[2] = 2000000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 3;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 1000000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant KimberliteMinePrototypeId = "KimberliteMine";

function KimberliteMineKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = KimberliteMinePrototypeId;
  return _keyTuple;
}

function KimberliteMineLevelKeys(uint32 level) pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](2);

  _keyTuple[0] = KimberliteMinePrototypeId;
  _keyTuple[1] = bytes32(uint256(level));
  return _keyTuple;
}
function KimberliteMinePrototype(IStore store) {
  bytes32[] memory keys = KimberliteMineKeys();
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_Blueprint._tableId;
  tableIds[1] = P_MaxLevel._tableId;
  tableIds[2] = P_RequiredTile._tableId;

  int32[] memory p_blueprint_value = new int32[](2);
  p_blueprint_value[0] = 0;
  p_blueprint_value[1] = 0;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_Blueprint.encode(p_blueprint_value);
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_MaxLevel.encode(5);
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredTile.encode(6);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);

  createKimberliteMineLevel1(store);
  createKimberliteMineLevel2(store);
  createKimberliteMineLevel3(store);
  createKimberliteMineLevel4(store);
  createKimberliteMineLevel5(store);
}

/* ----------------------------- LEVEL 1 ----------------------------- */
function createKimberliteMineLevel1(IStore store) {
  bytes32[] memory levelKeys = KimberliteMineLevelKeys(1);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredResources._tableId;
  tableIds[1] = P_RequiredBaseLevel._tableId;
  tableIds[2] = P_Production._tableId;

  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 2;
  p_requiredresources__level_resources[2] = 3;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 1500000000000000000000;
  p_requiredresources__level_amounts[1] = 1500000000000000000000;
  p_requiredresources__level_amounts[2] = 1500000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredBaseLevel.encode(1);
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 6;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 8000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 2 ----------------------------- */
function createKimberliteMineLevel2(IStore store) {
  bytes32[] memory levelKeys = KimberliteMineLevelKeys(2);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(3);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 8;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 10;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 1500000000000000000000;
  p_requiredresources__level_amounts[1] = 1500000000000000000000;
  p_requiredresources__level_amounts[2] = 1500000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 6;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 17000000000000002;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 3 ----------------------------- */
function createKimberliteMineLevel3(IStore store) {
  bytes32[] memory levelKeys = KimberliteMineLevelKeys(3);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(8);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 4;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 7;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 500000000000000000000;
  p_requiredresources__level_amounts[1] = 500000000000000000000;
  p_requiredresources__level_amounts[2] = 500000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 6;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 25000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 4 ----------------------------- */
function createKimberliteMineLevel4(IStore store) {
  bytes32[] memory levelKeys = KimberliteMineLevelKeys(4);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(13);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 4;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 7;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 800000000000000000000;
  p_requiredresources__level_amounts[1] = 800000000000000000000;
  p_requiredresources__level_amounts[2] = 800000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 6;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 38000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 5 ----------------------------- */
function createKimberliteMineLevel5(IStore store) {
  bytes32[] memory levelKeys = KimberliteMineLevelKeys(5);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(15);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 4;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 7;
  p_requiredresources__level_resources[3] = 6;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 1200000000000000000000;
  p_requiredresources__level_amounts[1] = 1200000000000000000000;
  p_requiredresources__level_amounts[2] = 1200000000000000000000;
  p_requiredresources__level_amounts[3] = 1200000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 6;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 50000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant IridiumMinePrototypeId = "IridiumMine";

function IridiumMineKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = IridiumMinePrototypeId;
  return _keyTuple;
}

function IridiumMineLevelKeys(uint32 level) pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](2);

  _keyTuple[0] = IridiumMinePrototypeId;
  _keyTuple[1] = bytes32(uint256(level));
  return _keyTuple;
}
function IridiumMinePrototype(IStore store) {
  bytes32[] memory keys = IridiumMineKeys();
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_Blueprint._tableId;
  tableIds[1] = P_MaxLevel._tableId;
  tableIds[2] = P_RequiredTile._tableId;

  int32[] memory p_blueprint_value = new int32[](2);
  p_blueprint_value[0] = 0;
  p_blueprint_value[1] = 0;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_Blueprint.encode(p_blueprint_value);
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_MaxLevel.encode(5);
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredTile.encode(5);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);

  createIridiumMineLevel1(store);
  createIridiumMineLevel2(store);
  createIridiumMineLevel3(store);
  createIridiumMineLevel4(store);
  createIridiumMineLevel5(store);
}

/* ----------------------------- LEVEL 1 ----------------------------- */
function createIridiumMineLevel1(IStore store) {
  bytes32[] memory levelKeys = IridiumMineLevelKeys(1);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredResources._tableId;
  tableIds[1] = P_RequiredBaseLevel._tableId;
  tableIds[2] = P_Production._tableId;

  uint8[] memory p_requiredresources__level_resources = new uint8[](1);
  p_requiredresources__level_resources[0] = 2;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](1);
  p_requiredresources__level_amounts[0] = 4500000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredBaseLevel.encode(1);
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 5;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 17000000000000002;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 2 ----------------------------- */
function createIridiumMineLevel2(IStore store) {
  bytes32[] memory levelKeys = IridiumMineLevelKeys(2);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(3);
  uint8[] memory p_requiredresources__level_resources = new uint8[](2);
  p_requiredresources__level_resources[0] = 2;
  p_requiredresources__level_resources[1] = 9;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](2);
  p_requiredresources__level_amounts[0] = 2500000000000000000000;
  p_requiredresources__level_amounts[1] = 3000000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 5;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 33000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 3 ----------------------------- */
function createIridiumMineLevel3(IStore store) {
  bytes32[] memory levelKeys = IridiumMineLevelKeys(3);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(8);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 2;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 5000000000000000000000;
  p_requiredresources__level_amounts[1] = 1000000000000000000000;
  p_requiredresources__level_amounts[2] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 5;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 50000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 4 ----------------------------- */
function createIridiumMineLevel4(IStore store) {
  bytes32[] memory levelKeys = IridiumMineLevelKeys(4);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(13);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 2;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 10000000000000000000000;
  p_requiredresources__level_amounts[1] = 2000000000000000000000;
  p_requiredresources__level_amounts[2] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 5;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 75000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 5 ----------------------------- */
function createIridiumMineLevel5(IStore store) {
  bytes32[] memory levelKeys = IridiumMineLevelKeys(5);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(15);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 2;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 6;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 20000000000000000000000;
  p_requiredresources__level_amounts[1] = 3000000000000000000000;
  p_requiredresources__level_amounts[2] = 1000000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 5;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 100000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant PlatinumMinePrototypeId = "PlatinumMine";

function PlatinumMineKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = PlatinumMinePrototypeId;
  return _keyTuple;
}

function PlatinumMineLevelKeys(uint32 level) pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](2);

  _keyTuple[0] = PlatinumMinePrototypeId;
  _keyTuple[1] = bytes32(uint256(level));
  return _keyTuple;
}
function PlatinumMinePrototype(IStore store) {
  bytes32[] memory keys = PlatinumMineKeys();
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_Blueprint._tableId;
  tableIds[1] = P_MaxLevel._tableId;
  tableIds[2] = P_RequiredTile._tableId;

  int32[] memory p_blueprint_value = new int32[](2);
  p_blueprint_value[0] = 0;
  p_blueprint_value[1] = 0;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_Blueprint.encode(p_blueprint_value);
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_MaxLevel.encode(5);
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredTile.encode(7);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);

  createPlatinumMineLevel1(store);
  createPlatinumMineLevel2(store);
  createPlatinumMineLevel3(store);
  createPlatinumMineLevel4(store);
  createPlatinumMineLevel5(store);
}

/* ----------------------------- LEVEL 1 ----------------------------- */
function createPlatinumMineLevel1(IStore store) {
  bytes32[] memory levelKeys = PlatinumMineLevelKeys(1);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredResources._tableId;
  tableIds[1] = P_RequiredBaseLevel._tableId;
  tableIds[2] = P_Production._tableId;

  uint8[] memory p_requiredresources__level_resources = new uint8[](1);
  p_requiredresources__level_resources[0] = 3;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](1);
  p_requiredresources__level_amounts[0] = 4500000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredBaseLevel.encode(1);
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 7;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 17000000000000002;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 2 ----------------------------- */
function createPlatinumMineLevel2(IStore store) {
  bytes32[] memory levelKeys = PlatinumMineLevelKeys(2);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(3);
  uint8[] memory p_requiredresources__level_resources = new uint8[](2);
  p_requiredresources__level_resources[0] = 3;
  p_requiredresources__level_resources[1] = 10;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](2);
  p_requiredresources__level_amounts[0] = 2500000000000000000000;
  p_requiredresources__level_amounts[1] = 3000000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 7;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 33000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 3 ----------------------------- */
function createPlatinumMineLevel3(IStore store) {
  bytes32[] memory levelKeys = PlatinumMineLevelKeys(3);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(8);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 3;
  p_requiredresources__level_resources[1] = 7;
  p_requiredresources__level_resources[2] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 5000000000000000000000;
  p_requiredresources__level_amounts[1] = 1000000000000000000000;
  p_requiredresources__level_amounts[2] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 7;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 50000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 4 ----------------------------- */
function createPlatinumMineLevel4(IStore store) {
  bytes32[] memory levelKeys = PlatinumMineLevelKeys(4);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(13);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 3;
  p_requiredresources__level_resources[1] = 7;
  p_requiredresources__level_resources[2] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 10000000000000000000000;
  p_requiredresources__level_amounts[1] = 2000000000000000000000;
  p_requiredresources__level_amounts[2] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 7;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 75000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 5 ----------------------------- */
function createPlatinumMineLevel5(IStore store) {
  bytes32[] memory levelKeys = PlatinumMineLevelKeys(5);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(15);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 3;
  p_requiredresources__level_resources[1] = 7;
  p_requiredresources__level_resources[2] = 6;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 20000000000000000000000;
  p_requiredresources__level_amounts[1] = 3000000000000000000000;
  p_requiredresources__level_amounts[2] = 1000000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 7;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 100000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant TitaniumMinePrototypeId = "TitaniumMine";

function TitaniumMineKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = TitaniumMinePrototypeId;
  return _keyTuple;
}

function TitaniumMineLevelKeys(uint32 level) pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](2);

  _keyTuple[0] = TitaniumMinePrototypeId;
  _keyTuple[1] = bytes32(uint256(level));
  return _keyTuple;
}
function TitaniumMinePrototype(IStore store) {
  bytes32[] memory keys = TitaniumMineKeys();
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_Blueprint._tableId;
  tableIds[1] = P_MaxLevel._tableId;
  tableIds[2] = P_RequiredTile._tableId;

  int32[] memory p_blueprint_value = new int32[](2);
  p_blueprint_value[0] = 0;
  p_blueprint_value[1] = 0;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_Blueprint.encode(p_blueprint_value);
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_MaxLevel.encode(5);
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredTile.encode(4);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);

  createTitaniumMineLevel1(store);
  createTitaniumMineLevel2(store);
  createTitaniumMineLevel3(store);
  createTitaniumMineLevel4(store);
  createTitaniumMineLevel5(store);
}

/* ----------------------------- LEVEL 1 ----------------------------- */
function createTitaniumMineLevel1(IStore store) {
  bytes32[] memory levelKeys = TitaniumMineLevelKeys(1);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredResources._tableId;
  tableIds[1] = P_RequiredBaseLevel._tableId;
  tableIds[2] = P_Production._tableId;

  uint8[] memory p_requiredresources__level_resources = new uint8[](1);
  p_requiredresources__level_resources[0] = 1;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](1);
  p_requiredresources__level_amounts[0] = 4500000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredBaseLevel.encode(1);
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 4;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 17000000000000002;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 2 ----------------------------- */
function createTitaniumMineLevel2(IStore store) {
  bytes32[] memory levelKeys = TitaniumMineLevelKeys(2);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(3);
  uint8[] memory p_requiredresources__level_resources = new uint8[](2);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 8;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](2);
  p_requiredresources__level_amounts[0] = 2500000000000000000000;
  p_requiredresources__level_amounts[1] = 3000000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 4;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 33000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 3 ----------------------------- */
function createTitaniumMineLevel3(IStore store) {
  bytes32[] memory levelKeys = TitaniumMineLevelKeys(3);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(8);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 4;
  p_requiredresources__level_resources[2] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 5000000000000000000000;
  p_requiredresources__level_amounts[1] = 1000000000000000000000;
  p_requiredresources__level_amounts[2] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 4;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 50000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 4 ----------------------------- */
function createTitaniumMineLevel4(IStore store) {
  bytes32[] memory levelKeys = TitaniumMineLevelKeys(4);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(13);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 4;
  p_requiredresources__level_resources[2] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 10000000000000000000000;
  p_requiredresources__level_amounts[1] = 2000000000000000000000;
  p_requiredresources__level_amounts[2] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 4;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 75000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 5 ----------------------------- */
function createTitaniumMineLevel5(IStore store) {
  bytes32[] memory levelKeys = TitaniumMineLevelKeys(5);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(15);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 4;
  p_requiredresources__level_resources[2] = 6;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 20000000000000000000000;
  p_requiredresources__level_amounts[1] = 3000000000000000000000;
  p_requiredresources__level_amounts[2] = 1000000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 4;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 100000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant IronPlateFactoryPrototypeId = "IronPlateFactory";

function IronPlateFactoryKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = IronPlateFactoryPrototypeId;
  return _keyTuple;
}

function IronPlateFactoryLevelKeys(uint32 level) pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](2);

  _keyTuple[0] = IronPlateFactoryPrototypeId;
  _keyTuple[1] = bytes32(uint256(level));
  return _keyTuple;
}
function IronPlateFactoryPrototype(IStore store) {
  bytes32[] memory keys = IronPlateFactoryKeys();
  ResourceId[] memory tableIds = new ResourceId[](2);
  bytes[] memory staticData = new bytes[](2);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](2);
  bytes[] memory dynamicData = new bytes[](2);

  tableIds[0] = P_Blueprint._tableId;
  tableIds[1] = P_MaxLevel._tableId;

  int32[] memory p_blueprint_value = new int32[](8);
  p_blueprint_value[0] = 0;
  p_blueprint_value[1] = 0;
  p_blueprint_value[2] = 0;
  p_blueprint_value[3] = -1;
  p_blueprint_value[4] = -1;
  p_blueprint_value[5] = 0;
  p_blueprint_value[6] = -1;
  p_blueprint_value[7] = -1;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_Blueprint.encode(p_blueprint_value);
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_MaxLevel.encode(15);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);

  createIronPlateFactoryLevel1(store);
  createIronPlateFactoryLevel2(store);
  createIronPlateFactoryLevel3(store);
  createIronPlateFactoryLevel4(store);
  createIronPlateFactoryLevel5(store);
  createIronPlateFactoryLevel6(store);
  createIronPlateFactoryLevel7(store);
  createIronPlateFactoryLevel8(store);
  createIronPlateFactoryLevel9(store);
  createIronPlateFactoryLevel10(store);
  createIronPlateFactoryLevel11(store);
  createIronPlateFactoryLevel12(store);
  createIronPlateFactoryLevel13(store);
  createIronPlateFactoryLevel14(store);
  createIronPlateFactoryLevel15(store);
}

/* ----------------------------- LEVEL 1 ----------------------------- */
function createIronPlateFactoryLevel1(IStore store) {
  bytes32[] memory levelKeys = IronPlateFactoryLevelKeys(1);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_RequiredDependency._tableId;
  tableIds[3] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(5);
  uint8[] memory p_requiredresources__level_resources = new uint8[](2);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 3;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](2);
  p_requiredresources__level_amounts[0] = 200000000000000000000;
  p_requiredresources__level_amounts[1] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredDependency.encode(1, 60000000000000000);
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 8;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 24000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 2 ----------------------------- */
function createIronPlateFactoryLevel2(IStore store) {
  bytes32[] memory levelKeys = IronPlateFactoryLevelKeys(2);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_RequiredDependency._tableId;
  tableIds[3] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(5);
  uint8[] memory p_requiredresources__level_resources = new uint8[](2);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 3;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](2);
  p_requiredresources__level_amounts[0] = 400000000000000000000;
  p_requiredresources__level_amounts[1] = 100000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredDependency.encode(1, 90000000000000000);
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 8;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 35999999999999996;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 3 ----------------------------- */
function createIronPlateFactoryLevel3(IStore store) {
  bytes32[] memory levelKeys = IronPlateFactoryLevelKeys(3);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_RequiredDependency._tableId;
  tableIds[3] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(6);
  uint8[] memory p_requiredresources__level_resources = new uint8[](2);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 3;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](2);
  p_requiredresources__level_amounts[0] = 800000000000000000000;
  p_requiredresources__level_amounts[1] = 200000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredDependency.encode(1, 120000000000000000);
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 8;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 48000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 4 ----------------------------- */
function createIronPlateFactoryLevel4(IStore store) {
  bytes32[] memory levelKeys = IronPlateFactoryLevelKeys(4);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_RequiredDependency._tableId;
  tableIds[3] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(6);
  uint8[] memory p_requiredresources__level_resources = new uint8[](2);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 3;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](2);
  p_requiredresources__level_amounts[0] = 1200000000000000000000;
  p_requiredresources__level_amounts[1] = 400000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredDependency.encode(1, 150000000000000000);
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 8;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 60000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 5 ----------------------------- */
function createIronPlateFactoryLevel5(IStore store) {
  bytes32[] memory levelKeys = IronPlateFactoryLevelKeys(5);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_RequiredDependency._tableId;
  tableIds[3] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(7);
  uint8[] memory p_requiredresources__level_resources = new uint8[](2);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 3;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](2);
  p_requiredresources__level_amounts[0] = 2000000000000000000000;
  p_requiredresources__level_amounts[1] = 800000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredDependency.encode(1, 200000000000000000);
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 8;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 85000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 6 ----------------------------- */
function createIronPlateFactoryLevel6(IStore store) {
  bytes32[] memory levelKeys = IronPlateFactoryLevelKeys(6);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_RequiredDependency._tableId;
  tableIds[3] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(7);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 3;
  p_requiredresources__level_resources[1] = 8;
  p_requiredresources__level_resources[2] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 5000000000000000000000;
  p_requiredresources__level_amounts[1] = 1000000000000000000000;
  p_requiredresources__level_amounts[2] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredDependency.encode(1, 250000000000000000);
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 8;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 110000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 7 ----------------------------- */
function createIronPlateFactoryLevel7(IStore store) {
  bytes32[] memory levelKeys = IronPlateFactoryLevelKeys(7);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_RequiredDependency._tableId;
  tableIds[3] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(8);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 3;
  p_requiredresources__level_resources[1] = 8;
  p_requiredresources__level_resources[2] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 10000000000000000000000;
  p_requiredresources__level_amounts[1] = 2000000000000000000000;
  p_requiredresources__level_amounts[2] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredDependency.encode(1, 300000000000000000);
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 8;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 135000000000000016;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 8 ----------------------------- */
function createIronPlateFactoryLevel8(IStore store) {
  bytes32[] memory levelKeys = IronPlateFactoryLevelKeys(8);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_RequiredDependency._tableId;
  tableIds[3] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(8);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 3;
  p_requiredresources__level_resources[1] = 8;
  p_requiredresources__level_resources[2] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 20000000000000000000000;
  p_requiredresources__level_amounts[1] = 3000000000000000000000;
  p_requiredresources__level_amounts[2] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredDependency.encode(1, 350000000000000000);
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 8;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 165000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 9 ----------------------------- */
function createIronPlateFactoryLevel9(IStore store) {
  bytes32[] memory levelKeys = IronPlateFactoryLevelKeys(9);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_RequiredDependency._tableId;
  tableIds[3] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(9);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 3;
  p_requiredresources__level_resources[1] = 8;
  p_requiredresources__level_resources[2] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 35000000000000002097152;
  p_requiredresources__level_amounts[1] = 4000000000000000000000;
  p_requiredresources__level_amounts[2] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredDependency.encode(1, 400000000000000000);
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 8;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 200000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 10 ----------------------------- */
function createIronPlateFactoryLevel10(IStore store) {
  bytes32[] memory levelKeys = IronPlateFactoryLevelKeys(10);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_RequiredDependency._tableId;
  tableIds[3] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(10);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 3;
  p_requiredresources__level_resources[1] = 4;
  p_requiredresources__level_resources[2] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 49999999999999995805696;
  p_requiredresources__level_amounts[1] = 800000000000000000000;
  p_requiredresources__level_amounts[2] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredDependency.encode(1, 470000000000000000);
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 8;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 240000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 11 ----------------------------- */
function createIronPlateFactoryLevel11(IStore store) {
  bytes32[] memory levelKeys = IronPlateFactoryLevelKeys(11);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_RequiredDependency._tableId;
  tableIds[3] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(11);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 3;
  p_requiredresources__level_resources[1] = 4;
  p_requiredresources__level_resources[2] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 70000000000000004194304;
  p_requiredresources__level_amounts[1] = 1500000000000000000000;
  p_requiredresources__level_amounts[2] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredDependency.encode(1, 540000000000000064);
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 8;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 300000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 12 ----------------------------- */
function createIronPlateFactoryLevel12(IStore store) {
  bytes32[] memory levelKeys = IronPlateFactoryLevelKeys(12);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_RequiredDependency._tableId;
  tableIds[3] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(12);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 3;
  p_requiredresources__level_resources[1] = 4;
  p_requiredresources__level_resources[2] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 99999999999999991611392;
  p_requiredresources__level_amounts[1] = 3000000000000000000000;
  p_requiredresources__level_amounts[2] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredDependency.encode(1, 620000000000000000);
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 8;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 380000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 13 ----------------------------- */
function createIronPlateFactoryLevel13(IStore store) {
  bytes32[] memory levelKeys = IronPlateFactoryLevelKeys(13);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_RequiredDependency._tableId;
  tableIds[3] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(13);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 3;
  p_requiredresources__level_resources[1] = 4;
  p_requiredresources__level_resources[2] = 6;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 99999999999999991611392;
  p_requiredresources__level_amounts[1] = 5000000000000000000000;
  p_requiredresources__level_amounts[2] = 1000000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredDependency.encode(1, 720000000000000000);
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 8;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 480000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 14 ----------------------------- */
function createIronPlateFactoryLevel14(IStore store) {
  bytes32[] memory levelKeys = IronPlateFactoryLevelKeys(14);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_RequiredDependency._tableId;
  tableIds[3] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(14);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 3;
  p_requiredresources__level_resources[1] = 4;
  p_requiredresources__level_resources[2] = 6;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 99999999999999991611392;
  p_requiredresources__level_amounts[1] = 8000000000000000000000;
  p_requiredresources__level_amounts[2] = 1500000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredDependency.encode(1, 840000000000000000);
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 8;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 580000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 15 ----------------------------- */
function createIronPlateFactoryLevel15(IStore store) {
  bytes32[] memory levelKeys = IronPlateFactoryLevelKeys(15);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_RequiredDependency._tableId;
  tableIds[3] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(15);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 3;
  p_requiredresources__level_resources[1] = 4;
  p_requiredresources__level_resources[2] = 6;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 99999999999999991611392;
  p_requiredresources__level_amounts[1] = 10000000000000000000000;
  p_requiredresources__level_amounts[2] = 2000000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredDependency.encode(1, 970000000000000000);
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 8;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 700000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant AlloyFactoryPrototypeId = "AlloyFactory";

function AlloyFactoryKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = AlloyFactoryPrototypeId;
  return _keyTuple;
}

function AlloyFactoryLevelKeys(uint32 level) pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](2);

  _keyTuple[0] = AlloyFactoryPrototypeId;
  _keyTuple[1] = bytes32(uint256(level));
  return _keyTuple;
}
function AlloyFactoryPrototype(IStore store) {
  bytes32[] memory keys = AlloyFactoryKeys();
  ResourceId[] memory tableIds = new ResourceId[](2);
  bytes[] memory staticData = new bytes[](2);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](2);
  bytes[] memory dynamicData = new bytes[](2);

  tableIds[0] = P_Blueprint._tableId;
  tableIds[1] = P_MaxLevel._tableId;

  int32[] memory p_blueprint_value = new int32[](8);
  p_blueprint_value[0] = 0;
  p_blueprint_value[1] = 0;
  p_blueprint_value[2] = 0;
  p_blueprint_value[3] = -1;
  p_blueprint_value[4] = -1;
  p_blueprint_value[5] = 0;
  p_blueprint_value[6] = -1;
  p_blueprint_value[7] = -1;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_Blueprint.encode(p_blueprint_value);
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_MaxLevel.encode(15);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);

  createAlloyFactoryLevel1(store);
  createAlloyFactoryLevel2(store);
  createAlloyFactoryLevel3(store);
  createAlloyFactoryLevel4(store);
  createAlloyFactoryLevel5(store);
  createAlloyFactoryLevel6(store);
  createAlloyFactoryLevel7(store);
  createAlloyFactoryLevel8(store);
  createAlloyFactoryLevel9(store);
  createAlloyFactoryLevel10(store);
  createAlloyFactoryLevel11(store);
  createAlloyFactoryLevel12(store);
  createAlloyFactoryLevel13(store);
  createAlloyFactoryLevel14(store);
  createAlloyFactoryLevel15(store);
}

/* ----------------------------- LEVEL 1 ----------------------------- */
function createAlloyFactoryLevel1(IStore store) {
  bytes32[] memory levelKeys = AlloyFactoryLevelKeys(1);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_RequiredDependency._tableId;
  tableIds[3] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(5);
  uint8[] memory p_requiredresources__level_resources = new uint8[](2);
  p_requiredresources__level_resources[0] = 2;
  p_requiredresources__level_resources[1] = 3;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](2);
  p_requiredresources__level_amounts[0] = 200000000000000000000;
  p_requiredresources__level_amounts[1] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredDependency.encode(2, 60000000000000000);
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 9;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 24000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 2 ----------------------------- */
function createAlloyFactoryLevel2(IStore store) {
  bytes32[] memory levelKeys = AlloyFactoryLevelKeys(2);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_RequiredDependency._tableId;
  tableIds[3] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(5);
  uint8[] memory p_requiredresources__level_resources = new uint8[](2);
  p_requiredresources__level_resources[0] = 2;
  p_requiredresources__level_resources[1] = 3;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](2);
  p_requiredresources__level_amounts[0] = 400000000000000000000;
  p_requiredresources__level_amounts[1] = 100000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredDependency.encode(2, 90000000000000000);
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 9;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 35999999999999996;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 3 ----------------------------- */
function createAlloyFactoryLevel3(IStore store) {
  bytes32[] memory levelKeys = AlloyFactoryLevelKeys(3);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_RequiredDependency._tableId;
  tableIds[3] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(6);
  uint8[] memory p_requiredresources__level_resources = new uint8[](2);
  p_requiredresources__level_resources[0] = 2;
  p_requiredresources__level_resources[1] = 3;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](2);
  p_requiredresources__level_amounts[0] = 800000000000000000000;
  p_requiredresources__level_amounts[1] = 200000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredDependency.encode(2, 120000000000000000);
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 9;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 48000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 4 ----------------------------- */
function createAlloyFactoryLevel4(IStore store) {
  bytes32[] memory levelKeys = AlloyFactoryLevelKeys(4);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_RequiredDependency._tableId;
  tableIds[3] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(6);
  uint8[] memory p_requiredresources__level_resources = new uint8[](2);
  p_requiredresources__level_resources[0] = 2;
  p_requiredresources__level_resources[1] = 3;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](2);
  p_requiredresources__level_amounts[0] = 1200000000000000000000;
  p_requiredresources__level_amounts[1] = 400000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredDependency.encode(2, 150000000000000000);
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 9;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 60000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 5 ----------------------------- */
function createAlloyFactoryLevel5(IStore store) {
  bytes32[] memory levelKeys = AlloyFactoryLevelKeys(5);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_RequiredDependency._tableId;
  tableIds[3] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(7);
  uint8[] memory p_requiredresources__level_resources = new uint8[](2);
  p_requiredresources__level_resources[0] = 2;
  p_requiredresources__level_resources[1] = 3;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](2);
  p_requiredresources__level_amounts[0] = 2000000000000000000000;
  p_requiredresources__level_amounts[1] = 800000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredDependency.encode(2, 200000000000000000);
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 9;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 85000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 6 ----------------------------- */
function createAlloyFactoryLevel6(IStore store) {
  bytes32[] memory levelKeys = AlloyFactoryLevelKeys(6);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_RequiredDependency._tableId;
  tableIds[3] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(7);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 3;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 5000000000000000000000;
  p_requiredresources__level_amounts[1] = 1000000000000000000000;
  p_requiredresources__level_amounts[2] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredDependency.encode(2, 250000000000000000);
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 9;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 110000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 7 ----------------------------- */
function createAlloyFactoryLevel7(IStore store) {
  bytes32[] memory levelKeys = AlloyFactoryLevelKeys(7);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_RequiredDependency._tableId;
  tableIds[3] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(8);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 3;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 10000000000000000000000;
  p_requiredresources__level_amounts[1] = 2000000000000000000000;
  p_requiredresources__level_amounts[2] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredDependency.encode(2, 300000000000000000);
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 9;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 135000000000000016;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 8 ----------------------------- */
function createAlloyFactoryLevel8(IStore store) {
  bytes32[] memory levelKeys = AlloyFactoryLevelKeys(8);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_RequiredDependency._tableId;
  tableIds[3] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(8);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 3;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 20000000000000000000000;
  p_requiredresources__level_amounts[1] = 3000000000000000000000;
  p_requiredresources__level_amounts[2] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredDependency.encode(2, 350000000000000000);
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 9;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 165000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 9 ----------------------------- */
function createAlloyFactoryLevel9(IStore store) {
  bytes32[] memory levelKeys = AlloyFactoryLevelKeys(9);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_RequiredDependency._tableId;
  tableIds[3] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(9);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 3;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 35000000000000002097152;
  p_requiredresources__level_amounts[1] = 4000000000000000000000;
  p_requiredresources__level_amounts[2] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredDependency.encode(2, 400000000000000000);
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 9;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 200000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 10 ----------------------------- */
function createAlloyFactoryLevel10(IStore store) {
  bytes32[] memory levelKeys = AlloyFactoryLevelKeys(10);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_RequiredDependency._tableId;
  tableIds[3] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(10);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 3;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 49999999999999995805696;
  p_requiredresources__level_amounts[1] = 800000000000000000000;
  p_requiredresources__level_amounts[2] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredDependency.encode(2, 470000000000000000);
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 9;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 240000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 11 ----------------------------- */
function createAlloyFactoryLevel11(IStore store) {
  bytes32[] memory levelKeys = AlloyFactoryLevelKeys(11);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_RequiredDependency._tableId;
  tableIds[3] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(11);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 3;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 70000000000000004194304;
  p_requiredresources__level_amounts[1] = 1500000000000000000000;
  p_requiredresources__level_amounts[2] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredDependency.encode(2, 540000000000000064);
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 9;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 300000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 12 ----------------------------- */
function createAlloyFactoryLevel12(IStore store) {
  bytes32[] memory levelKeys = AlloyFactoryLevelKeys(12);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_RequiredDependency._tableId;
  tableIds[3] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(12);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 3;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 99999999999999991611392;
  p_requiredresources__level_amounts[1] = 3000000000000000000000;
  p_requiredresources__level_amounts[2] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredDependency.encode(2, 620000000000000000);
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 9;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 380000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 13 ----------------------------- */
function createAlloyFactoryLevel13(IStore store) {
  bytes32[] memory levelKeys = AlloyFactoryLevelKeys(13);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_RequiredDependency._tableId;
  tableIds[3] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(13);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 3;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 6;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 99999999999999991611392;
  p_requiredresources__level_amounts[1] = 5000000000000000000000;
  p_requiredresources__level_amounts[2] = 1000000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredDependency.encode(2, 720000000000000000);
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 9;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 480000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 14 ----------------------------- */
function createAlloyFactoryLevel14(IStore store) {
  bytes32[] memory levelKeys = AlloyFactoryLevelKeys(14);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_RequiredDependency._tableId;
  tableIds[3] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(14);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 3;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 6;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 99999999999999991611392;
  p_requiredresources__level_amounts[1] = 8000000000000000000000;
  p_requiredresources__level_amounts[2] = 1500000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredDependency.encode(2, 840000000000000000);
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 9;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 580000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 15 ----------------------------- */
function createAlloyFactoryLevel15(IStore store) {
  bytes32[] memory levelKeys = AlloyFactoryLevelKeys(15);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_RequiredDependency._tableId;
  tableIds[3] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(15);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 3;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 6;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 99999999999999991611392;
  p_requiredresources__level_amounts[1] = 10000000000000000000000;
  p_requiredresources__level_amounts[2] = 2000000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredDependency.encode(2, 970000000000000000);
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 9;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 700000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant PVCellFactoryPrototypeId = "PVCellFactory";

function PVCellFactoryKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = PVCellFactoryPrototypeId;
  return _keyTuple;
}

function PVCellFactoryLevelKeys(uint32 level) pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](2);

  _keyTuple[0] = PVCellFactoryPrototypeId;
  _keyTuple[1] = bytes32(uint256(level));
  return _keyTuple;
}
function PVCellFactoryPrototype(IStore store) {
  bytes32[] memory keys = PVCellFactoryKeys();
  ResourceId[] memory tableIds = new ResourceId[](2);
  bytes[] memory staticData = new bytes[](2);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](2);
  bytes[] memory dynamicData = new bytes[](2);

  tableIds[0] = P_Blueprint._tableId;
  tableIds[1] = P_MaxLevel._tableId;

  int32[] memory p_blueprint_value = new int32[](8);
  p_blueprint_value[0] = 0;
  p_blueprint_value[1] = 0;
  p_blueprint_value[2] = 0;
  p_blueprint_value[3] = -1;
  p_blueprint_value[4] = -1;
  p_blueprint_value[5] = 0;
  p_blueprint_value[6] = -1;
  p_blueprint_value[7] = -1;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_Blueprint.encode(p_blueprint_value);
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_MaxLevel.encode(15);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);

  createPVCellFactoryLevel1(store);
  createPVCellFactoryLevel2(store);
  createPVCellFactoryLevel3(store);
  createPVCellFactoryLevel4(store);
  createPVCellFactoryLevel5(store);
  createPVCellFactoryLevel6(store);
  createPVCellFactoryLevel7(store);
  createPVCellFactoryLevel8(store);
  createPVCellFactoryLevel9(store);
  createPVCellFactoryLevel10(store);
  createPVCellFactoryLevel11(store);
  createPVCellFactoryLevel12(store);
  createPVCellFactoryLevel13(store);
  createPVCellFactoryLevel14(store);
  createPVCellFactoryLevel15(store);
}

/* ----------------------------- LEVEL 1 ----------------------------- */
function createPVCellFactoryLevel1(IStore store) {
  bytes32[] memory levelKeys = PVCellFactoryLevelKeys(1);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_RequiredDependency._tableId;
  tableIds[3] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(5);
  uint8[] memory p_requiredresources__level_resources = new uint8[](1);
  p_requiredresources__level_resources[0] = 3;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](1);
  p_requiredresources__level_amounts[0] = 250000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredDependency.encode(3, 60000000000000000);
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 10;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 24000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 2 ----------------------------- */
function createPVCellFactoryLevel2(IStore store) {
  bytes32[] memory levelKeys = PVCellFactoryLevelKeys(2);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_RequiredDependency._tableId;
  tableIds[3] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(5);
  uint8[] memory p_requiredresources__level_resources = new uint8[](1);
  p_requiredresources__level_resources[0] = 3;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](1);
  p_requiredresources__level_amounts[0] = 500000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredDependency.encode(3, 90000000000000000);
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 10;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 35999999999999996;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 3 ----------------------------- */
function createPVCellFactoryLevel3(IStore store) {
  bytes32[] memory levelKeys = PVCellFactoryLevelKeys(3);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_RequiredDependency._tableId;
  tableIds[3] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(6);
  uint8[] memory p_requiredresources__level_resources = new uint8[](1);
  p_requiredresources__level_resources[0] = 3;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](1);
  p_requiredresources__level_amounts[0] = 1000000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredDependency.encode(3, 120000000000000000);
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 10;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 48000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 4 ----------------------------- */
function createPVCellFactoryLevel4(IStore store) {
  bytes32[] memory levelKeys = PVCellFactoryLevelKeys(4);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_RequiredDependency._tableId;
  tableIds[3] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(6);
  uint8[] memory p_requiredresources__level_resources = new uint8[](1);
  p_requiredresources__level_resources[0] = 3;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](1);
  p_requiredresources__level_amounts[0] = 1600000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredDependency.encode(3, 150000000000000000);
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 10;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 60000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 5 ----------------------------- */
function createPVCellFactoryLevel5(IStore store) {
  bytes32[] memory levelKeys = PVCellFactoryLevelKeys(5);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_RequiredDependency._tableId;
  tableIds[3] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(7);
  uint8[] memory p_requiredresources__level_resources = new uint8[](1);
  p_requiredresources__level_resources[0] = 3;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](1);
  p_requiredresources__level_amounts[0] = 2800000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredDependency.encode(3, 200000000000000000);
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 10;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 85000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 6 ----------------------------- */
function createPVCellFactoryLevel6(IStore store) {
  bytes32[] memory levelKeys = PVCellFactoryLevelKeys(6);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_RequiredDependency._tableId;
  tableIds[3] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(7);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 3;
  p_requiredresources__level_resources[1] = 10;
  p_requiredresources__level_resources[2] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 5000000000000000000000;
  p_requiredresources__level_amounts[1] = 1000000000000000000000;
  p_requiredresources__level_amounts[2] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredDependency.encode(3, 250000000000000000);
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 10;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 110000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 7 ----------------------------- */
function createPVCellFactoryLevel7(IStore store) {
  bytes32[] memory levelKeys = PVCellFactoryLevelKeys(7);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_RequiredDependency._tableId;
  tableIds[3] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(8);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 3;
  p_requiredresources__level_resources[1] = 10;
  p_requiredresources__level_resources[2] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 10000000000000000000000;
  p_requiredresources__level_amounts[1] = 2000000000000000000000;
  p_requiredresources__level_amounts[2] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredDependency.encode(3, 300000000000000000);
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 10;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 135000000000000016;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 8 ----------------------------- */
function createPVCellFactoryLevel8(IStore store) {
  bytes32[] memory levelKeys = PVCellFactoryLevelKeys(8);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_RequiredDependency._tableId;
  tableIds[3] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(8);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 3;
  p_requiredresources__level_resources[1] = 10;
  p_requiredresources__level_resources[2] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 20000000000000000000000;
  p_requiredresources__level_amounts[1] = 3000000000000000000000;
  p_requiredresources__level_amounts[2] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredDependency.encode(3, 350000000000000000);
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 10;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 165000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 9 ----------------------------- */
function createPVCellFactoryLevel9(IStore store) {
  bytes32[] memory levelKeys = PVCellFactoryLevelKeys(9);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_RequiredDependency._tableId;
  tableIds[3] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(9);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 3;
  p_requiredresources__level_resources[1] = 10;
  p_requiredresources__level_resources[2] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 35000000000000002097152;
  p_requiredresources__level_amounts[1] = 4000000000000000000000;
  p_requiredresources__level_amounts[2] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredDependency.encode(3, 400000000000000000);
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 10;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 200000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 10 ----------------------------- */
function createPVCellFactoryLevel10(IStore store) {
  bytes32[] memory levelKeys = PVCellFactoryLevelKeys(10);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_RequiredDependency._tableId;
  tableIds[3] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(10);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 3;
  p_requiredresources__level_resources[1] = 7;
  p_requiredresources__level_resources[2] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 49999999999999995805696;
  p_requiredresources__level_amounts[1] = 800000000000000000000;
  p_requiredresources__level_amounts[2] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredDependency.encode(3, 470000000000000000);
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 10;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 240000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 11 ----------------------------- */
function createPVCellFactoryLevel11(IStore store) {
  bytes32[] memory levelKeys = PVCellFactoryLevelKeys(11);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_RequiredDependency._tableId;
  tableIds[3] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(11);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 3;
  p_requiredresources__level_resources[1] = 7;
  p_requiredresources__level_resources[2] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 70000000000000004194304;
  p_requiredresources__level_amounts[1] = 1500000000000000000000;
  p_requiredresources__level_amounts[2] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredDependency.encode(3, 540000000000000064);
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 10;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 300000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 12 ----------------------------- */
function createPVCellFactoryLevel12(IStore store) {
  bytes32[] memory levelKeys = PVCellFactoryLevelKeys(12);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_RequiredDependency._tableId;
  tableIds[3] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(12);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 3;
  p_requiredresources__level_resources[1] = 7;
  p_requiredresources__level_resources[2] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 99999999999999991611392;
  p_requiredresources__level_amounts[1] = 3000000000000000000000;
  p_requiredresources__level_amounts[2] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredDependency.encode(3, 620000000000000000);
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 10;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 380000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 13 ----------------------------- */
function createPVCellFactoryLevel13(IStore store) {
  bytes32[] memory levelKeys = PVCellFactoryLevelKeys(13);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_RequiredDependency._tableId;
  tableIds[3] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(13);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 3;
  p_requiredresources__level_resources[1] = 7;
  p_requiredresources__level_resources[2] = 6;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 99999999999999991611392;
  p_requiredresources__level_amounts[1] = 5000000000000000000000;
  p_requiredresources__level_amounts[2] = 1000000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredDependency.encode(3, 720000000000000000);
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 10;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 480000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 14 ----------------------------- */
function createPVCellFactoryLevel14(IStore store) {
  bytes32[] memory levelKeys = PVCellFactoryLevelKeys(14);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_RequiredDependency._tableId;
  tableIds[3] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(14);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 3;
  p_requiredresources__level_resources[1] = 7;
  p_requiredresources__level_resources[2] = 6;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 99999999999999991611392;
  p_requiredresources__level_amounts[1] = 8000000000000000000000;
  p_requiredresources__level_amounts[2] = 1500000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredDependency.encode(3, 840000000000000000);
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 10;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 580000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 15 ----------------------------- */
function createPVCellFactoryLevel15(IStore store) {
  bytes32[] memory levelKeys = PVCellFactoryLevelKeys(15);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_RequiredDependency._tableId;
  tableIds[3] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(15);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 3;
  p_requiredresources__level_resources[1] = 7;
  p_requiredresources__level_resources[2] = 6;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 99999999999999991611392;
  p_requiredresources__level_amounts[1] = 10000000000000000000000;
  p_requiredresources__level_amounts[2] = 2000000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredDependency.encode(3, 970000000000000000);
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 10;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 700000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitPrototypeId = "StorageUnit";

function StorageUnitKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = StorageUnitPrototypeId;
  return _keyTuple;
}

function StorageUnitLevelKeys(uint32 level) pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](2);

  _keyTuple[0] = StorageUnitPrototypeId;
  _keyTuple[1] = bytes32(uint256(level));
  return _keyTuple;
}
function StorageUnitPrototype(IStore store) {
  bytes32[] memory keys = StorageUnitKeys();
  ResourceId[] memory tableIds = new ResourceId[](2);
  bytes[] memory staticData = new bytes[](2);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](2);
  bytes[] memory dynamicData = new bytes[](2);

  tableIds[0] = P_Blueprint._tableId;
  tableIds[1] = P_MaxLevel._tableId;

  int32[] memory p_blueprint_value = new int32[](8);
  p_blueprint_value[0] = 0;
  p_blueprint_value[1] = 0;
  p_blueprint_value[2] = 0;
  p_blueprint_value[3] = -1;
  p_blueprint_value[4] = -1;
  p_blueprint_value[5] = 0;
  p_blueprint_value[6] = -1;
  p_blueprint_value[7] = -1;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_Blueprint.encode(p_blueprint_value);
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_MaxLevel.encode(10);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);

  createStorageUnitLevel1(store);
  createStorageUnitLevel2(store);
  createStorageUnitLevel3(store);
  createStorageUnitLevel4(store);
  createStorageUnitLevel5(store);
  createStorageUnitLevel6(store);
  createStorageUnitLevel7(store);
  createStorageUnitLevel8(store);
  createStorageUnitLevel9(store);
  createStorageUnitLevel10(store);
}

/* ----------------------------- LEVEL 1 ----------------------------- */
function createStorageUnitLevel1(IStore store) {
  bytes32[] memory levelKeys = StorageUnitLevelKeys(1);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_ListMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(3);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 2;
  p_requiredresources__level_resources[2] = 3;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 50000000000000000000;
  p_requiredresources__level_amounts[1] = 50000000000000000000;
  p_requiredresources__level_amounts[2] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_listmaxresourceupgrades__level_value = new uint8[](3);
  p_listmaxresourceupgrades__level_value[0] = 1;
  p_listmaxresourceupgrades__level_value[1] = 2;
  p_listmaxresourceupgrades__level_value[2] = 3;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_ListMaxResourceUpgrades.encode(
    p_listmaxresourceupgrades__level_value
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 2 ----------------------------- */
function createStorageUnitLevel2(IStore store) {
  bytes32[] memory levelKeys = StorageUnitLevelKeys(2);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_ListMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(3);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 2;
  p_requiredresources__level_resources[2] = 3;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 100000000000000000000;
  p_requiredresources__level_amounts[1] = 100000000000000000000;
  p_requiredresources__level_amounts[2] = 100000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_listmaxresourceupgrades__level_value = new uint8[](6);
  p_listmaxresourceupgrades__level_value[0] = 1;
  p_listmaxresourceupgrades__level_value[1] = 2;
  p_listmaxresourceupgrades__level_value[2] = 3;
  p_listmaxresourceupgrades__level_value[3] = 8;
  p_listmaxresourceupgrades__level_value[4] = 10;
  p_listmaxresourceupgrades__level_value[5] = 9;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_ListMaxResourceUpgrades.encode(
    p_listmaxresourceupgrades__level_value
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 3 ----------------------------- */
function createStorageUnitLevel3(IStore store) {
  bytes32[] memory levelKeys = StorageUnitLevelKeys(3);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_ListMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(4);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 2;
  p_requiredresources__level_resources[2] = 3;
  p_requiredresources__level_resources[3] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 250000000000000000000;
  p_requiredresources__level_amounts[1] = 250000000000000000000;
  p_requiredresources__level_amounts[2] = 250000000000000000000;
  p_requiredresources__level_amounts[3] = 25000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_listmaxresourceupgrades__level_value = new uint8[](6);
  p_listmaxresourceupgrades__level_value[0] = 1;
  p_listmaxresourceupgrades__level_value[1] = 2;
  p_listmaxresourceupgrades__level_value[2] = 3;
  p_listmaxresourceupgrades__level_value[3] = 8;
  p_listmaxresourceupgrades__level_value[4] = 10;
  p_listmaxresourceupgrades__level_value[5] = 9;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_ListMaxResourceUpgrades.encode(
    p_listmaxresourceupgrades__level_value
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 4 ----------------------------- */
function createStorageUnitLevel4(IStore store) {
  bytes32[] memory levelKeys = StorageUnitLevelKeys(4);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_ListMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(4);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 8;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 10;
  p_requiredresources__level_resources[3] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 200000000000000000000;
  p_requiredresources__level_amounts[1] = 200000000000000000000;
  p_requiredresources__level_amounts[2] = 200000000000000000000;
  p_requiredresources__level_amounts[3] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_listmaxresourceupgrades__level_value = new uint8[](6);
  p_listmaxresourceupgrades__level_value[0] = 1;
  p_listmaxresourceupgrades__level_value[1] = 2;
  p_listmaxresourceupgrades__level_value[2] = 3;
  p_listmaxresourceupgrades__level_value[3] = 8;
  p_listmaxresourceupgrades__level_value[4] = 10;
  p_listmaxresourceupgrades__level_value[5] = 9;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_ListMaxResourceUpgrades.encode(
    p_listmaxresourceupgrades__level_value
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 5 ----------------------------- */
function createStorageUnitLevel5(IStore store) {
  bytes32[] memory levelKeys = StorageUnitLevelKeys(5);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_ListMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(5);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 8;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 10;
  p_requiredresources__level_resources[3] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 500000000000000000000;
  p_requiredresources__level_amounts[1] = 500000000000000000000;
  p_requiredresources__level_amounts[2] = 500000000000000000000;
  p_requiredresources__level_amounts[3] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_listmaxresourceupgrades__level_value = new uint8[](10);
  p_listmaxresourceupgrades__level_value[0] = 1;
  p_listmaxresourceupgrades__level_value[1] = 2;
  p_listmaxresourceupgrades__level_value[2] = 3;
  p_listmaxresourceupgrades__level_value[3] = 8;
  p_listmaxresourceupgrades__level_value[4] = 10;
  p_listmaxresourceupgrades__level_value[5] = 9;
  p_listmaxresourceupgrades__level_value[6] = 4;
  p_listmaxresourceupgrades__level_value[7] = 7;
  p_listmaxresourceupgrades__level_value[8] = 5;
  p_listmaxresourceupgrades__level_value[9] = 6;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_ListMaxResourceUpgrades.encode(
    p_listmaxresourceupgrades__level_value
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 6 ----------------------------- */
function createStorageUnitLevel6(IStore store) {
  bytes32[] memory levelKeys = StorageUnitLevelKeys(6);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_ListMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(6);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 8;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 10;
  p_requiredresources__level_resources[3] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 1000000000000000000000;
  p_requiredresources__level_amounts[1] = 1000000000000000000000;
  p_requiredresources__level_amounts[2] = 1000000000000000000000;
  p_requiredresources__level_amounts[3] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_listmaxresourceupgrades__level_value = new uint8[](10);
  p_listmaxresourceupgrades__level_value[0] = 1;
  p_listmaxresourceupgrades__level_value[1] = 2;
  p_listmaxresourceupgrades__level_value[2] = 3;
  p_listmaxresourceupgrades__level_value[3] = 8;
  p_listmaxresourceupgrades__level_value[4] = 10;
  p_listmaxresourceupgrades__level_value[5] = 9;
  p_listmaxresourceupgrades__level_value[6] = 4;
  p_listmaxresourceupgrades__level_value[7] = 7;
  p_listmaxresourceupgrades__level_value[8] = 5;
  p_listmaxresourceupgrades__level_value[9] = 6;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_ListMaxResourceUpgrades.encode(
    p_listmaxresourceupgrades__level_value
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 7 ----------------------------- */
function createStorageUnitLevel7(IStore store) {
  bytes32[] memory levelKeys = StorageUnitLevelKeys(7);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_ListMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(7);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 8;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 10;
  p_requiredresources__level_resources[3] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 2000000000000000000000;
  p_requiredresources__level_amounts[1] = 2000000000000000000000;
  p_requiredresources__level_amounts[2] = 2000000000000000000000;
  p_requiredresources__level_amounts[3] = 100000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_listmaxresourceupgrades__level_value = new uint8[](10);
  p_listmaxresourceupgrades__level_value[0] = 1;
  p_listmaxresourceupgrades__level_value[1] = 2;
  p_listmaxresourceupgrades__level_value[2] = 3;
  p_listmaxresourceupgrades__level_value[3] = 8;
  p_listmaxresourceupgrades__level_value[4] = 10;
  p_listmaxresourceupgrades__level_value[5] = 9;
  p_listmaxresourceupgrades__level_value[6] = 4;
  p_listmaxresourceupgrades__level_value[7] = 7;
  p_listmaxresourceupgrades__level_value[8] = 5;
  p_listmaxresourceupgrades__level_value[9] = 6;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_ListMaxResourceUpgrades.encode(
    p_listmaxresourceupgrades__level_value
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 8 ----------------------------- */
function createStorageUnitLevel8(IStore store) {
  bytes32[] memory levelKeys = StorageUnitLevelKeys(8);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_ListMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(8);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 8;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 10;
  p_requiredresources__level_resources[3] = 6;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 4000000000000000000000;
  p_requiredresources__level_amounts[1] = 4000000000000000000000;
  p_requiredresources__level_amounts[2] = 4000000000000000000000;
  p_requiredresources__level_amounts[3] = 100000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_listmaxresourceupgrades__level_value = new uint8[](10);
  p_listmaxresourceupgrades__level_value[0] = 1;
  p_listmaxresourceupgrades__level_value[1] = 2;
  p_listmaxresourceupgrades__level_value[2] = 3;
  p_listmaxresourceupgrades__level_value[3] = 8;
  p_listmaxresourceupgrades__level_value[4] = 10;
  p_listmaxresourceupgrades__level_value[5] = 9;
  p_listmaxresourceupgrades__level_value[6] = 4;
  p_listmaxresourceupgrades__level_value[7] = 7;
  p_listmaxresourceupgrades__level_value[8] = 5;
  p_listmaxresourceupgrades__level_value[9] = 6;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_ListMaxResourceUpgrades.encode(
    p_listmaxresourceupgrades__level_value
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 9 ----------------------------- */
function createStorageUnitLevel9(IStore store) {
  bytes32[] memory levelKeys = StorageUnitLevelKeys(9);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_ListMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(10);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 8;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 10;
  p_requiredresources__level_resources[3] = 6;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 8000000000000000000000;
  p_requiredresources__level_amounts[1] = 8000000000000000000000;
  p_requiredresources__level_amounts[2] = 8000000000000000000000;
  p_requiredresources__level_amounts[3] = 500000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_listmaxresourceupgrades__level_value = new uint8[](10);
  p_listmaxresourceupgrades__level_value[0] = 1;
  p_listmaxresourceupgrades__level_value[1] = 2;
  p_listmaxresourceupgrades__level_value[2] = 3;
  p_listmaxresourceupgrades__level_value[3] = 8;
  p_listmaxresourceupgrades__level_value[4] = 10;
  p_listmaxresourceupgrades__level_value[5] = 9;
  p_listmaxresourceupgrades__level_value[6] = 4;
  p_listmaxresourceupgrades__level_value[7] = 7;
  p_listmaxresourceupgrades__level_value[8] = 5;
  p_listmaxresourceupgrades__level_value[9] = 6;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_ListMaxResourceUpgrades.encode(
    p_listmaxresourceupgrades__level_value
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 10 ----------------------------- */
function createStorageUnitLevel10(IStore store) {
  bytes32[] memory levelKeys = StorageUnitLevelKeys(10);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_ListMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(12);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 8;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 10;
  p_requiredresources__level_resources[3] = 6;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 15000000000000000000000;
  p_requiredresources__level_amounts[1] = 15000000000000000000000;
  p_requiredresources__level_amounts[2] = 15000000000000000000000;
  p_requiredresources__level_amounts[3] = 1000000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_listmaxresourceupgrades__level_value = new uint8[](10);
  p_listmaxresourceupgrades__level_value[0] = 1;
  p_listmaxresourceupgrades__level_value[1] = 2;
  p_listmaxresourceupgrades__level_value[2] = 3;
  p_listmaxresourceupgrades__level_value[3] = 8;
  p_listmaxresourceupgrades__level_value[4] = 10;
  p_listmaxresourceupgrades__level_value[5] = 9;
  p_listmaxresourceupgrades__level_value[6] = 4;
  p_listmaxresourceupgrades__level_value[7] = 7;
  p_listmaxresourceupgrades__level_value[8] = 5;
  p_listmaxresourceupgrades__level_value[9] = 6;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_ListMaxResourceUpgrades.encode(
    p_listmaxresourceupgrades__level_value
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitIronL1PrototypeId = "StorageUnitIronL1";

function StorageUnitIronL1Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(1));
  _keyTuple[2] = bytes32(uint256(1));
  return _keyTuple;
}

function StorageUnitIronL1Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitIronL1Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(150000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitCopperL1PrototypeId = "StorageUnitCopperL1";

function StorageUnitCopperL1Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(2));
  _keyTuple[2] = bytes32(uint256(1));
  return _keyTuple;
}

function StorageUnitCopperL1Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitCopperL1Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(150000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitLithiumL1PrototypeId = "StorageUnitLithiumL1";

function StorageUnitLithiumL1Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(3));
  _keyTuple[2] = bytes32(uint256(1));
  return _keyTuple;
}

function StorageUnitLithiumL1Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitLithiumL1Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(150000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitIronL2PrototypeId = "StorageUnitIronL2";

function StorageUnitIronL2Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(1));
  _keyTuple[2] = bytes32(uint256(2));
  return _keyTuple;
}

function StorageUnitIronL2Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitIronL2Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(400000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitCopperL2PrototypeId = "StorageUnitCopperL2";

function StorageUnitCopperL2Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(2));
  _keyTuple[2] = bytes32(uint256(2));
  return _keyTuple;
}

function StorageUnitCopperL2Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitCopperL2Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(400000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitLithiumL2PrototypeId = "StorageUnitLithiumL2";

function StorageUnitLithiumL2Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(3));
  _keyTuple[2] = bytes32(uint256(2));
  return _keyTuple;
}

function StorageUnitLithiumL2Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitLithiumL2Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(400000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitIronPlateL2PrototypeId = "StorageUnitIronPlateL2";

function StorageUnitIronPlateL2Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(8));
  _keyTuple[2] = bytes32(uint256(2));
  return _keyTuple;
}

function StorageUnitIronPlateL2Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitIronPlateL2Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(150000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitPVCellL2PrototypeId = "StorageUnitPVCellL2";

function StorageUnitPVCellL2Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(10));
  _keyTuple[2] = bytes32(uint256(2));
  return _keyTuple;
}

function StorageUnitPVCellL2Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitPVCellL2Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(150000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitAlloyL2PrototypeId = "StorageUnitAlloyL2";

function StorageUnitAlloyL2Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(9));
  _keyTuple[2] = bytes32(uint256(2));
  return _keyTuple;
}

function StorageUnitAlloyL2Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitAlloyL2Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(150000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitIronL3PrototypeId = "StorageUnitIronL3";

function StorageUnitIronL3Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(1));
  _keyTuple[2] = bytes32(uint256(3));
  return _keyTuple;
}

function StorageUnitIronL3Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitIronL3Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitCopperL3PrototypeId = "StorageUnitCopperL3";

function StorageUnitCopperL3Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(2));
  _keyTuple[2] = bytes32(uint256(3));
  return _keyTuple;
}

function StorageUnitCopperL3Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitCopperL3Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitLithiumL3PrototypeId = "StorageUnitLithiumL3";

function StorageUnitLithiumL3Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(3));
  _keyTuple[2] = bytes32(uint256(3));
  return _keyTuple;
}

function StorageUnitLithiumL3Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitLithiumL3Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitIronPlateL3PrototypeId = "StorageUnitIronPlateL3";

function StorageUnitIronPlateL3Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(8));
  _keyTuple[2] = bytes32(uint256(3));
  return _keyTuple;
}

function StorageUnitIronPlateL3Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitIronPlateL3Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(400000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitPVCellL3PrototypeId = "StorageUnitPVCellL3";

function StorageUnitPVCellL3Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(10));
  _keyTuple[2] = bytes32(uint256(3));
  return _keyTuple;
}

function StorageUnitPVCellL3Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitPVCellL3Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(400000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitAlloyL3PrototypeId = "StorageUnitAlloyL3";

function StorageUnitAlloyL3Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(9));
  _keyTuple[2] = bytes32(uint256(3));
  return _keyTuple;
}

function StorageUnitAlloyL3Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitAlloyL3Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(400000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitIronL4PrototypeId = "StorageUnitIronL4";

function StorageUnitIronL4Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(1));
  _keyTuple[2] = bytes32(uint256(4));
  return _keyTuple;
}

function StorageUnitIronL4Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitIronL4Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1600000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitCopperL4PrototypeId = "StorageUnitCopperL4";

function StorageUnitCopperL4Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(2));
  _keyTuple[2] = bytes32(uint256(4));
  return _keyTuple;
}

function StorageUnitCopperL4Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitCopperL4Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1600000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitLithiumL4PrototypeId = "StorageUnitLithiumL4";

function StorageUnitLithiumL4Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(3));
  _keyTuple[2] = bytes32(uint256(4));
  return _keyTuple;
}

function StorageUnitLithiumL4Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitLithiumL4Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1600000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitIronPlateL4PrototypeId = "StorageUnitIronPlateL4";

function StorageUnitIronPlateL4Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(8));
  _keyTuple[2] = bytes32(uint256(4));
  return _keyTuple;
}

function StorageUnitIronPlateL4Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitIronPlateL4Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitPVCellL4PrototypeId = "StorageUnitPVCellL4";

function StorageUnitPVCellL4Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(10));
  _keyTuple[2] = bytes32(uint256(4));
  return _keyTuple;
}

function StorageUnitPVCellL4Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitPVCellL4Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitAlloyL4PrototypeId = "StorageUnitAlloyL4";

function StorageUnitAlloyL4Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(9));
  _keyTuple[2] = bytes32(uint256(4));
  return _keyTuple;
}

function StorageUnitAlloyL4Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitAlloyL4Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitIronL5PrototypeId = "StorageUnitIronL5";

function StorageUnitIronL5Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(1));
  _keyTuple[2] = bytes32(uint256(5));
  return _keyTuple;
}

function StorageUnitIronL5Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitIronL5Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(2500000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitCopperL5PrototypeId = "StorageUnitCopperL5";

function StorageUnitCopperL5Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(2));
  _keyTuple[2] = bytes32(uint256(5));
  return _keyTuple;
}

function StorageUnitCopperL5Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitCopperL5Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(2500000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitLithiumL5PrototypeId = "StorageUnitLithiumL5";

function StorageUnitLithiumL5Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(3));
  _keyTuple[2] = bytes32(uint256(5));
  return _keyTuple;
}

function StorageUnitLithiumL5Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitLithiumL5Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(2500000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitIronPlateL5PrototypeId = "StorageUnitIronPlateL5";

function StorageUnitIronPlateL5Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(8));
  _keyTuple[2] = bytes32(uint256(5));
  return _keyTuple;
}

function StorageUnitIronPlateL5Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitIronPlateL5Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1600000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitPVCellL5PrototypeId = "StorageUnitPVCellL5";

function StorageUnitPVCellL5Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(10));
  _keyTuple[2] = bytes32(uint256(5));
  return _keyTuple;
}

function StorageUnitPVCellL5Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitPVCellL5Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1600000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitAlloyL5PrototypeId = "StorageUnitAlloyL5";

function StorageUnitAlloyL5Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(9));
  _keyTuple[2] = bytes32(uint256(5));
  return _keyTuple;
}

function StorageUnitAlloyL5Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitAlloyL5Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1600000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitTitaniumL5PrototypeId = "StorageUnitTitaniumL5";

function StorageUnitTitaniumL5Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(4));
  _keyTuple[2] = bytes32(uint256(5));
  return _keyTuple;
}

function StorageUnitTitaniumL5Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitTitaniumL5Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(150000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitPlatinumL5PrototypeId = "StorageUnitPlatinumL5";

function StorageUnitPlatinumL5Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(7));
  _keyTuple[2] = bytes32(uint256(5));
  return _keyTuple;
}

function StorageUnitPlatinumL5Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitPlatinumL5Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(150000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitIridiumL5PrototypeId = "StorageUnitIridiumL5";

function StorageUnitIridiumL5Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(5));
  _keyTuple[2] = bytes32(uint256(5));
  return _keyTuple;
}

function StorageUnitIridiumL5Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitIridiumL5Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(150000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitKimberliteL5PrototypeId = "StorageUnitKimberliteL5";

function StorageUnitKimberliteL5Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(6));
  _keyTuple[2] = bytes32(uint256(5));
  return _keyTuple;
}

function StorageUnitKimberliteL5Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitKimberliteL5Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(50000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitIronL6PrototypeId = "StorageUnitIronL6";

function StorageUnitIronL6Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(1));
  _keyTuple[2] = bytes32(uint256(6));
  return _keyTuple;
}

function StorageUnitIronL6Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitIronL6Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(5000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitCopperL6PrototypeId = "StorageUnitCopperL6";

function StorageUnitCopperL6Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(2));
  _keyTuple[2] = bytes32(uint256(6));
  return _keyTuple;
}

function StorageUnitCopperL6Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitCopperL6Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(5000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitLithiumL6PrototypeId = "StorageUnitLithiumL6";

function StorageUnitLithiumL6Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(3));
  _keyTuple[2] = bytes32(uint256(6));
  return _keyTuple;
}

function StorageUnitLithiumL6Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitLithiumL6Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(5000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitIronPlateL6PrototypeId = "StorageUnitIronPlateL6";

function StorageUnitIronPlateL6Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(8));
  _keyTuple[2] = bytes32(uint256(6));
  return _keyTuple;
}

function StorageUnitIronPlateL6Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitIronPlateL6Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(2500000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitPVCellL6PrototypeId = "StorageUnitPVCellL6";

function StorageUnitPVCellL6Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(10));
  _keyTuple[2] = bytes32(uint256(6));
  return _keyTuple;
}

function StorageUnitPVCellL6Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitPVCellL6Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(2500000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitAlloyL6PrototypeId = "StorageUnitAlloyL6";

function StorageUnitAlloyL6Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(9));
  _keyTuple[2] = bytes32(uint256(6));
  return _keyTuple;
}

function StorageUnitAlloyL6Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitAlloyL6Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(2500000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitTitaniumL6PrototypeId = "StorageUnitTitaniumL6";

function StorageUnitTitaniumL6Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(4));
  _keyTuple[2] = bytes32(uint256(6));
  return _keyTuple;
}

function StorageUnitTitaniumL6Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitTitaniumL6Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(400000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitPlatinumL6PrototypeId = "StorageUnitPlatinumL6";

function StorageUnitPlatinumL6Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(7));
  _keyTuple[2] = bytes32(uint256(6));
  return _keyTuple;
}

function StorageUnitPlatinumL6Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitPlatinumL6Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(400000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitIridiumL6PrototypeId = "StorageUnitIridiumL6";

function StorageUnitIridiumL6Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(5));
  _keyTuple[2] = bytes32(uint256(6));
  return _keyTuple;
}

function StorageUnitIridiumL6Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitIridiumL6Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(400000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitKimberliteL6PrototypeId = "StorageUnitKimberliteL6";

function StorageUnitKimberliteL6Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(6));
  _keyTuple[2] = bytes32(uint256(6));
  return _keyTuple;
}

function StorageUnitKimberliteL6Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitKimberliteL6Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(200000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitIronL7PrototypeId = "StorageUnitIronL7";

function StorageUnitIronL7Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(1));
  _keyTuple[2] = bytes32(uint256(7));
  return _keyTuple;
}

function StorageUnitIronL7Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitIronL7Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(7500000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitCopperL7PrototypeId = "StorageUnitCopperL7";

function StorageUnitCopperL7Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(2));
  _keyTuple[2] = bytes32(uint256(7));
  return _keyTuple;
}

function StorageUnitCopperL7Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitCopperL7Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(7500000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitLithiumL7PrototypeId = "StorageUnitLithiumL7";

function StorageUnitLithiumL7Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(3));
  _keyTuple[2] = bytes32(uint256(7));
  return _keyTuple;
}

function StorageUnitLithiumL7Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitLithiumL7Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(7500000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitIronPlateL7PrototypeId = "StorageUnitIronPlateL7";

function StorageUnitIronPlateL7Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(8));
  _keyTuple[2] = bytes32(uint256(7));
  return _keyTuple;
}

function StorageUnitIronPlateL7Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitIronPlateL7Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(4000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitPVCellL7PrototypeId = "StorageUnitPVCellL7";

function StorageUnitPVCellL7Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(10));
  _keyTuple[2] = bytes32(uint256(7));
  return _keyTuple;
}

function StorageUnitPVCellL7Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitPVCellL7Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(4000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitAlloyL7PrototypeId = "StorageUnitAlloyL7";

function StorageUnitAlloyL7Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(9));
  _keyTuple[2] = bytes32(uint256(7));
  return _keyTuple;
}

function StorageUnitAlloyL7Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitAlloyL7Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(4000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitTitaniumL7PrototypeId = "StorageUnitTitaniumL7";

function StorageUnitTitaniumL7Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(4));
  _keyTuple[2] = bytes32(uint256(7));
  return _keyTuple;
}

function StorageUnitTitaniumL7Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitTitaniumL7Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitPlatinumL7PrototypeId = "StorageUnitPlatinumL7";

function StorageUnitPlatinumL7Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(7));
  _keyTuple[2] = bytes32(uint256(7));
  return _keyTuple;
}

function StorageUnitPlatinumL7Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitPlatinumL7Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitIridiumL7PrototypeId = "StorageUnitIridiumL7";

function StorageUnitIridiumL7Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(5));
  _keyTuple[2] = bytes32(uint256(7));
  return _keyTuple;
}

function StorageUnitIridiumL7Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitIridiumL7Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitKimberliteL7PrototypeId = "StorageUnitKimberliteL7";

function StorageUnitKimberliteL7Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(6));
  _keyTuple[2] = bytes32(uint256(7));
  return _keyTuple;
}

function StorageUnitKimberliteL7Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitKimberliteL7Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(500000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitIronL8PrototypeId = "StorageUnitIronL8";

function StorageUnitIronL8Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(1));
  _keyTuple[2] = bytes32(uint256(8));
  return _keyTuple;
}

function StorageUnitIronL8Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitIronL8Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(10000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitCopperL8PrototypeId = "StorageUnitCopperL8";

function StorageUnitCopperL8Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(2));
  _keyTuple[2] = bytes32(uint256(8));
  return _keyTuple;
}

function StorageUnitCopperL8Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitCopperL8Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(10000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitLithiumL8PrototypeId = "StorageUnitLithiumL8";

function StorageUnitLithiumL8Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(3));
  _keyTuple[2] = bytes32(uint256(8));
  return _keyTuple;
}

function StorageUnitLithiumL8Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitLithiumL8Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(10000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitIronPlateL8PrototypeId = "StorageUnitIronPlateL8";

function StorageUnitIronPlateL8Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(8));
  _keyTuple[2] = bytes32(uint256(8));
  return _keyTuple;
}

function StorageUnitIronPlateL8Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitIronPlateL8Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(6000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitPVCellL8PrototypeId = "StorageUnitPVCellL8";

function StorageUnitPVCellL8Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(10));
  _keyTuple[2] = bytes32(uint256(8));
  return _keyTuple;
}

function StorageUnitPVCellL8Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitPVCellL8Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(6000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitAlloyL8PrototypeId = "StorageUnitAlloyL8";

function StorageUnitAlloyL8Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(9));
  _keyTuple[2] = bytes32(uint256(8));
  return _keyTuple;
}

function StorageUnitAlloyL8Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitAlloyL8Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(6000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitTitaniumL8PrototypeId = "StorageUnitTitaniumL8";

function StorageUnitTitaniumL8Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(4));
  _keyTuple[2] = bytes32(uint256(8));
  return _keyTuple;
}

function StorageUnitTitaniumL8Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitTitaniumL8Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1600000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitPlatinumL8PrototypeId = "StorageUnitPlatinumL8";

function StorageUnitPlatinumL8Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(7));
  _keyTuple[2] = bytes32(uint256(8));
  return _keyTuple;
}

function StorageUnitPlatinumL8Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitPlatinumL8Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1600000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitIridiumL8PrototypeId = "StorageUnitIridiumL8";

function StorageUnitIridiumL8Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(5));
  _keyTuple[2] = bytes32(uint256(8));
  return _keyTuple;
}

function StorageUnitIridiumL8Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitIridiumL8Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1600000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitKimberliteL8PrototypeId = "StorageUnitKimberliteL8";

function StorageUnitKimberliteL8Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(6));
  _keyTuple[2] = bytes32(uint256(8));
  return _keyTuple;
}

function StorageUnitKimberliteL8Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitKimberliteL8Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(800000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitIronL9PrototypeId = "StorageUnitIronL9";

function StorageUnitIronL9Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(1));
  _keyTuple[2] = bytes32(uint256(9));
  return _keyTuple;
}

function StorageUnitIronL9Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitIronL9Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(15000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitCopperL9PrototypeId = "StorageUnitCopperL9";

function StorageUnitCopperL9Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(2));
  _keyTuple[2] = bytes32(uint256(9));
  return _keyTuple;
}

function StorageUnitCopperL9Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitCopperL9Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(15000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitLithiumL9PrototypeId = "StorageUnitLithiumL9";

function StorageUnitLithiumL9Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(3));
  _keyTuple[2] = bytes32(uint256(9));
  return _keyTuple;
}

function StorageUnitLithiumL9Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitLithiumL9Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(15000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitIronPlateL9PrototypeId = "StorageUnitIronPlateL9";

function StorageUnitIronPlateL9Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(8));
  _keyTuple[2] = bytes32(uint256(9));
  return _keyTuple;
}

function StorageUnitIronPlateL9Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitIronPlateL9Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(8000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitPVCellL9PrototypeId = "StorageUnitPVCellL9";

function StorageUnitPVCellL9Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(10));
  _keyTuple[2] = bytes32(uint256(9));
  return _keyTuple;
}

function StorageUnitPVCellL9Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitPVCellL9Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(8000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitAlloyL9PrototypeId = "StorageUnitAlloyL9";

function StorageUnitAlloyL9Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(9));
  _keyTuple[2] = bytes32(uint256(9));
  return _keyTuple;
}

function StorageUnitAlloyL9Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitAlloyL9Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(8000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitTitaniumL9PrototypeId = "StorageUnitTitaniumL9";

function StorageUnitTitaniumL9Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(4));
  _keyTuple[2] = bytes32(uint256(9));
  return _keyTuple;
}

function StorageUnitTitaniumL9Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitTitaniumL9Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(2200000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitPlatinumL9PrototypeId = "StorageUnitPlatinumL9";

function StorageUnitPlatinumL9Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(7));
  _keyTuple[2] = bytes32(uint256(9));
  return _keyTuple;
}

function StorageUnitPlatinumL9Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitPlatinumL9Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(2200000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitIridiumL9PrototypeId = "StorageUnitIridiumL9";

function StorageUnitIridiumL9Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(5));
  _keyTuple[2] = bytes32(uint256(9));
  return _keyTuple;
}

function StorageUnitIridiumL9Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitIridiumL9Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(2200000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitKimberliteL9PrototypeId = "StorageUnitKimberliteL9";

function StorageUnitKimberliteL9Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(6));
  _keyTuple[2] = bytes32(uint256(9));
  return _keyTuple;
}

function StorageUnitKimberliteL9Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitKimberliteL9Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1200000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitIronL10PrototypeId = "StorageUnitIronL10";

function StorageUnitIronL10Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(1));
  _keyTuple[2] = bytes32(uint256(10));
  return _keyTuple;
}

function StorageUnitIronL10Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitIronL10Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(24999999999999997902848);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitCopperL10PrototypeId = "StorageUnitCopperL10";

function StorageUnitCopperL10Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(2));
  _keyTuple[2] = bytes32(uint256(10));
  return _keyTuple;
}

function StorageUnitCopperL10Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitCopperL10Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(24999999999999997902848);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitLithiumL10PrototypeId = "StorageUnitLithiumL10";

function StorageUnitLithiumL10Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(3));
  _keyTuple[2] = bytes32(uint256(10));
  return _keyTuple;
}

function StorageUnitLithiumL10Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitLithiumL10Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(24999999999999997902848);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitIronPlateL10PrototypeId = "StorageUnitIronPlateL10";

function StorageUnitIronPlateL10Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(8));
  _keyTuple[2] = bytes32(uint256(10));
  return _keyTuple;
}

function StorageUnitIronPlateL10Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitIronPlateL10Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(10000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitPVCellL10PrototypeId = "StorageUnitPVCellL10";

function StorageUnitPVCellL10Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(10));
  _keyTuple[2] = bytes32(uint256(10));
  return _keyTuple;
}

function StorageUnitPVCellL10Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitPVCellL10Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(10000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitAlloyL10PrototypeId = "StorageUnitAlloyL10";

function StorageUnitAlloyL10Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(9));
  _keyTuple[2] = bytes32(uint256(10));
  return _keyTuple;
}

function StorageUnitAlloyL10Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitAlloyL10Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(10000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitTitaniumL10PrototypeId = "StorageUnitTitaniumL10";

function StorageUnitTitaniumL10Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(4));
  _keyTuple[2] = bytes32(uint256(10));
  return _keyTuple;
}

function StorageUnitTitaniumL10Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitTitaniumL10Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(3500000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitPlatinumL10PrototypeId = "StorageUnitPlatinumL10";

function StorageUnitPlatinumL10Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(7));
  _keyTuple[2] = bytes32(uint256(10));
  return _keyTuple;
}

function StorageUnitPlatinumL10Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitPlatinumL10Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(3500000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitIridiumL10PrototypeId = "StorageUnitIridiumL10";

function StorageUnitIridiumL10Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(5));
  _keyTuple[2] = bytes32(uint256(10));
  return _keyTuple;
}

function StorageUnitIridiumL10Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitIridiumL10Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(3500000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StorageUnitKimberliteL10PrototypeId = "StorageUnitKimberliteL10";

function StorageUnitKimberliteL10Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53746f72616765556e6974000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(6));
  _keyTuple[2] = bytes32(uint256(10));
  return _keyTuple;
}

function StorageUnitKimberliteL10Prototype(IStore store) {
  bytes32[] memory keys = StorageUnitKimberliteL10Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(2000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant SolarPanelPrototypeId = "SolarPanel";

function SolarPanelKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = SolarPanelPrototypeId;
  return _keyTuple;
}

function SolarPanelLevelKeys(uint32 level) pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](2);

  _keyTuple[0] = SolarPanelPrototypeId;
  _keyTuple[1] = bytes32(uint256(level));
  return _keyTuple;
}
function SolarPanelPrototype(IStore store) {
  bytes32[] memory keys = SolarPanelKeys();
  ResourceId[] memory tableIds = new ResourceId[](2);
  bytes[] memory staticData = new bytes[](2);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](2);
  bytes[] memory dynamicData = new bytes[](2);

  tableIds[0] = P_Blueprint._tableId;
  tableIds[1] = P_MaxLevel._tableId;

  int32[] memory p_blueprint_value = new int32[](8);
  p_blueprint_value[0] = 0;
  p_blueprint_value[1] = 0;
  p_blueprint_value[2] = 0;
  p_blueprint_value[3] = -1;
  p_blueprint_value[4] = -1;
  p_blueprint_value[5] = 0;
  p_blueprint_value[6] = -1;
  p_blueprint_value[7] = -1;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_Blueprint.encode(p_blueprint_value);
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_MaxLevel.encode(15);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);

  createSolarPanelLevel1(store);
  createSolarPanelLevel2(store);
  createSolarPanelLevel3(store);
  createSolarPanelLevel4(store);
  createSolarPanelLevel5(store);
  createSolarPanelLevel6(store);
  createSolarPanelLevel7(store);
  createSolarPanelLevel8(store);
  createSolarPanelLevel9(store);
  createSolarPanelLevel10(store);
  createSolarPanelLevel11(store);
  createSolarPanelLevel12(store);
  createSolarPanelLevel13(store);
  createSolarPanelLevel14(store);
  createSolarPanelLevel15(store);
}

/* ----------------------------- LEVEL 1 ----------------------------- */
function createSolarPanelLevel1(IStore store) {
  bytes32[] memory levelKeys = SolarPanelLevelKeys(1);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(4);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 2;
  p_requiredresources__level_resources[2] = 3;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 50000000000000000000;
  p_requiredresources__level_amounts[1] = 50000000000000000000;
  p_requiredresources__level_amounts[2] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 11;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 50000000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 2 ----------------------------- */
function createSolarPanelLevel2(IStore store) {
  bytes32[] memory levelKeys = SolarPanelLevelKeys(2);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(4);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 2;
  p_requiredresources__level_resources[2] = 3;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 100000000000000000000;
  p_requiredresources__level_amounts[1] = 100000000000000000000;
  p_requiredresources__level_amounts[2] = 100000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 11;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 100000000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 3 ----------------------------- */
function createSolarPanelLevel3(IStore store) {
  bytes32[] memory levelKeys = SolarPanelLevelKeys(3);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(5);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 2;
  p_requiredresources__level_resources[2] = 3;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 200000000000000000000;
  p_requiredresources__level_amounts[1] = 200000000000000000000;
  p_requiredresources__level_amounts[2] = 200000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 11;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 150000000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 4 ----------------------------- */
function createSolarPanelLevel4(IStore store) {
  bytes32[] memory levelKeys = SolarPanelLevelKeys(4);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(5);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 2;
  p_requiredresources__level_resources[2] = 3;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 400000000000000000000;
  p_requiredresources__level_amounts[1] = 400000000000000000000;
  p_requiredresources__level_amounts[2] = 400000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 11;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 200000000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 5 ----------------------------- */
function createSolarPanelLevel5(IStore store) {
  bytes32[] memory levelKeys = SolarPanelLevelKeys(5);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(6);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 2;
  p_requiredresources__level_resources[2] = 3;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 1000000000000000000000;
  p_requiredresources__level_amounts[1] = 1000000000000000000000;
  p_requiredresources__level_amounts[2] = 1000000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 11;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 275000000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 6 ----------------------------- */
function createSolarPanelLevel6(IStore store) {
  bytes32[] memory levelKeys = SolarPanelLevelKeys(6);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(6);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 8;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 10;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 500000000000000000000;
  p_requiredresources__level_amounts[1] = 500000000000000000000;
  p_requiredresources__level_amounts[2] = 500000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 11;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 350000000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 7 ----------------------------- */
function createSolarPanelLevel7(IStore store) {
  bytes32[] memory levelKeys = SolarPanelLevelKeys(7);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(7);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 8;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 10;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 1000000000000000000000;
  p_requiredresources__level_amounts[1] = 1000000000000000000000;
  p_requiredresources__level_amounts[2] = 1000000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 11;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 425000000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 8 ----------------------------- */
function createSolarPanelLevel8(IStore store) {
  bytes32[] memory levelKeys = SolarPanelLevelKeys(8);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(8);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 8;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 10;
  p_requiredresources__level_resources[3] = 6;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 1500000000000000000000;
  p_requiredresources__level_amounts[1] = 1500000000000000000000;
  p_requiredresources__level_amounts[2] = 1500000000000000000000;
  p_requiredresources__level_amounts[3] = 100000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 11;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 500000000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 9 ----------------------------- */
function createSolarPanelLevel9(IStore store) {
  bytes32[] memory levelKeys = SolarPanelLevelKeys(9);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(9);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 8;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 10;
  p_requiredresources__level_resources[3] = 6;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 2500000000000000000000;
  p_requiredresources__level_amounts[1] = 2500000000000000000000;
  p_requiredresources__level_amounts[2] = 2500000000000000000000;
  p_requiredresources__level_amounts[3] = 200000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 11;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 575000000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 10 ----------------------------- */
function createSolarPanelLevel10(IStore store) {
  bytes32[] memory levelKeys = SolarPanelLevelKeys(10);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(10);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 4;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 7;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 500000000000000000000;
  p_requiredresources__level_amounts[1] = 500000000000000000000;
  p_requiredresources__level_amounts[2] = 500000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 11;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 650000000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 11 ----------------------------- */
function createSolarPanelLevel11(IStore store) {
  bytes32[] memory levelKeys = SolarPanelLevelKeys(11);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(11);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 4;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 7;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 1000000000000000000000;
  p_requiredresources__level_amounts[1] = 1000000000000000000000;
  p_requiredresources__level_amounts[2] = 1000000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 11;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 750000000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 12 ----------------------------- */
function createSolarPanelLevel12(IStore store) {
  bytes32[] memory levelKeys = SolarPanelLevelKeys(12);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(12);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 4;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 7;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 2000000000000000000000;
  p_requiredresources__level_amounts[1] = 2000000000000000000000;
  p_requiredresources__level_amounts[2] = 2000000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 11;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 850000000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 13 ----------------------------- */
function createSolarPanelLevel13(IStore store) {
  bytes32[] memory levelKeys = SolarPanelLevelKeys(13);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(13);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 4;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 7;
  p_requiredresources__level_resources[3] = 6;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 3000000000000000000000;
  p_requiredresources__level_amounts[1] = 3000000000000000000000;
  p_requiredresources__level_amounts[2] = 3000000000000000000000;
  p_requiredresources__level_amounts[3] = 100000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 11;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 950000000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 14 ----------------------------- */
function createSolarPanelLevel14(IStore store) {
  bytes32[] memory levelKeys = SolarPanelLevelKeys(14);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(14);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 4;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 7;
  p_requiredresources__level_resources[3] = 6;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 4000000000000000000000;
  p_requiredresources__level_amounts[1] = 4000000000000000000000;
  p_requiredresources__level_amounts[2] = 4000000000000000000000;
  p_requiredresources__level_amounts[3] = 500000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 11;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 1050000000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 15 ----------------------------- */
function createSolarPanelLevel15(IStore store) {
  bytes32[] memory levelKeys = SolarPanelLevelKeys(15);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(15);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 4;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 7;
  p_requiredresources__level_resources[3] = 6;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 5000000000000000000000;
  p_requiredresources__level_amounts[1] = 5000000000000000000000;
  p_requiredresources__level_amounts[2] = 5000000000000000000000;
  p_requiredresources__level_amounts[3] = 1000000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 11;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 1200000000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant GaragePrototypeId = "Garage";

function GarageKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = GaragePrototypeId;
  return _keyTuple;
}

function GarageLevelKeys(uint32 level) pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](2);

  _keyTuple[0] = GaragePrototypeId;
  _keyTuple[1] = bytes32(uint256(level));
  return _keyTuple;
}
function GaragePrototype(IStore store) {
  bytes32[] memory keys = GarageKeys();
  ResourceId[] memory tableIds = new ResourceId[](2);
  bytes[] memory staticData = new bytes[](2);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](2);
  bytes[] memory dynamicData = new bytes[](2);

  tableIds[0] = P_Blueprint._tableId;
  tableIds[1] = P_MaxLevel._tableId;

  int32[] memory p_blueprint_value = new int32[](8);
  p_blueprint_value[0] = 0;
  p_blueprint_value[1] = 0;
  p_blueprint_value[2] = 0;
  p_blueprint_value[3] = -1;
  p_blueprint_value[4] = -1;
  p_blueprint_value[5] = 0;
  p_blueprint_value[6] = -1;
  p_blueprint_value[7] = -1;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_Blueprint.encode(p_blueprint_value);
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_MaxLevel.encode(15);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);

  createGarageLevel1(store);
  createGarageLevel2(store);
  createGarageLevel3(store);
  createGarageLevel4(store);
  createGarageLevel5(store);
  createGarageLevel6(store);
  createGarageLevel7(store);
  createGarageLevel8(store);
  createGarageLevel9(store);
  createGarageLevel10(store);
  createGarageLevel11(store);
  createGarageLevel12(store);
  createGarageLevel13(store);
  createGarageLevel14(store);
  createGarageLevel15(store);
}

/* ----------------------------- LEVEL 1 ----------------------------- */
function createGarageLevel1(IStore store) {
  bytes32[] memory levelKeys = GarageLevelKeys(1);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(2);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 2;
  p_requiredresources__level_resources[2] = 3;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 25000000000000000000;
  p_requiredresources__level_amounts[1] = 25000000000000000000;
  p_requiredresources__level_amounts[2] = 25000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 10;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 2 ----------------------------- */
function createGarageLevel2(IStore store) {
  bytes32[] memory levelKeys = GarageLevelKeys(2);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(2);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 2;
  p_requiredresources__level_resources[2] = 3;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 50000000000000000000;
  p_requiredresources__level_amounts[1] = 50000000000000000000;
  p_requiredresources__level_amounts[2] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 20;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 3 ----------------------------- */
function createGarageLevel3(IStore store) {
  bytes32[] memory levelKeys = GarageLevelKeys(3);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(3);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 2;
  p_requiredresources__level_resources[2] = 3;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 100000000000000000000;
  p_requiredresources__level_amounts[1] = 100000000000000000000;
  p_requiredresources__level_amounts[2] = 100000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 30;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 4 ----------------------------- */
function createGarageLevel4(IStore store) {
  bytes32[] memory levelKeys = GarageLevelKeys(4);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(4);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 2;
  p_requiredresources__level_resources[2] = 3;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 150000000000000000000;
  p_requiredresources__level_amounts[1] = 150000000000000000000;
  p_requiredresources__level_amounts[2] = 150000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 40;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 5 ----------------------------- */
function createGarageLevel5(IStore store) {
  bytes32[] memory levelKeys = GarageLevelKeys(5);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(5);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 2;
  p_requiredresources__level_resources[2] = 3;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 200000000000000000000;
  p_requiredresources__level_amounts[1] = 200000000000000000000;
  p_requiredresources__level_amounts[2] = 200000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 50;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 6 ----------------------------- */
function createGarageLevel6(IStore store) {
  bytes32[] memory levelKeys = GarageLevelKeys(6);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(6);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 8;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 10;
  p_requiredresources__level_resources[3] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 100000000000000000000;
  p_requiredresources__level_amounts[1] = 100000000000000000000;
  p_requiredresources__level_amounts[2] = 100000000000000000000;
  p_requiredresources__level_amounts[3] = 25000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 60;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 7 ----------------------------- */
function createGarageLevel7(IStore store) {
  bytes32[] memory levelKeys = GarageLevelKeys(7);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(7);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 8;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 10;
  p_requiredresources__level_resources[3] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 200000000000000000000;
  p_requiredresources__level_amounts[1] = 200000000000000000000;
  p_requiredresources__level_amounts[2] = 200000000000000000000;
  p_requiredresources__level_amounts[3] = 25000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 70;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 8 ----------------------------- */
function createGarageLevel8(IStore store) {
  bytes32[] memory levelKeys = GarageLevelKeys(8);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(8);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 8;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 10;
  p_requiredresources__level_resources[3] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 300000000000000000000;
  p_requiredresources__level_amounts[1] = 300000000000000000000;
  p_requiredresources__level_amounts[2] = 300000000000000000000;
  p_requiredresources__level_amounts[3] = 25000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 80;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 9 ----------------------------- */
function createGarageLevel9(IStore store) {
  bytes32[] memory levelKeys = GarageLevelKeys(9);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(9);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 8;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 10;
  p_requiredresources__level_resources[3] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 400000000000000000000;
  p_requiredresources__level_amounts[1] = 400000000000000000000;
  p_requiredresources__level_amounts[2] = 400000000000000000000;
  p_requiredresources__level_amounts[3] = 25000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 90;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 10 ----------------------------- */
function createGarageLevel10(IStore store) {
  bytes32[] memory levelKeys = GarageLevelKeys(10);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(10);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 4;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 7;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 50000000000000000000;
  p_requiredresources__level_amounts[1] = 50000000000000000000;
  p_requiredresources__level_amounts[2] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 100;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 11 ----------------------------- */
function createGarageLevel11(IStore store) {
  bytes32[] memory levelKeys = GarageLevelKeys(11);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(11);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 4;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 7;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 100000000000000000000;
  p_requiredresources__level_amounts[1] = 100000000000000000000;
  p_requiredresources__level_amounts[2] = 100000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 110;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 12 ----------------------------- */
function createGarageLevel12(IStore store) {
  bytes32[] memory levelKeys = GarageLevelKeys(12);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(12);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 4;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 7;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 150000000000000000000;
  p_requiredresources__level_amounts[1] = 150000000000000000000;
  p_requiredresources__level_amounts[2] = 150000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 120;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 13 ----------------------------- */
function createGarageLevel13(IStore store) {
  bytes32[] memory levelKeys = GarageLevelKeys(13);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(13);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 4;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 7;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 200000000000000000000;
  p_requiredresources__level_amounts[1] = 200000000000000000000;
  p_requiredresources__level_amounts[2] = 200000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 130;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 14 ----------------------------- */
function createGarageLevel14(IStore store) {
  bytes32[] memory levelKeys = GarageLevelKeys(14);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(14);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 4;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 7;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 250000000000000000000;
  p_requiredresources__level_amounts[1] = 250000000000000000000;
  p_requiredresources__level_amounts[2] = 250000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 140;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 15 ----------------------------- */
function createGarageLevel15(IStore store) {
  bytes32[] memory levelKeys = GarageLevelKeys(15);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(15);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 4;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 7;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 300000000000000000000;
  p_requiredresources__level_amounts[1] = 300000000000000000000;
  p_requiredresources__level_amounts[2] = 300000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 150;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant HangarPrototypeId = "Hangar";

function HangarKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = HangarPrototypeId;
  return _keyTuple;
}

function HangarLevelKeys(uint32 level) pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](2);

  _keyTuple[0] = HangarPrototypeId;
  _keyTuple[1] = bytes32(uint256(level));
  return _keyTuple;
}
function HangarPrototype(IStore store) {
  bytes32[] memory keys = HangarKeys();
  ResourceId[] memory tableIds = new ResourceId[](2);
  bytes[] memory staticData = new bytes[](2);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](2);
  bytes[] memory dynamicData = new bytes[](2);

  tableIds[0] = P_Blueprint._tableId;
  tableIds[1] = P_MaxLevel._tableId;

  int32[] memory p_blueprint_value = new int32[](32);
  p_blueprint_value[0] = 0;
  p_blueprint_value[1] = 0;
  p_blueprint_value[2] = 0;
  p_blueprint_value[3] = -1;
  p_blueprint_value[4] = 0;
  p_blueprint_value[5] = -2;
  p_blueprint_value[6] = 0;
  p_blueprint_value[7] = -3;
  p_blueprint_value[8] = -1;
  p_blueprint_value[9] = 0;
  p_blueprint_value[10] = -1;
  p_blueprint_value[11] = -1;
  p_blueprint_value[12] = -1;
  p_blueprint_value[13] = -2;
  p_blueprint_value[14] = -1;
  p_blueprint_value[15] = -3;
  p_blueprint_value[16] = -2;
  p_blueprint_value[17] = 0;
  p_blueprint_value[18] = -2;
  p_blueprint_value[19] = -1;
  p_blueprint_value[20] = -2;
  p_blueprint_value[21] = -2;
  p_blueprint_value[22] = -2;
  p_blueprint_value[23] = -3;
  p_blueprint_value[24] = -3;
  p_blueprint_value[25] = 0;
  p_blueprint_value[26] = -3;
  p_blueprint_value[27] = -1;
  p_blueprint_value[28] = -3;
  p_blueprint_value[29] = -2;
  p_blueprint_value[30] = -3;
  p_blueprint_value[31] = -3;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_Blueprint.encode(p_blueprint_value);
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_MaxLevel.encode(15);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);

  createHangarLevel1(store);
  createHangarLevel2(store);
  createHangarLevel3(store);
  createHangarLevel4(store);
  createHangarLevel5(store);
  createHangarLevel6(store);
  createHangarLevel7(store);
  createHangarLevel8(store);
  createHangarLevel9(store);
  createHangarLevel10(store);
  createHangarLevel11(store);
  createHangarLevel12(store);
  createHangarLevel13(store);
  createHangarLevel14(store);
  createHangarLevel15(store);
}

/* ----------------------------- LEVEL 1 ----------------------------- */
function createHangarLevel1(IStore store) {
  bytes32[] memory levelKeys = HangarLevelKeys(1);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(5);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 2;
  p_requiredresources__level_resources[2] = 3;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 200000000000000000000;
  p_requiredresources__level_amounts[1] = 200000000000000000000;
  p_requiredresources__level_amounts[2] = 200000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 60;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 2 ----------------------------- */
function createHangarLevel2(IStore store) {
  bytes32[] memory levelKeys = HangarLevelKeys(2);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(5);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 2;
  p_requiredresources__level_resources[2] = 3;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 500000000000000000000;
  p_requiredresources__level_amounts[1] = 500000000000000000000;
  p_requiredresources__level_amounts[2] = 500000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 120;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 3 ----------------------------- */
function createHangarLevel3(IStore store) {
  bytes32[] memory levelKeys = HangarLevelKeys(3);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(6);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 2;
  p_requiredresources__level_resources[2] = 3;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 1000000000000000000000;
  p_requiredresources__level_amounts[1] = 1000000000000000000000;
  p_requiredresources__level_amounts[2] = 1000000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 180;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 4 ----------------------------- */
function createHangarLevel4(IStore store) {
  bytes32[] memory levelKeys = HangarLevelKeys(4);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(6);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 2;
  p_requiredresources__level_resources[2] = 3;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 1800000000000000000000;
  p_requiredresources__level_amounts[1] = 1800000000000000000000;
  p_requiredresources__level_amounts[2] = 1800000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 240;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 5 ----------------------------- */
function createHangarLevel5(IStore store) {
  bytes32[] memory levelKeys = HangarLevelKeys(5);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(7);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 2;
  p_requiredresources__level_resources[2] = 3;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 2400000000000000000000;
  p_requiredresources__level_amounts[1] = 2400000000000000000000;
  p_requiredresources__level_amounts[2] = 2400000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 300;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 6 ----------------------------- */
function createHangarLevel6(IStore store) {
  bytes32[] memory levelKeys = HangarLevelKeys(6);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(7);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 8;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 10;
  p_requiredresources__level_resources[3] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 1500000000000000000000;
  p_requiredresources__level_amounts[1] = 1500000000000000000000;
  p_requiredresources__level_amounts[2] = 1500000000000000000000;
  p_requiredresources__level_amounts[3] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 360;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 7 ----------------------------- */
function createHangarLevel7(IStore store) {
  bytes32[] memory levelKeys = HangarLevelKeys(7);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(8);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 8;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 10;
  p_requiredresources__level_resources[3] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 1800000000000000000000;
  p_requiredresources__level_amounts[1] = 1800000000000000000000;
  p_requiredresources__level_amounts[2] = 1800000000000000000000;
  p_requiredresources__level_amounts[3] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 420;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 8 ----------------------------- */
function createHangarLevel8(IStore store) {
  bytes32[] memory levelKeys = HangarLevelKeys(8);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(8);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 8;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 10;
  p_requiredresources__level_resources[3] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 2400000000000000000000;
  p_requiredresources__level_amounts[1] = 2400000000000000000000;
  p_requiredresources__level_amounts[2] = 2400000000000000000000;
  p_requiredresources__level_amounts[3] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 480;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 9 ----------------------------- */
function createHangarLevel9(IStore store) {
  bytes32[] memory levelKeys = HangarLevelKeys(9);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(9);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 8;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 10;
  p_requiredresources__level_resources[3] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 3000000000000000000000;
  p_requiredresources__level_amounts[1] = 3000000000000000000000;
  p_requiredresources__level_amounts[2] = 3000000000000000000000;
  p_requiredresources__level_amounts[3] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 540;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 10 ----------------------------- */
function createHangarLevel10(IStore store) {
  bytes32[] memory levelKeys = HangarLevelKeys(10);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(10);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 4;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 7;
  p_requiredresources__level_resources[3] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 300000000000000000000;
  p_requiredresources__level_amounts[1] = 300000000000000000000;
  p_requiredresources__level_amounts[2] = 300000000000000000000;
  p_requiredresources__level_amounts[3] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 600;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 11 ----------------------------- */
function createHangarLevel11(IStore store) {
  bytes32[] memory levelKeys = HangarLevelKeys(11);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(11);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 4;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 7;
  p_requiredresources__level_resources[3] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 600000000000000000000;
  p_requiredresources__level_amounts[1] = 600000000000000000000;
  p_requiredresources__level_amounts[2] = 600000000000000000000;
  p_requiredresources__level_amounts[3] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 660;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 12 ----------------------------- */
function createHangarLevel12(IStore store) {
  bytes32[] memory levelKeys = HangarLevelKeys(12);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(12);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 4;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 7;
  p_requiredresources__level_resources[3] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 900000000000000000000;
  p_requiredresources__level_amounts[1] = 900000000000000000000;
  p_requiredresources__level_amounts[2] = 900000000000000000000;
  p_requiredresources__level_amounts[3] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 720;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 13 ----------------------------- */
function createHangarLevel13(IStore store) {
  bytes32[] memory levelKeys = HangarLevelKeys(13);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(13);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 4;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 7;
  p_requiredresources__level_resources[3] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 1200000000000000000000;
  p_requiredresources__level_amounts[1] = 1200000000000000000000;
  p_requiredresources__level_amounts[2] = 1200000000000000000000;
  p_requiredresources__level_amounts[3] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 780;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 14 ----------------------------- */
function createHangarLevel14(IStore store) {
  bytes32[] memory levelKeys = HangarLevelKeys(14);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(14);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 4;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 7;
  p_requiredresources__level_resources[3] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 1500000000000000000000;
  p_requiredresources__level_amounts[1] = 1500000000000000000000;
  p_requiredresources__level_amounts[2] = 1500000000000000000000;
  p_requiredresources__level_amounts[3] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 840;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 15 ----------------------------- */
function createHangarLevel15(IStore store) {
  bytes32[] memory levelKeys = HangarLevelKeys(15);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(15);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 4;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 7;
  p_requiredresources__level_resources[3] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 2000000000000000000000;
  p_requiredresources__level_amounts[1] = 2000000000000000000000;
  p_requiredresources__level_amounts[2] = 2000000000000000000000;
  p_requiredresources__level_amounts[3] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 12;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 900;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant DroneFactoryPrototypeId = "DroneFactory";

function DroneFactoryKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = DroneFactoryPrototypeId;
  return _keyTuple;
}

function DroneFactoryLevelKeys(uint32 level) pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](2);

  _keyTuple[0] = DroneFactoryPrototypeId;
  _keyTuple[1] = bytes32(uint256(level));
  return _keyTuple;
}
function DroneFactoryPrototype(IStore store) {
  bytes32[] memory keys = DroneFactoryKeys();
  ResourceId[] memory tableIds = new ResourceId[](2);
  bytes[] memory staticData = new bytes[](2);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](2);
  bytes[] memory dynamicData = new bytes[](2);

  tableIds[0] = P_Blueprint._tableId;
  tableIds[1] = P_MaxLevel._tableId;

  int32[] memory p_blueprint_value = new int32[](18);
  p_blueprint_value[0] = 0;
  p_blueprint_value[1] = 0;
  p_blueprint_value[2] = 0;
  p_blueprint_value[3] = -1;
  p_blueprint_value[4] = 0;
  p_blueprint_value[5] = -2;
  p_blueprint_value[6] = -1;
  p_blueprint_value[7] = 0;
  p_blueprint_value[8] = -1;
  p_blueprint_value[9] = -1;
  p_blueprint_value[10] = -1;
  p_blueprint_value[11] = -2;
  p_blueprint_value[12] = -2;
  p_blueprint_value[13] = 0;
  p_blueprint_value[14] = -2;
  p_blueprint_value[15] = -1;
  p_blueprint_value[16] = -2;
  p_blueprint_value[17] = -2;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_Blueprint.encode(p_blueprint_value);
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_MaxLevel.encode(15);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);

  createDroneFactoryLevel1(store);
  createDroneFactoryLevel2(store);
  createDroneFactoryLevel3(store);
  createDroneFactoryLevel4(store);
  createDroneFactoryLevel5(store);
  createDroneFactoryLevel6(store);
  createDroneFactoryLevel7(store);
  createDroneFactoryLevel8(store);
  createDroneFactoryLevel9(store);
  createDroneFactoryLevel10(store);
  createDroneFactoryLevel11(store);
  createDroneFactoryLevel12(store);
  createDroneFactoryLevel13(store);
  createDroneFactoryLevel14(store);
  createDroneFactoryLevel15(store);
}

/* ----------------------------- LEVEL 1 ----------------------------- */
function createDroneFactoryLevel1(IStore store) {
  bytes32[] memory levelKeys = DroneFactoryLevelKeys(1);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_UnitProdMultiplier._tableId;
  tableIds[3] = P_UnitProdTypes._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(5);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 2;
  p_requiredresources__level_resources[2] = 3;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 100000000000000000000;
  p_requiredresources__level_amounts[1] = 50000000000000000000;
  p_requiredresources__level_amounts[2] = 100000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_UnitProdMultiplier.encode(100);
  bytes32[] memory p_unitprodtypes__level_value = new bytes32[](2);
  p_unitprodtypes__level_value[0] = 0x416e76696c44726f6e6500000000000000000000000000000000000000000000;
  p_unitprodtypes__level_value[1] = 0x48616d6d657244726f6e65000000000000000000000000000000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_UnitProdTypes.encode(p_unitprodtypes__level_value);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 2 ----------------------------- */
function createDroneFactoryLevel2(IStore store) {
  bytes32[] memory levelKeys = DroneFactoryLevelKeys(2);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_UnitProdMultiplier._tableId;
  tableIds[3] = P_UnitProdTypes._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(5);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 2;
  p_requiredresources__level_resources[2] = 3;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 200000000000000000000;
  p_requiredresources__level_amounts[1] = 100000000000000000000;
  p_requiredresources__level_amounts[2] = 200000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_UnitProdMultiplier.encode(105);
  bytes32[] memory p_unitprodtypes__level_value = new bytes32[](2);
  p_unitprodtypes__level_value[0] = 0x416e76696c44726f6e6500000000000000000000000000000000000000000000;
  p_unitprodtypes__level_value[1] = 0x48616d6d657244726f6e65000000000000000000000000000000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_UnitProdTypes.encode(p_unitprodtypes__level_value);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 3 ----------------------------- */
function createDroneFactoryLevel3(IStore store) {
  bytes32[] memory levelKeys = DroneFactoryLevelKeys(3);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_UnitProdMultiplier._tableId;
  tableIds[3] = P_UnitProdTypes._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(6);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 2;
  p_requiredresources__level_resources[2] = 3;
  p_requiredresources__level_resources[3] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 400000000000000000000;
  p_requiredresources__level_amounts[1] = 200000000000000000000;
  p_requiredresources__level_amounts[2] = 400000000000000000000;
  p_requiredresources__level_amounts[3] = 25000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_UnitProdMultiplier.encode(110);
  bytes32[] memory p_unitprodtypes__level_value = new bytes32[](2);
  p_unitprodtypes__level_value[0] = 0x416e76696c44726f6e6500000000000000000000000000000000000000000000;
  p_unitprodtypes__level_value[1] = 0x48616d6d657244726f6e65000000000000000000000000000000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_UnitProdTypes.encode(p_unitprodtypes__level_value);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 4 ----------------------------- */
function createDroneFactoryLevel4(IStore store) {
  bytes32[] memory levelKeys = DroneFactoryLevelKeys(4);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_UnitProdMultiplier._tableId;
  tableIds[3] = P_UnitProdTypes._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(6);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 2;
  p_requiredresources__level_resources[2] = 3;
  p_requiredresources__level_resources[3] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 600000000000000000000;
  p_requiredresources__level_amounts[1] = 400000000000000000000;
  p_requiredresources__level_amounts[2] = 600000000000000000000;
  p_requiredresources__level_amounts[3] = 25000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_UnitProdMultiplier.encode(115);
  bytes32[] memory p_unitprodtypes__level_value = new bytes32[](2);
  p_unitprodtypes__level_value[0] = 0x416e76696c44726f6e6500000000000000000000000000000000000000000000;
  p_unitprodtypes__level_value[1] = 0x48616d6d657244726f6e65000000000000000000000000000000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_UnitProdTypes.encode(p_unitprodtypes__level_value);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 5 ----------------------------- */
function createDroneFactoryLevel5(IStore store) {
  bytes32[] memory levelKeys = DroneFactoryLevelKeys(5);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_UnitProdMultiplier._tableId;
  tableIds[3] = P_UnitProdTypes._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(7);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 2;
  p_requiredresources__level_resources[2] = 3;
  p_requiredresources__level_resources[3] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 1000000000000000000000;
  p_requiredresources__level_amounts[1] = 800000000000000000000;
  p_requiredresources__level_amounts[2] = 1000000000000000000000;
  p_requiredresources__level_amounts[3] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_UnitProdMultiplier.encode(120);
  bytes32[] memory p_unitprodtypes__level_value = new bytes32[](2);
  p_unitprodtypes__level_value[0] = 0x416e76696c44726f6e6500000000000000000000000000000000000000000000;
  p_unitprodtypes__level_value[1] = 0x48616d6d657244726f6e65000000000000000000000000000000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_UnitProdTypes.encode(p_unitprodtypes__level_value);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 6 ----------------------------- */
function createDroneFactoryLevel6(IStore store) {
  bytes32[] memory levelKeys = DroneFactoryLevelKeys(6);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_UnitProdMultiplier._tableId;
  tableIds[3] = P_UnitProdTypes._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(7);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 2;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 4000000000000000000000;
  p_requiredresources__level_amounts[1] = 1000000000000000000000;
  p_requiredresources__level_amounts[2] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_UnitProdMultiplier.encode(130);
  bytes32[] memory p_unitprodtypes__level_value = new bytes32[](2);
  p_unitprodtypes__level_value[0] = 0x416e76696c44726f6e6500000000000000000000000000000000000000000000;
  p_unitprodtypes__level_value[1] = 0x48616d6d657244726f6e65000000000000000000000000000000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_UnitProdTypes.encode(p_unitprodtypes__level_value);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 7 ----------------------------- */
function createDroneFactoryLevel7(IStore store) {
  bytes32[] memory levelKeys = DroneFactoryLevelKeys(7);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_UnitProdMultiplier._tableId;
  tableIds[3] = P_UnitProdTypes._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(8);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 2;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 10000000000000000000000;
  p_requiredresources__level_amounts[1] = 2000000000000000000000;
  p_requiredresources__level_amounts[2] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_UnitProdMultiplier.encode(140);
  bytes32[] memory p_unitprodtypes__level_value = new bytes32[](4);
  p_unitprodtypes__level_value[0] = 0x416e76696c44726f6e6500000000000000000000000000000000000000000000;
  p_unitprodtypes__level_value[1] = 0x48616d6d657244726f6e65000000000000000000000000000000000000000000;
  p_unitprodtypes__level_value[2] = 0x416567697344726f6e6500000000000000000000000000000000000000000000;
  p_unitprodtypes__level_value[3] = 0x5374696e67657244726f6e650000000000000000000000000000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_UnitProdTypes.encode(p_unitprodtypes__level_value);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 8 ----------------------------- */
function createDroneFactoryLevel8(IStore store) {
  bytes32[] memory levelKeys = DroneFactoryLevelKeys(8);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_UnitProdMultiplier._tableId;
  tableIds[3] = P_UnitProdTypes._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(8);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 2;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 20000000000000000000000;
  p_requiredresources__level_amounts[1] = 3000000000000000000000;
  p_requiredresources__level_amounts[2] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_UnitProdMultiplier.encode(150);
  bytes32[] memory p_unitprodtypes__level_value = new bytes32[](4);
  p_unitprodtypes__level_value[0] = 0x416e76696c44726f6e6500000000000000000000000000000000000000000000;
  p_unitprodtypes__level_value[1] = 0x48616d6d657244726f6e65000000000000000000000000000000000000000000;
  p_unitprodtypes__level_value[2] = 0x416567697344726f6e6500000000000000000000000000000000000000000000;
  p_unitprodtypes__level_value[3] = 0x5374696e67657244726f6e650000000000000000000000000000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_UnitProdTypes.encode(p_unitprodtypes__level_value);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 9 ----------------------------- */
function createDroneFactoryLevel9(IStore store) {
  bytes32[] memory levelKeys = DroneFactoryLevelKeys(9);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_UnitProdMultiplier._tableId;
  tableIds[3] = P_UnitProdTypes._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(9);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 2;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 35000000000000002097152;
  p_requiredresources__level_amounts[1] = 4000000000000000000000;
  p_requiredresources__level_amounts[2] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_UnitProdMultiplier.encode(160);
  bytes32[] memory p_unitprodtypes__level_value = new bytes32[](4);
  p_unitprodtypes__level_value[0] = 0x416e76696c44726f6e6500000000000000000000000000000000000000000000;
  p_unitprodtypes__level_value[1] = 0x48616d6d657244726f6e65000000000000000000000000000000000000000000;
  p_unitprodtypes__level_value[2] = 0x416567697344726f6e6500000000000000000000000000000000000000000000;
  p_unitprodtypes__level_value[3] = 0x5374696e67657244726f6e650000000000000000000000000000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_UnitProdTypes.encode(p_unitprodtypes__level_value);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 10 ----------------------------- */
function createDroneFactoryLevel10(IStore store) {
  bytes32[] memory levelKeys = DroneFactoryLevelKeys(10);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_UnitProdMultiplier._tableId;
  tableIds[3] = P_UnitProdTypes._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(10);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 2;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 49999999999999995805696;
  p_requiredresources__level_amounts[1] = 800000000000000000000;
  p_requiredresources__level_amounts[2] = 100000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_UnitProdMultiplier.encode(170);
  bytes32[] memory p_unitprodtypes__level_value = new bytes32[](4);
  p_unitprodtypes__level_value[0] = 0x416e76696c44726f6e6500000000000000000000000000000000000000000000;
  p_unitprodtypes__level_value[1] = 0x48616d6d657244726f6e65000000000000000000000000000000000000000000;
  p_unitprodtypes__level_value[2] = 0x416567697344726f6e6500000000000000000000000000000000000000000000;
  p_unitprodtypes__level_value[3] = 0x5374696e67657244726f6e650000000000000000000000000000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_UnitProdTypes.encode(p_unitprodtypes__level_value);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 11 ----------------------------- */
function createDroneFactoryLevel11(IStore store) {
  bytes32[] memory levelKeys = DroneFactoryLevelKeys(11);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_UnitProdMultiplier._tableId;
  tableIds[3] = P_UnitProdTypes._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(11);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 2;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 70000000000000004194304;
  p_requiredresources__level_amounts[1] = 1500000000000000000000;
  p_requiredresources__level_amounts[2] = 100000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_UnitProdMultiplier.encode(180);
  bytes32[] memory p_unitprodtypes__level_value = new bytes32[](4);
  p_unitprodtypes__level_value[0] = 0x416e76696c44726f6e6500000000000000000000000000000000000000000000;
  p_unitprodtypes__level_value[1] = 0x48616d6d657244726f6e65000000000000000000000000000000000000000000;
  p_unitprodtypes__level_value[2] = 0x416567697344726f6e6500000000000000000000000000000000000000000000;
  p_unitprodtypes__level_value[3] = 0x5374696e67657244726f6e650000000000000000000000000000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_UnitProdTypes.encode(p_unitprodtypes__level_value);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 12 ----------------------------- */
function createDroneFactoryLevel12(IStore store) {
  bytes32[] memory levelKeys = DroneFactoryLevelKeys(12);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_UnitProdMultiplier._tableId;
  tableIds[3] = P_UnitProdTypes._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(12);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 2;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 99999999999999991611392;
  p_requiredresources__level_amounts[1] = 3000000000000000000000;
  p_requiredresources__level_amounts[2] = 100000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_UnitProdMultiplier.encode(190);
  bytes32[] memory p_unitprodtypes__level_value = new bytes32[](4);
  p_unitprodtypes__level_value[0] = 0x416e76696c44726f6e6500000000000000000000000000000000000000000000;
  p_unitprodtypes__level_value[1] = 0x48616d6d657244726f6e65000000000000000000000000000000000000000000;
  p_unitprodtypes__level_value[2] = 0x416567697344726f6e6500000000000000000000000000000000000000000000;
  p_unitprodtypes__level_value[3] = 0x5374696e67657244726f6e650000000000000000000000000000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_UnitProdTypes.encode(p_unitprodtypes__level_value);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 13 ----------------------------- */
function createDroneFactoryLevel13(IStore store) {
  bytes32[] memory levelKeys = DroneFactoryLevelKeys(13);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_UnitProdMultiplier._tableId;
  tableIds[3] = P_UnitProdTypes._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(13);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 2;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 6;
  p_requiredresources__level_resources[3] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 99999999999999991611392;
  p_requiredresources__level_amounts[1] = 5000000000000000000000;
  p_requiredresources__level_amounts[2] = 1000000000000000000000;
  p_requiredresources__level_amounts[3] = 150000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_UnitProdMultiplier.encode(210);
  bytes32[] memory p_unitprodtypes__level_value = new bytes32[](4);
  p_unitprodtypes__level_value[0] = 0x416e76696c44726f6e6500000000000000000000000000000000000000000000;
  p_unitprodtypes__level_value[1] = 0x48616d6d657244726f6e65000000000000000000000000000000000000000000;
  p_unitprodtypes__level_value[2] = 0x416567697344726f6e6500000000000000000000000000000000000000000000;
  p_unitprodtypes__level_value[3] = 0x5374696e67657244726f6e650000000000000000000000000000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_UnitProdTypes.encode(p_unitprodtypes__level_value);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 14 ----------------------------- */
function createDroneFactoryLevel14(IStore store) {
  bytes32[] memory levelKeys = DroneFactoryLevelKeys(14);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_UnitProdMultiplier._tableId;
  tableIds[3] = P_UnitProdTypes._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(14);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 2;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 6;
  p_requiredresources__level_resources[3] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 99999999999999991611392;
  p_requiredresources__level_amounts[1] = 8000000000000000000000;
  p_requiredresources__level_amounts[2] = 1500000000000000000000;
  p_requiredresources__level_amounts[3] = 200000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_UnitProdMultiplier.encode(230);
  bytes32[] memory p_unitprodtypes__level_value = new bytes32[](4);
  p_unitprodtypes__level_value[0] = 0x416e76696c44726f6e6500000000000000000000000000000000000000000000;
  p_unitprodtypes__level_value[1] = 0x48616d6d657244726f6e65000000000000000000000000000000000000000000;
  p_unitprodtypes__level_value[2] = 0x416567697344726f6e6500000000000000000000000000000000000000000000;
  p_unitprodtypes__level_value[3] = 0x5374696e67657244726f6e650000000000000000000000000000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_UnitProdTypes.encode(p_unitprodtypes__level_value);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 15 ----------------------------- */
function createDroneFactoryLevel15(IStore store) {
  bytes32[] memory levelKeys = DroneFactoryLevelKeys(15);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_UnitProdMultiplier._tableId;
  tableIds[3] = P_UnitProdTypes._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(15);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 2;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 6;
  p_requiredresources__level_resources[3] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 99999999999999991611392;
  p_requiredresources__level_amounts[1] = 10000000000000000000000;
  p_requiredresources__level_amounts[2] = 2000000000000000000000;
  p_requiredresources__level_amounts[3] = 250000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_UnitProdMultiplier.encode(250);
  bytes32[] memory p_unitprodtypes__level_value = new bytes32[](4);
  p_unitprodtypes__level_value[0] = 0x416e76696c44726f6e6500000000000000000000000000000000000000000000;
  p_unitprodtypes__level_value[1] = 0x48616d6d657244726f6e65000000000000000000000000000000000000000000;
  p_unitprodtypes__level_value[2] = 0x416567697344726f6e6500000000000000000000000000000000000000000000;
  p_unitprodtypes__level_value[3] = 0x5374696e67657244726f6e650000000000000000000000000000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_UnitProdTypes.encode(p_unitprodtypes__level_value);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant WorkshopPrototypeId = "Workshop";

function WorkshopKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = WorkshopPrototypeId;
  return _keyTuple;
}

function WorkshopLevelKeys(uint32 level) pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](2);

  _keyTuple[0] = WorkshopPrototypeId;
  _keyTuple[1] = bytes32(uint256(level));
  return _keyTuple;
}
function WorkshopPrototype(IStore store) {
  bytes32[] memory keys = WorkshopKeys();
  ResourceId[] memory tableIds = new ResourceId[](2);
  bytes[] memory staticData = new bytes[](2);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](2);
  bytes[] memory dynamicData = new bytes[](2);

  tableIds[0] = P_Blueprint._tableId;
  tableIds[1] = P_MaxLevel._tableId;

  int32[] memory p_blueprint_value = new int32[](8);
  p_blueprint_value[0] = 0;
  p_blueprint_value[1] = 0;
  p_blueprint_value[2] = 0;
  p_blueprint_value[3] = -1;
  p_blueprint_value[4] = -1;
  p_blueprint_value[5] = 0;
  p_blueprint_value[6] = -1;
  p_blueprint_value[7] = -1;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_Blueprint.encode(p_blueprint_value);
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_MaxLevel.encode(15);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);

  createWorkshopLevel1(store);
  createWorkshopLevel2(store);
  createWorkshopLevel3(store);
  createWorkshopLevel4(store);
  createWorkshopLevel5(store);
  createWorkshopLevel6(store);
  createWorkshopLevel7(store);
  createWorkshopLevel8(store);
  createWorkshopLevel9(store);
  createWorkshopLevel10(store);
  createWorkshopLevel11(store);
  createWorkshopLevel12(store);
  createWorkshopLevel13(store);
  createWorkshopLevel14(store);
  createWorkshopLevel15(store);
}

/* ----------------------------- LEVEL 1 ----------------------------- */
function createWorkshopLevel1(IStore store) {
  bytes32[] memory levelKeys = WorkshopLevelKeys(1);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_UnitProdMultiplier._tableId;
  tableIds[3] = P_UnitProdTypes._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(2);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 2;
  p_requiredresources__level_resources[2] = 3;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 100000000000000000000;
  p_requiredresources__level_amounts[1] = 50000000000000000000;
  p_requiredresources__level_amounts[2] = 100000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_UnitProdMultiplier.encode(100);
  bytes32[] memory p_unitprodtypes__level_value = new bytes32[](1);
  p_unitprodtypes__level_value[0] = 0x4d696e7574656d616e4d6172696e650000000000000000000000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_UnitProdTypes.encode(p_unitprodtypes__level_value);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 2 ----------------------------- */
function createWorkshopLevel2(IStore store) {
  bytes32[] memory levelKeys = WorkshopLevelKeys(2);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_UnitProdMultiplier._tableId;
  tableIds[3] = P_UnitProdTypes._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(2);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 2;
  p_requiredresources__level_resources[2] = 3;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 200000000000000000000;
  p_requiredresources__level_amounts[1] = 100000000000000000000;
  p_requiredresources__level_amounts[2] = 200000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_UnitProdMultiplier.encode(105);
  bytes32[] memory p_unitprodtypes__level_value = new bytes32[](1);
  p_unitprodtypes__level_value[0] = 0x4d696e7574656d616e4d6172696e650000000000000000000000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_UnitProdTypes.encode(p_unitprodtypes__level_value);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 3 ----------------------------- */
function createWorkshopLevel3(IStore store) {
  bytes32[] memory levelKeys = WorkshopLevelKeys(3);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_UnitProdMultiplier._tableId;
  tableIds[3] = P_UnitProdTypes._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(3);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 2;
  p_requiredresources__level_resources[2] = 3;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 400000000000000000000;
  p_requiredresources__level_amounts[1] = 200000000000000000000;
  p_requiredresources__level_amounts[2] = 400000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_UnitProdMultiplier.encode(110);
  bytes32[] memory p_unitprodtypes__level_value = new bytes32[](1);
  p_unitprodtypes__level_value[0] = 0x4d696e7574656d616e4d6172696e650000000000000000000000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_UnitProdTypes.encode(p_unitprodtypes__level_value);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 4 ----------------------------- */
function createWorkshopLevel4(IStore store) {
  bytes32[] memory levelKeys = WorkshopLevelKeys(4);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_UnitProdMultiplier._tableId;
  tableIds[3] = P_UnitProdTypes._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(4);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 2;
  p_requiredresources__level_resources[2] = 3;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 600000000000000000000;
  p_requiredresources__level_amounts[1] = 400000000000000000000;
  p_requiredresources__level_amounts[2] = 600000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_UnitProdMultiplier.encode(115);
  bytes32[] memory p_unitprodtypes__level_value = new bytes32[](1);
  p_unitprodtypes__level_value[0] = 0x4d696e7574656d616e4d6172696e650000000000000000000000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_UnitProdTypes.encode(p_unitprodtypes__level_value);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 5 ----------------------------- */
function createWorkshopLevel5(IStore store) {
  bytes32[] memory levelKeys = WorkshopLevelKeys(5);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_UnitProdMultiplier._tableId;
  tableIds[3] = P_UnitProdTypes._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(5);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 2;
  p_requiredresources__level_resources[2] = 3;
  p_requiredresources__level_resources[3] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 1000000000000000000000;
  p_requiredresources__level_amounts[1] = 800000000000000000000;
  p_requiredresources__level_amounts[2] = 1000000000000000000000;
  p_requiredresources__level_amounts[3] = 25000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_UnitProdMultiplier.encode(120);
  bytes32[] memory p_unitprodtypes__level_value = new bytes32[](1);
  p_unitprodtypes__level_value[0] = 0x4d696e7574656d616e4d6172696e650000000000000000000000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_UnitProdTypes.encode(p_unitprodtypes__level_value);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 6 ----------------------------- */
function createWorkshopLevel6(IStore store) {
  bytes32[] memory levelKeys = WorkshopLevelKeys(6);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_UnitProdMultiplier._tableId;
  tableIds[3] = P_UnitProdTypes._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(6);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 2;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 2500000000000000000000;
  p_requiredresources__level_amounts[1] = 500000000000000000000;
  p_requiredresources__level_amounts[2] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_UnitProdMultiplier.encode(125);
  bytes32[] memory p_unitprodtypes__level_value = new bytes32[](1);
  p_unitprodtypes__level_value[0] = 0x4d696e7574656d616e4d6172696e650000000000000000000000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_UnitProdTypes.encode(p_unitprodtypes__level_value);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 7 ----------------------------- */
function createWorkshopLevel7(IStore store) {
  bytes32[] memory levelKeys = WorkshopLevelKeys(7);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_UnitProdMultiplier._tableId;
  tableIds[3] = P_UnitProdTypes._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(7);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 2;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 5000000000000000000000;
  p_requiredresources__level_amounts[1] = 1000000000000000000000;
  p_requiredresources__level_amounts[2] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_UnitProdMultiplier.encode(130);
  bytes32[] memory p_unitprodtypes__level_value = new bytes32[](1);
  p_unitprodtypes__level_value[0] = 0x4d696e7574656d616e4d6172696e650000000000000000000000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_UnitProdTypes.encode(p_unitprodtypes__level_value);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 8 ----------------------------- */
function createWorkshopLevel8(IStore store) {
  bytes32[] memory levelKeys = WorkshopLevelKeys(8);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_UnitProdMultiplier._tableId;
  tableIds[3] = P_UnitProdTypes._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(8);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 2;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 10000000000000000000000;
  p_requiredresources__level_amounts[1] = 1500000000000000000000;
  p_requiredresources__level_amounts[2] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_UnitProdMultiplier.encode(135);
  bytes32[] memory p_unitprodtypes__level_value = new bytes32[](2);
  p_unitprodtypes__level_value[0] = 0x54726964656e744d6172696e6500000000000000000000000000000000000000;
  p_unitprodtypes__level_value[1] = 0x4d696e7574656d616e4d6172696e650000000000000000000000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_UnitProdTypes.encode(p_unitprodtypes__level_value);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 9 ----------------------------- */
function createWorkshopLevel9(IStore store) {
  bytes32[] memory levelKeys = WorkshopLevelKeys(9);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_UnitProdMultiplier._tableId;
  tableIds[3] = P_UnitProdTypes._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(9);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 2;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 17500000000000001048576;
  p_requiredresources__level_amounts[1] = 2000000000000000000000;
  p_requiredresources__level_amounts[2] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_UnitProdMultiplier.encode(140);
  bytes32[] memory p_unitprodtypes__level_value = new bytes32[](2);
  p_unitprodtypes__level_value[0] = 0x54726964656e744d6172696e6500000000000000000000000000000000000000;
  p_unitprodtypes__level_value[1] = 0x4d696e7574656d616e4d6172696e650000000000000000000000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_UnitProdTypes.encode(p_unitprodtypes__level_value);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 10 ----------------------------- */
function createWorkshopLevel10(IStore store) {
  bytes32[] memory levelKeys = WorkshopLevelKeys(10);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_UnitProdMultiplier._tableId;
  tableIds[3] = P_UnitProdTypes._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(10);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 2;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 24999999999999997902848;
  p_requiredresources__level_amounts[1] = 400000000000000000000;
  p_requiredresources__level_amounts[2] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_UnitProdMultiplier.encode(150);
  bytes32[] memory p_unitprodtypes__level_value = new bytes32[](3);
  p_unitprodtypes__level_value[0] = 0x54726964656e744d6172696e6500000000000000000000000000000000000000;
  p_unitprodtypes__level_value[1] = 0x4d696e7574656d616e4d6172696e650000000000000000000000000000000000;
  p_unitprodtypes__level_value[2] = 0x4c696768746e696e674372616674000000000000000000000000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_UnitProdTypes.encode(p_unitprodtypes__level_value);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 11 ----------------------------- */
function createWorkshopLevel11(IStore store) {
  bytes32[] memory levelKeys = WorkshopLevelKeys(11);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_UnitProdMultiplier._tableId;
  tableIds[3] = P_UnitProdTypes._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(11);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 2;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 35000000000000002097152;
  p_requiredresources__level_amounts[1] = 750000000000000000000;
  p_requiredresources__level_amounts[2] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_UnitProdMultiplier.encode(160);
  bytes32[] memory p_unitprodtypes__level_value = new bytes32[](3);
  p_unitprodtypes__level_value[0] = 0x54726964656e744d6172696e6500000000000000000000000000000000000000;
  p_unitprodtypes__level_value[1] = 0x4d696e7574656d616e4d6172696e650000000000000000000000000000000000;
  p_unitprodtypes__level_value[2] = 0x4c696768746e696e674372616674000000000000000000000000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_UnitProdTypes.encode(p_unitprodtypes__level_value);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 12 ----------------------------- */
function createWorkshopLevel12(IStore store) {
  bytes32[] memory levelKeys = WorkshopLevelKeys(12);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_UnitProdMultiplier._tableId;
  tableIds[3] = P_UnitProdTypes._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(12);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 2;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 49999999999999995805696;
  p_requiredresources__level_amounts[1] = 1500000000000000000000;
  p_requiredresources__level_amounts[2] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_UnitProdMultiplier.encode(170);
  bytes32[] memory p_unitprodtypes__level_value = new bytes32[](3);
  p_unitprodtypes__level_value[0] = 0x54726964656e744d6172696e6500000000000000000000000000000000000000;
  p_unitprodtypes__level_value[1] = 0x4d696e7574656d616e4d6172696e650000000000000000000000000000000000;
  p_unitprodtypes__level_value[2] = 0x4c696768746e696e674372616674000000000000000000000000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_UnitProdTypes.encode(p_unitprodtypes__level_value);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 13 ----------------------------- */
function createWorkshopLevel13(IStore store) {
  bytes32[] memory levelKeys = WorkshopLevelKeys(13);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_UnitProdMultiplier._tableId;
  tableIds[3] = P_UnitProdTypes._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(13);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 2;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 6;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 49999999999999995805696;
  p_requiredresources__level_amounts[1] = 2500000000000000000000;
  p_requiredresources__level_amounts[2] = 500000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_UnitProdMultiplier.encode(180);
  bytes32[] memory p_unitprodtypes__level_value = new bytes32[](3);
  p_unitprodtypes__level_value[0] = 0x54726964656e744d6172696e6500000000000000000000000000000000000000;
  p_unitprodtypes__level_value[1] = 0x4d696e7574656d616e4d6172696e650000000000000000000000000000000000;
  p_unitprodtypes__level_value[2] = 0x4c696768746e696e674372616674000000000000000000000000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_UnitProdTypes.encode(p_unitprodtypes__level_value);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 14 ----------------------------- */
function createWorkshopLevel14(IStore store) {
  bytes32[] memory levelKeys = WorkshopLevelKeys(14);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_UnitProdMultiplier._tableId;
  tableIds[3] = P_UnitProdTypes._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(14);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 2;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 6;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 49999999999999995805696;
  p_requiredresources__level_amounts[1] = 4000000000000000000000;
  p_requiredresources__level_amounts[2] = 750000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_UnitProdMultiplier.encode(190);
  bytes32[] memory p_unitprodtypes__level_value = new bytes32[](3);
  p_unitprodtypes__level_value[0] = 0x54726964656e744d6172696e6500000000000000000000000000000000000000;
  p_unitprodtypes__level_value[1] = 0x4d696e7574656d616e4d6172696e650000000000000000000000000000000000;
  p_unitprodtypes__level_value[2] = 0x4c696768746e696e674372616674000000000000000000000000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_UnitProdTypes.encode(p_unitprodtypes__level_value);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 15 ----------------------------- */
function createWorkshopLevel15(IStore store) {
  bytes32[] memory levelKeys = WorkshopLevelKeys(15);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_UnitProdMultiplier._tableId;
  tableIds[3] = P_UnitProdTypes._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(15);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 2;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 6;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 49999999999999995805696;
  p_requiredresources__level_amounts[1] = 5000000000000000000000;
  p_requiredresources__level_amounts[2] = 1000000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_UnitProdMultiplier.encode(200);
  bytes32[] memory p_unitprodtypes__level_value = new bytes32[](3);
  p_unitprodtypes__level_value[0] = 0x54726964656e744d6172696e6500000000000000000000000000000000000000;
  p_unitprodtypes__level_value[1] = 0x4d696e7574656d616e4d6172696e650000000000000000000000000000000000;
  p_unitprodtypes__level_value[2] = 0x4c696768746e696e674372616674000000000000000000000000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_UnitProdTypes.encode(p_unitprodtypes__level_value);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant ShipyardPrototypeId = "Shipyard";

function ShipyardKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = ShipyardPrototypeId;
  return _keyTuple;
}

function ShipyardLevelKeys(uint32 level) pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](2);

  _keyTuple[0] = ShipyardPrototypeId;
  _keyTuple[1] = bytes32(uint256(level));
  return _keyTuple;
}
function ShipyardPrototype(IStore store) {
  bytes32[] memory keys = ShipyardKeys();
  ResourceId[] memory tableIds = new ResourceId[](2);
  bytes[] memory staticData = new bytes[](2);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](2);
  bytes[] memory dynamicData = new bytes[](2);

  tableIds[0] = P_Blueprint._tableId;
  tableIds[1] = P_MaxLevel._tableId;

  int32[] memory p_blueprint_value = new int32[](48);
  p_blueprint_value[0] = 0;
  p_blueprint_value[1] = 0;
  p_blueprint_value[2] = 0;
  p_blueprint_value[3] = -1;
  p_blueprint_value[4] = 0;
  p_blueprint_value[5] = -2;
  p_blueprint_value[6] = 0;
  p_blueprint_value[7] = -3;
  p_blueprint_value[8] = -1;
  p_blueprint_value[9] = 0;
  p_blueprint_value[10] = -1;
  p_blueprint_value[11] = -1;
  p_blueprint_value[12] = -1;
  p_blueprint_value[13] = -2;
  p_blueprint_value[14] = -1;
  p_blueprint_value[15] = -3;
  p_blueprint_value[16] = -2;
  p_blueprint_value[17] = 0;
  p_blueprint_value[18] = -2;
  p_blueprint_value[19] = -1;
  p_blueprint_value[20] = -2;
  p_blueprint_value[21] = -2;
  p_blueprint_value[22] = -2;
  p_blueprint_value[23] = -3;
  p_blueprint_value[24] = -3;
  p_blueprint_value[25] = 0;
  p_blueprint_value[26] = -3;
  p_blueprint_value[27] = -1;
  p_blueprint_value[28] = -3;
  p_blueprint_value[29] = -2;
  p_blueprint_value[30] = -3;
  p_blueprint_value[31] = -3;
  p_blueprint_value[32] = -4;
  p_blueprint_value[33] = 0;
  p_blueprint_value[34] = -4;
  p_blueprint_value[35] = -1;
  p_blueprint_value[36] = -4;
  p_blueprint_value[37] = -2;
  p_blueprint_value[38] = -4;
  p_blueprint_value[39] = -3;
  p_blueprint_value[40] = -5;
  p_blueprint_value[41] = 0;
  p_blueprint_value[42] = -5;
  p_blueprint_value[43] = -1;
  p_blueprint_value[44] = -5;
  p_blueprint_value[45] = -2;
  p_blueprint_value[46] = -5;
  p_blueprint_value[47] = -3;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_Blueprint.encode(p_blueprint_value);
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_MaxLevel.encode(10);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);

  createShipyardLevel1(store);
  createShipyardLevel2(store);
  createShipyardLevel3(store);
  createShipyardLevel4(store);
  createShipyardLevel5(store);
  createShipyardLevel6(store);
  createShipyardLevel7(store);
  createShipyardLevel8(store);
  createShipyardLevel9(store);
  createShipyardLevel10(store);
}

/* ----------------------------- LEVEL 1 ----------------------------- */
function createShipyardLevel1(IStore store) {
  bytes32[] memory levelKeys = ShipyardLevelKeys(1);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredResources._tableId;
  tableIds[1] = P_RequiredBaseLevel._tableId;
  tableIds[2] = P_UnitProdMultiplier._tableId;
  tableIds[3] = P_UnitProdTypes._tableId;

  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 2;
  p_requiredresources__level_resources[2] = 3;
  p_requiredresources__level_resources[3] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 1000000000000000000000;
  p_requiredresources__level_amounts[1] = 1000000000000000000000;
  p_requiredresources__level_amounts[2] = 1000000000000000000000;
  p_requiredresources__level_amounts[3] = 50000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredBaseLevel.encode(8);
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_UnitProdMultiplier.encode(100);
  bytes32[] memory p_unitprodtypes__level_value = new bytes32[](1);
  p_unitprodtypes__level_value[0] = 0x436f6c6f6e795368697000000000000000000000000000000000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_UnitProdTypes.encode(p_unitprodtypes__level_value);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 2 ----------------------------- */
function createShipyardLevel2(IStore store) {
  bytes32[] memory levelKeys = ShipyardLevelKeys(2);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_UnitProdMultiplier._tableId;
  tableIds[3] = P_UnitProdTypes._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(8);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 8;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 10;
  p_requiredresources__level_resources[3] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 1000000000000000000000;
  p_requiredresources__level_amounts[1] = 1000000000000000000000;
  p_requiredresources__level_amounts[2] = 1000000000000000000000;
  p_requiredresources__level_amounts[3] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_UnitProdMultiplier.encode(120);
  bytes32[] memory p_unitprodtypes__level_value = new bytes32[](1);
  p_unitprodtypes__level_value[0] = 0x436f6c6f6e795368697000000000000000000000000000000000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_UnitProdTypes.encode(p_unitprodtypes__level_value);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 3 ----------------------------- */
function createShipyardLevel3(IStore store) {
  bytes32[] memory levelKeys = ShipyardLevelKeys(3);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_UnitProdMultiplier._tableId;
  tableIds[3] = P_UnitProdTypes._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(9);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 8;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 10;
  p_requiredresources__level_resources[3] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 2000000000000000000000;
  p_requiredresources__level_amounts[1] = 2000000000000000000000;
  p_requiredresources__level_amounts[2] = 2000000000000000000000;
  p_requiredresources__level_amounts[3] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_UnitProdMultiplier.encode(140);
  bytes32[] memory p_unitprodtypes__level_value = new bytes32[](1);
  p_unitprodtypes__level_value[0] = 0x436f6c6f6e795368697000000000000000000000000000000000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_UnitProdTypes.encode(p_unitprodtypes__level_value);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 4 ----------------------------- */
function createShipyardLevel4(IStore store) {
  bytes32[] memory levelKeys = ShipyardLevelKeys(4);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_UnitProdMultiplier._tableId;
  tableIds[3] = P_UnitProdTypes._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(9);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 8;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 10;
  p_requiredresources__level_resources[3] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 3000000000000000000000;
  p_requiredresources__level_amounts[1] = 3000000000000000000000;
  p_requiredresources__level_amounts[2] = 3000000000000000000000;
  p_requiredresources__level_amounts[3] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_UnitProdMultiplier.encode(160);
  bytes32[] memory p_unitprodtypes__level_value = new bytes32[](1);
  p_unitprodtypes__level_value[0] = 0x436f6c6f6e795368697000000000000000000000000000000000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_UnitProdTypes.encode(p_unitprodtypes__level_value);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 5 ----------------------------- */
function createShipyardLevel5(IStore store) {
  bytes32[] memory levelKeys = ShipyardLevelKeys(5);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_UnitProdMultiplier._tableId;
  tableIds[3] = P_UnitProdTypes._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(10);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 8;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 10;
  p_requiredresources__level_resources[3] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 4000000000000000000000;
  p_requiredresources__level_amounts[1] = 4000000000000000000000;
  p_requiredresources__level_amounts[2] = 4000000000000000000000;
  p_requiredresources__level_amounts[3] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_UnitProdMultiplier.encode(180);
  bytes32[] memory p_unitprodtypes__level_value = new bytes32[](1);
  p_unitprodtypes__level_value[0] = 0x436f6c6f6e795368697000000000000000000000000000000000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_UnitProdTypes.encode(p_unitprodtypes__level_value);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 6 ----------------------------- */
function createShipyardLevel6(IStore store) {
  bytes32[] memory levelKeys = ShipyardLevelKeys(6);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_UnitProdMultiplier._tableId;
  tableIds[3] = P_UnitProdTypes._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(11);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 8;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 10;
  p_requiredresources__level_resources[3] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 5000000000000000000000;
  p_requiredresources__level_amounts[1] = 5000000000000000000000;
  p_requiredresources__level_amounts[2] = 5000000000000000000000;
  p_requiredresources__level_amounts[3] = 100000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_UnitProdMultiplier.encode(200);
  bytes32[] memory p_unitprodtypes__level_value = new bytes32[](1);
  p_unitprodtypes__level_value[0] = 0x436f6c6f6e795368697000000000000000000000000000000000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_UnitProdTypes.encode(p_unitprodtypes__level_value);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 7 ----------------------------- */
function createShipyardLevel7(IStore store) {
  bytes32[] memory levelKeys = ShipyardLevelKeys(7);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_UnitProdMultiplier._tableId;
  tableIds[3] = P_UnitProdTypes._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(12);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 8;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 10;
  p_requiredresources__level_resources[3] = 4;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 5000000000000000000000;
  p_requiredresources__level_amounts[1] = 5000000000000000000000;
  p_requiredresources__level_amounts[2] = 5000000000000000000000;
  p_requiredresources__level_amounts[3] = 1000000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_UnitProdMultiplier.encode(220);
  bytes32[] memory p_unitprodtypes__level_value = new bytes32[](1);
  p_unitprodtypes__level_value[0] = 0x436f6c6f6e795368697000000000000000000000000000000000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_UnitProdTypes.encode(p_unitprodtypes__level_value);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 8 ----------------------------- */
function createShipyardLevel8(IStore store) {
  bytes32[] memory levelKeys = ShipyardLevelKeys(8);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_UnitProdMultiplier._tableId;
  tableIds[3] = P_UnitProdTypes._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(13);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 8;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 10;
  p_requiredresources__level_resources[3] = 5;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 5000000000000000000000;
  p_requiredresources__level_amounts[1] = 5000000000000000000000;
  p_requiredresources__level_amounts[2] = 5000000000000000000000;
  p_requiredresources__level_amounts[3] = 1000000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_UnitProdMultiplier.encode(240);
  bytes32[] memory p_unitprodtypes__level_value = new bytes32[](1);
  p_unitprodtypes__level_value[0] = 0x436f6c6f6e795368697000000000000000000000000000000000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_UnitProdTypes.encode(p_unitprodtypes__level_value);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 9 ----------------------------- */
function createShipyardLevel9(IStore store) {
  bytes32[] memory levelKeys = ShipyardLevelKeys(9);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_UnitProdMultiplier._tableId;
  tableIds[3] = P_UnitProdTypes._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(14);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 8;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 10;
  p_requiredresources__level_resources[3] = 7;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 5000000000000000000000;
  p_requiredresources__level_amounts[1] = 5000000000000000000000;
  p_requiredresources__level_amounts[2] = 5000000000000000000000;
  p_requiredresources__level_amounts[3] = 1000000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_UnitProdMultiplier.encode(260);
  bytes32[] memory p_unitprodtypes__level_value = new bytes32[](1);
  p_unitprodtypes__level_value[0] = 0x436f6c6f6e795368697000000000000000000000000000000000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_UnitProdTypes.encode(p_unitprodtypes__level_value);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 10 ----------------------------- */
function createShipyardLevel10(IStore store) {
  bytes32[] memory levelKeys = ShipyardLevelKeys(10);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_UnitProdMultiplier._tableId;
  tableIds[3] = P_UnitProdTypes._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(15);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 4;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 7;
  p_requiredresources__level_resources[3] = 6;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 1000000000000000000000;
  p_requiredresources__level_amounts[1] = 1000000000000000000000;
  p_requiredresources__level_amounts[2] = 1000000000000000000000;
  p_requiredresources__level_amounts[3] = 1000000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_UnitProdMultiplier.encode(300);
  bytes32[] memory p_unitprodtypes__level_value = new bytes32[](1);
  p_unitprodtypes__level_value[0] = 0x436f6c6f6e795368697000000000000000000000000000000000000000000000;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_UnitProdTypes.encode(p_unitprodtypes__level_value);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StarmapperPrototypeId = "Starmapper";

function StarmapperKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = StarmapperPrototypeId;
  return _keyTuple;
}

function StarmapperLevelKeys(uint32 level) pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](2);

  _keyTuple[0] = StarmapperPrototypeId;
  _keyTuple[1] = bytes32(uint256(level));
  return _keyTuple;
}
function StarmapperPrototype(IStore store) {
  bytes32[] memory keys = StarmapperKeys();
  ResourceId[] memory tableIds = new ResourceId[](2);
  bytes[] memory staticData = new bytes[](2);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](2);
  bytes[] memory dynamicData = new bytes[](2);

  tableIds[0] = P_Blueprint._tableId;
  tableIds[1] = P_MaxLevel._tableId;

  int32[] memory p_blueprint_value = new int32[](12);
  p_blueprint_value[0] = 0;
  p_blueprint_value[1] = 0;
  p_blueprint_value[2] = 0;
  p_blueprint_value[3] = -1;
  p_blueprint_value[4] = -1;
  p_blueprint_value[5] = 0;
  p_blueprint_value[6] = -1;
  p_blueprint_value[7] = -1;
  p_blueprint_value[8] = -2;
  p_blueprint_value[9] = 0;
  p_blueprint_value[10] = -2;
  p_blueprint_value[11] = -1;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_Blueprint.encode(p_blueprint_value);
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_MaxLevel.encode(3);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);

  createStarmapperLevel1(store);
  createStarmapperLevel2(store);
  createStarmapperLevel3(store);
}

/* ----------------------------- LEVEL 1 ----------------------------- */
function createStarmapperLevel1(IStore store) {
  bytes32[] memory levelKeys = StarmapperLevelKeys(1);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(3);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 2;
  p_requiredresources__level_resources[2] = 3;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 250000000000000000000;
  p_requiredresources__level_amounts[1] = 250000000000000000000;
  p_requiredresources__level_amounts[2] = 250000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 13;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 1;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 2 ----------------------------- */
function createStarmapperLevel2(IStore store) {
  bytes32[] memory levelKeys = StarmapperLevelKeys(2);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(9);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 8;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 10;
  p_requiredresources__level_resources[3] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 500000000000000000000;
  p_requiredresources__level_amounts[1] = 500000000000000000000;
  p_requiredresources__level_amounts[2] = 500000000000000000000;
  p_requiredresources__level_amounts[3] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 13;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 2;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 3 ----------------------------- */
function createStarmapperLevel3(IStore store) {
  bytes32[] memory levelKeys = StarmapperLevelKeys(3);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(15);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 4;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 7;
  p_requiredresources__level_resources[3] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 500000000000000000000;
  p_requiredresources__level_amounts[1] = 500000000000000000000;
  p_requiredresources__level_amounts[2] = 500000000000000000000;
  p_requiredresources__level_amounts[3] = 250000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 13;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 3;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant SAMPrototypeId = "SAM";

function SAMKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = SAMPrototypeId;
  return _keyTuple;
}

function SAMLevelKeys(uint32 level) pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](2);

  _keyTuple[0] = SAMPrototypeId;
  _keyTuple[1] = bytes32(uint256(level));
  return _keyTuple;
}
function SAMPrototype(IStore store) {
  bytes32[] memory keys = SAMKeys();
  ResourceId[] memory tableIds = new ResourceId[](2);
  bytes[] memory staticData = new bytes[](2);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](2);
  bytes[] memory dynamicData = new bytes[](2);

  tableIds[0] = P_Blueprint._tableId;
  tableIds[1] = P_MaxLevel._tableId;

  int32[] memory p_blueprint_value = new int32[](18);
  p_blueprint_value[0] = 0;
  p_blueprint_value[1] = 0;
  p_blueprint_value[2] = 0;
  p_blueprint_value[3] = -1;
  p_blueprint_value[4] = 0;
  p_blueprint_value[5] = -2;
  p_blueprint_value[6] = -1;
  p_blueprint_value[7] = 0;
  p_blueprint_value[8] = -1;
  p_blueprint_value[9] = -1;
  p_blueprint_value[10] = -1;
  p_blueprint_value[11] = -2;
  p_blueprint_value[12] = -2;
  p_blueprint_value[13] = 0;
  p_blueprint_value[14] = -2;
  p_blueprint_value[15] = -1;
  p_blueprint_value[16] = -2;
  p_blueprint_value[17] = -2;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_Blueprint.encode(p_blueprint_value);
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_MaxLevel.encode(10);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);

  createSAMLevel1(store);
  createSAMLevel2(store);
  createSAMLevel3(store);
  createSAMLevel4(store);
  createSAMLevel5(store);
  createSAMLevel6(store);
  createSAMLevel7(store);
  createSAMLevel8(store);
  createSAMLevel9(store);
  createSAMLevel10(store);
}

/* ----------------------------- LEVEL 1 ----------------------------- */
function createSAMLevel1(IStore store) {
  bytes32[] memory levelKeys = SAMLevelKeys(1);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;
  tableIds[3] = P_ListMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(6);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 8;
  p_requiredresources__level_resources[1] = 10;
  p_requiredresources__level_resources[2] = 9;
  p_requiredresources__level_resources[3] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 100000000000000000000;
  p_requiredresources__level_amounts[1] = 100000000000000000000;
  p_requiredresources__level_amounts[2] = 100000000000000000000;
  p_requiredresources__level_amounts[3] = 100000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 14;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 400000000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );
  uint8[] memory p_listmaxresourceupgrades__level_value = new uint8[](1);
  p_listmaxresourceupgrades__level_value[0] = 17;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_ListMaxResourceUpgrades.encode(
    p_listmaxresourceupgrades__level_value
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 2 ----------------------------- */
function createSAMLevel2(IStore store) {
  bytes32[] memory levelKeys = SAMLevelKeys(2);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;
  tableIds[3] = P_ListMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(7);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 8;
  p_requiredresources__level_resources[1] = 10;
  p_requiredresources__level_resources[2] = 9;
  p_requiredresources__level_resources[3] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 200000000000000000000;
  p_requiredresources__level_amounts[1] = 200000000000000000000;
  p_requiredresources__level_amounts[2] = 200000000000000000000;
  p_requiredresources__level_amounts[3] = 100000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 14;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 800000000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );
  uint8[] memory p_listmaxresourceupgrades__level_value = new uint8[](1);
  p_listmaxresourceupgrades__level_value[0] = 17;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_ListMaxResourceUpgrades.encode(
    p_listmaxresourceupgrades__level_value
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 3 ----------------------------- */
function createSAMLevel3(IStore store) {
  bytes32[] memory levelKeys = SAMLevelKeys(3);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;
  tableIds[3] = P_ListMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(8);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 8;
  p_requiredresources__level_resources[1] = 10;
  p_requiredresources__level_resources[2] = 9;
  p_requiredresources__level_resources[3] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 300000000000000000000;
  p_requiredresources__level_amounts[1] = 300000000000000000000;
  p_requiredresources__level_amounts[2] = 300000000000000000000;
  p_requiredresources__level_amounts[3] = 100000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 14;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 1200000000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );
  uint8[] memory p_listmaxresourceupgrades__level_value = new uint8[](1);
  p_listmaxresourceupgrades__level_value[0] = 17;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_ListMaxResourceUpgrades.encode(
    p_listmaxresourceupgrades__level_value
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 4 ----------------------------- */
function createSAMLevel4(IStore store) {
  bytes32[] memory levelKeys = SAMLevelKeys(4);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;
  tableIds[3] = P_ListMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(9);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 8;
  p_requiredresources__level_resources[1] = 10;
  p_requiredresources__level_resources[2] = 9;
  p_requiredresources__level_resources[3] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 500000000000000000000;
  p_requiredresources__level_amounts[1] = 500000000000000000000;
  p_requiredresources__level_amounts[2] = 500000000000000000000;
  p_requiredresources__level_amounts[3] = 100000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 14;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 1600000000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );
  uint8[] memory p_listmaxresourceupgrades__level_value = new uint8[](1);
  p_listmaxresourceupgrades__level_value[0] = 17;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_ListMaxResourceUpgrades.encode(
    p_listmaxresourceupgrades__level_value
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 5 ----------------------------- */
function createSAMLevel5(IStore store) {
  bytes32[] memory levelKeys = SAMLevelKeys(5);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;
  tableIds[3] = P_ListMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(10);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 4;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 7;
  p_requiredresources__level_resources[3] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 100000000000000000000;
  p_requiredresources__level_amounts[1] = 100000000000000000000;
  p_requiredresources__level_amounts[2] = 100000000000000000000;
  p_requiredresources__level_amounts[3] = 100000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 14;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 2000000000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );
  uint8[] memory p_listmaxresourceupgrades__level_value = new uint8[](1);
  p_listmaxresourceupgrades__level_value[0] = 17;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_ListMaxResourceUpgrades.encode(
    p_listmaxresourceupgrades__level_value
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 6 ----------------------------- */
function createSAMLevel6(IStore store) {
  bytes32[] memory levelKeys = SAMLevelKeys(6);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;
  tableIds[3] = P_ListMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(11);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 4;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 7;
  p_requiredresources__level_resources[3] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 200000000000000000000;
  p_requiredresources__level_amounts[1] = 200000000000000000000;
  p_requiredresources__level_amounts[2] = 200000000000000000000;
  p_requiredresources__level_amounts[3] = 100000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 14;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 2500000000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );
  uint8[] memory p_listmaxresourceupgrades__level_value = new uint8[](1);
  p_listmaxresourceupgrades__level_value[0] = 17;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_ListMaxResourceUpgrades.encode(
    p_listmaxresourceupgrades__level_value
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 7 ----------------------------- */
function createSAMLevel7(IStore store) {
  bytes32[] memory levelKeys = SAMLevelKeys(7);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;
  tableIds[3] = P_ListMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(12);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 4;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 7;
  p_requiredresources__level_resources[3] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 300000000000000000000;
  p_requiredresources__level_amounts[1] = 300000000000000000000;
  p_requiredresources__level_amounts[2] = 300000000000000000000;
  p_requiredresources__level_amounts[3] = 100000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 14;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 3000000000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );
  uint8[] memory p_listmaxresourceupgrades__level_value = new uint8[](1);
  p_listmaxresourceupgrades__level_value[0] = 17;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_ListMaxResourceUpgrades.encode(
    p_listmaxresourceupgrades__level_value
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 8 ----------------------------- */
function createSAMLevel8(IStore store) {
  bytes32[] memory levelKeys = SAMLevelKeys(8);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;
  tableIds[3] = P_ListMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(13);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 4;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 7;
  p_requiredresources__level_resources[3] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 500000000000000000000;
  p_requiredresources__level_amounts[1] = 500000000000000000000;
  p_requiredresources__level_amounts[2] = 500000000000000000000;
  p_requiredresources__level_amounts[3] = 100000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 14;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 3500000000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );
  uint8[] memory p_listmaxresourceupgrades__level_value = new uint8[](1);
  p_listmaxresourceupgrades__level_value[0] = 17;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_ListMaxResourceUpgrades.encode(
    p_listmaxresourceupgrades__level_value
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 9 ----------------------------- */
function createSAMLevel9(IStore store) {
  bytes32[] memory levelKeys = SAMLevelKeys(9);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;
  tableIds[3] = P_ListMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(14);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 4;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 7;
  p_requiredresources__level_resources[3] = 6;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 500000000000000000000;
  p_requiredresources__level_amounts[1] = 500000000000000000000;
  p_requiredresources__level_amounts[2] = 500000000000000000000;
  p_requiredresources__level_amounts[3] = 500000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 14;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 4000000000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );
  uint8[] memory p_listmaxresourceupgrades__level_value = new uint8[](1);
  p_listmaxresourceupgrades__level_value[0] = 17;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_ListMaxResourceUpgrades.encode(
    p_listmaxresourceupgrades__level_value
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 10 ----------------------------- */
function createSAMLevel10(IStore store) {
  bytes32[] memory levelKeys = SAMLevelKeys(10);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;
  tableIds[3] = P_ListMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(15);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 4;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 7;
  p_requiredresources__level_resources[3] = 6;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 1000000000000000000000;
  p_requiredresources__level_amounts[1] = 1000000000000000000000;
  p_requiredresources__level_amounts[2] = 1000000000000000000000;
  p_requiredresources__level_amounts[3] = 1000000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 14;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 5000000000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );
  uint8[] memory p_listmaxresourceupgrades__level_value = new uint8[](1);
  p_listmaxresourceupgrades__level_value[0] = 17;
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_ListMaxResourceUpgrades.encode(
    p_listmaxresourceupgrades__level_value
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant SAMR_HPL1PrototypeId = "SAMR_HPL1";

function SAMR_HPL1Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53414d0000000000000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(17));
  _keyTuple[2] = bytes32(uint256(1));
  return _keyTuple;
}

function SAMR_HPL1Prototype(IStore store) {
  bytes32[] memory keys = SAMR_HPL1Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(800000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant SAMR_HPL2PrototypeId = "SAMR_HPL2";

function SAMR_HPL2Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53414d0000000000000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(17));
  _keyTuple[2] = bytes32(uint256(2));
  return _keyTuple;
}

function SAMR_HPL2Prototype(IStore store) {
  bytes32[] memory keys = SAMR_HPL2Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(1600000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant SAMR_HPL3PrototypeId = "SAMR_HPL3";

function SAMR_HPL3Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53414d0000000000000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(17));
  _keyTuple[2] = bytes32(uint256(3));
  return _keyTuple;
}

function SAMR_HPL3Prototype(IStore store) {
  bytes32[] memory keys = SAMR_HPL3Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(2400000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant SAMR_HPL4PrototypeId = "SAMR_HPL4";

function SAMR_HPL4Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53414d0000000000000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(17));
  _keyTuple[2] = bytes32(uint256(4));
  return _keyTuple;
}

function SAMR_HPL4Prototype(IStore store) {
  bytes32[] memory keys = SAMR_HPL4Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(3200000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant SAMR_HPL5PrototypeId = "SAMR_HPL5";

function SAMR_HPL5Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53414d0000000000000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(17));
  _keyTuple[2] = bytes32(uint256(5));
  return _keyTuple;
}

function SAMR_HPL5Prototype(IStore store) {
  bytes32[] memory keys = SAMR_HPL5Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(4000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant SAMR_HPL6PrototypeId = "SAMR_HPL6";

function SAMR_HPL6Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53414d0000000000000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(17));
  _keyTuple[2] = bytes32(uint256(6));
  return _keyTuple;
}

function SAMR_HPL6Prototype(IStore store) {
  bytes32[] memory keys = SAMR_HPL6Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(5000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant SAMR_HPL7PrototypeId = "SAMR_HPL7";

function SAMR_HPL7Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53414d0000000000000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(17));
  _keyTuple[2] = bytes32(uint256(7));
  return _keyTuple;
}

function SAMR_HPL7Prototype(IStore store) {
  bytes32[] memory keys = SAMR_HPL7Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(6000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant SAMR_HPL8PrototypeId = "SAMR_HPL8";

function SAMR_HPL8Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53414d0000000000000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(17));
  _keyTuple[2] = bytes32(uint256(8));
  return _keyTuple;
}

function SAMR_HPL8Prototype(IStore store) {
  bytes32[] memory keys = SAMR_HPL8Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(7000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant SAMR_HPL9PrototypeId = "SAMR_HPL9";

function SAMR_HPL9Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53414d0000000000000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(17));
  _keyTuple[2] = bytes32(uint256(9));
  return _keyTuple;
}

function SAMR_HPL9Prototype(IStore store) {
  bytes32[] memory keys = SAMR_HPL9Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(8000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant SAMR_HPL10PrototypeId = "SAMR_HPL10";

function SAMR_HPL10Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](3);
  _keyTuple[0] = 0x53414d0000000000000000000000000000000000000000000000000000000000;
  _keyTuple[1] = bytes32(uint256(17));
  _keyTuple[2] = bytes32(uint256(10));
  return _keyTuple;
}

function SAMR_HPL10Prototype(IStore store) {
  bytes32[] memory keys = SAMR_HPL10Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ByLevelMaxResourceUpgrades._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ByLevelMaxResourceUpgrades.encode(10000000000000000000000);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant ShieldGeneratorPrototypeId = "ShieldGenerator";

function ShieldGeneratorKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = ShieldGeneratorPrototypeId;
  return _keyTuple;
}

function ShieldGeneratorLevelKeys(uint32 level) pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](2);

  _keyTuple[0] = ShieldGeneratorPrototypeId;
  _keyTuple[1] = bytes32(uint256(level));
  return _keyTuple;
}
function ShieldGeneratorPrototype(IStore store) {
  bytes32[] memory keys = ShieldGeneratorKeys();
  ResourceId[] memory tableIds = new ResourceId[](2);
  bytes[] memory staticData = new bytes[](2);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](2);
  bytes[] memory dynamicData = new bytes[](2);

  tableIds[0] = P_Blueprint._tableId;
  tableIds[1] = P_MaxLevel._tableId;

  int32[] memory p_blueprint_value = new int32[](32);
  p_blueprint_value[0] = 0;
  p_blueprint_value[1] = 0;
  p_blueprint_value[2] = 0;
  p_blueprint_value[3] = -1;
  p_blueprint_value[4] = 0;
  p_blueprint_value[5] = -2;
  p_blueprint_value[6] = 0;
  p_blueprint_value[7] = -3;
  p_blueprint_value[8] = -1;
  p_blueprint_value[9] = 0;
  p_blueprint_value[10] = -1;
  p_blueprint_value[11] = -1;
  p_blueprint_value[12] = -1;
  p_blueprint_value[13] = -2;
  p_blueprint_value[14] = -1;
  p_blueprint_value[15] = -3;
  p_blueprint_value[16] = -2;
  p_blueprint_value[17] = 0;
  p_blueprint_value[18] = -2;
  p_blueprint_value[19] = -1;
  p_blueprint_value[20] = -2;
  p_blueprint_value[21] = -2;
  p_blueprint_value[22] = -2;
  p_blueprint_value[23] = -3;
  p_blueprint_value[24] = -3;
  p_blueprint_value[25] = 0;
  p_blueprint_value[26] = -3;
  p_blueprint_value[27] = -1;
  p_blueprint_value[28] = -3;
  p_blueprint_value[29] = -2;
  p_blueprint_value[30] = -3;
  p_blueprint_value[31] = -3;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_Blueprint.encode(p_blueprint_value);
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_MaxLevel.encode(3);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);

  createShieldGeneratorLevel1(store);
  createShieldGeneratorLevel2(store);
  createShieldGeneratorLevel3(store);
}

/* ----------------------------- LEVEL 1 ----------------------------- */
function createShieldGeneratorLevel1(IStore store) {
  bytes32[] memory levelKeys = ShieldGeneratorLevelKeys(1);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(7);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 8;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 10;
  p_requiredresources__level_resources[3] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 1000000000000000000000;
  p_requiredresources__level_amounts[1] = 1000000000000000000000;
  p_requiredresources__level_amounts[2] = 1000000000000000000000;
  p_requiredresources__level_amounts[3] = 200000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](2);
  p_production__level_resources[0] = 19;
  p_production__level_resources[1] = 17;
  uint256[] memory p_production__level_amounts = new uint256[](2);
  p_production__level_amounts[0] = 5;
  p_production__level_amounts[1] = 8000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 2 ----------------------------- */
function createShieldGeneratorLevel2(IStore store) {
  bytes32[] memory levelKeys = ShieldGeneratorLevelKeys(2);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(11);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 4;
  p_requiredresources__level_resources[1] = 5;
  p_requiredresources__level_resources[2] = 7;
  p_requiredresources__level_resources[3] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 500000000000000000000;
  p_requiredresources__level_amounts[1] = 500000000000000000000;
  p_requiredresources__level_amounts[2] = 500000000000000000000;
  p_requiredresources__level_amounts[3] = 1100000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](2);
  p_production__level_resources[0] = 19;
  p_production__level_resources[1] = 17;
  uint256[] memory p_production__level_amounts = new uint256[](2);
  p_production__level_amounts[0] = 15;
  p_production__level_amounts[1] = 16000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 3 ----------------------------- */
function createShieldGeneratorLevel3(IStore store) {
  bytes32[] memory levelKeys = ShieldGeneratorLevelKeys(3);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(15);
  uint8[] memory p_requiredresources__level_resources = new uint8[](2);
  p_requiredresources__level_resources[0] = 6;
  p_requiredresources__level_resources[1] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](2);
  p_requiredresources__level_amounts[0] = 4000000000000000000000;
  p_requiredresources__level_amounts[1] = 1100000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](2);
  p_production__level_resources[0] = 19;
  p_production__level_resources[1] = 17;
  uint256[] memory p_production__level_amounts = new uint256[](2);
  p_production__level_amounts[0] = 30;
  p_production__level_amounts[1] = 24000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant VaultPrototypeId = "Vault";

function VaultKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = VaultPrototypeId;
  return _keyTuple;
}

function VaultLevelKeys(uint32 level) pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](2);

  _keyTuple[0] = VaultPrototypeId;
  _keyTuple[1] = bytes32(uint256(level));
  return _keyTuple;
}
function VaultPrototype(IStore store) {
  bytes32[] memory keys = VaultKeys();
  ResourceId[] memory tableIds = new ResourceId[](2);
  bytes[] memory staticData = new bytes[](2);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](2);
  bytes[] memory dynamicData = new bytes[](2);

  tableIds[0] = P_Blueprint._tableId;
  tableIds[1] = P_MaxLevel._tableId;

  int32[] memory p_blueprint_value = new int32[](18);
  p_blueprint_value[0] = 0;
  p_blueprint_value[1] = 0;
  p_blueprint_value[2] = 0;
  p_blueprint_value[3] = -1;
  p_blueprint_value[4] = 0;
  p_blueprint_value[5] = -2;
  p_blueprint_value[6] = -1;
  p_blueprint_value[7] = 0;
  p_blueprint_value[8] = -1;
  p_blueprint_value[9] = -1;
  p_blueprint_value[10] = -1;
  p_blueprint_value[11] = -2;
  p_blueprint_value[12] = -2;
  p_blueprint_value[13] = 0;
  p_blueprint_value[14] = -2;
  p_blueprint_value[15] = -1;
  p_blueprint_value[16] = -2;
  p_blueprint_value[17] = -2;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_Blueprint.encode(p_blueprint_value);
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_MaxLevel.encode(10);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);

  createVaultLevel1(store);
  createVaultLevel2(store);
  createVaultLevel3(store);
  createVaultLevel4(store);
  createVaultLevel5(store);
  createVaultLevel6(store);
  createVaultLevel7(store);
  createVaultLevel8(store);
  createVaultLevel9(store);
  createVaultLevel10(store);
}

/* ----------------------------- LEVEL 1 ----------------------------- */
function createVaultLevel1(IStore store) {
  bytes32[] memory levelKeys = VaultLevelKeys(1);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(7);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 2;
  p_requiredresources__level_resources[2] = 3;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 50000000000000000000;
  p_requiredresources__level_amounts[1] = 50000000000000000000;
  p_requiredresources__level_amounts[2] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 15;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 250000000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 2 ----------------------------- */
function createVaultLevel2(IStore store) {
  bytes32[] memory levelKeys = VaultLevelKeys(2);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(7);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 2;
  p_requiredresources__level_resources[2] = 3;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 100000000000000000000;
  p_requiredresources__level_amounts[1] = 100000000000000000000;
  p_requiredresources__level_amounts[2] = 100000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 15;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 500000000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 3 ----------------------------- */
function createVaultLevel3(IStore store) {
  bytes32[] memory levelKeys = VaultLevelKeys(3);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(8);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 2;
  p_requiredresources__level_resources[2] = 3;
  p_requiredresources__level_resources[3] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 250000000000000000000;
  p_requiredresources__level_amounts[1] = 250000000000000000000;
  p_requiredresources__level_amounts[2] = 250000000000000000000;
  p_requiredresources__level_amounts[3] = 25000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](1);
  p_production__level_resources[0] = 15;
  uint256[] memory p_production__level_amounts = new uint256[](1);
  p_production__level_amounts[0] = 750000000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 4 ----------------------------- */
function createVaultLevel4(IStore store) {
  bytes32[] memory levelKeys = VaultLevelKeys(4);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(9);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 8;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 10;
  p_requiredresources__level_resources[3] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 200000000000000000000;
  p_requiredresources__level_amounts[1] = 200000000000000000000;
  p_requiredresources__level_amounts[2] = 200000000000000000000;
  p_requiredresources__level_amounts[3] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](2);
  p_production__level_resources[0] = 15;
  p_production__level_resources[1] = 16;
  uint256[] memory p_production__level_amounts = new uint256[](2);
  p_production__level_amounts[0] = 2000000000000000000000;
  p_production__level_amounts[1] = 500000000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 5 ----------------------------- */
function createVaultLevel5(IStore store) {
  bytes32[] memory levelKeys = VaultLevelKeys(5);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(10);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 8;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 10;
  p_requiredresources__level_resources[3] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 500000000000000000000;
  p_requiredresources__level_amounts[1] = 500000000000000000000;
  p_requiredresources__level_amounts[2] = 500000000000000000000;
  p_requiredresources__level_amounts[3] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](2);
  p_production__level_resources[0] = 15;
  p_production__level_resources[1] = 16;
  uint256[] memory p_production__level_amounts = new uint256[](2);
  p_production__level_amounts[0] = 3000000000000000000000;
  p_production__level_amounts[1] = 1000000000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 6 ----------------------------- */
function createVaultLevel6(IStore store) {
  bytes32[] memory levelKeys = VaultLevelKeys(6);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(11);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 8;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 10;
  p_requiredresources__level_resources[3] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 1000000000000000000000;
  p_requiredresources__level_amounts[1] = 1000000000000000000000;
  p_requiredresources__level_amounts[2] = 1000000000000000000000;
  p_requiredresources__level_amounts[3] = 50000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](2);
  p_production__level_resources[0] = 15;
  p_production__level_resources[1] = 16;
  uint256[] memory p_production__level_amounts = new uint256[](2);
  p_production__level_amounts[0] = 4000000000000000000000;
  p_production__level_amounts[1] = 1500000000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 7 ----------------------------- */
function createVaultLevel7(IStore store) {
  bytes32[] memory levelKeys = VaultLevelKeys(7);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(12);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 8;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 10;
  p_requiredresources__level_resources[3] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 2500000000000000000000;
  p_requiredresources__level_amounts[1] = 2500000000000000000000;
  p_requiredresources__level_amounts[2] = 2500000000000000000000;
  p_requiredresources__level_amounts[3] = 100000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](2);
  p_production__level_resources[0] = 15;
  p_production__level_resources[1] = 16;
  uint256[] memory p_production__level_amounts = new uint256[](2);
  p_production__level_amounts[0] = 5000000000000000000000;
  p_production__level_amounts[1] = 2000000000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 8 ----------------------------- */
function createVaultLevel8(IStore store) {
  bytes32[] memory levelKeys = VaultLevelKeys(8);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(13);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 8;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 10;
  p_requiredresources__level_resources[3] = 6;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 5000000000000000000000;
  p_requiredresources__level_amounts[1] = 5000000000000000000000;
  p_requiredresources__level_amounts[2] = 5000000000000000000000;
  p_requiredresources__level_amounts[3] = 100000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](2);
  p_production__level_resources[0] = 15;
  p_production__level_resources[1] = 16;
  uint256[] memory p_production__level_amounts = new uint256[](2);
  p_production__level_amounts[0] = 10000000000000000000000;
  p_production__level_amounts[1] = 2500000000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 9 ----------------------------- */
function createVaultLevel9(IStore store) {
  bytes32[] memory levelKeys = VaultLevelKeys(9);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(14);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 8;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 10;
  p_requiredresources__level_resources[3] = 6;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 8000000000000000000000;
  p_requiredresources__level_amounts[1] = 8000000000000000000000;
  p_requiredresources__level_amounts[2] = 8000000000000000000000;
  p_requiredresources__level_amounts[3] = 500000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](2);
  p_production__level_resources[0] = 15;
  p_production__level_resources[1] = 16;
  uint256[] memory p_production__level_amounts = new uint256[](2);
  p_production__level_amounts[0] = 15000000000000000000000;
  p_production__level_amounts[1] = 3000000000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 10 ----------------------------- */
function createVaultLevel10(IStore store) {
  bytes32[] memory levelKeys = VaultLevelKeys(10);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;
  tableIds[2] = P_Production._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(15);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 8;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 10;
  p_requiredresources__level_resources[3] = 6;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 15000000000000000000000;
  p_requiredresources__level_amounts[1] = 15000000000000000000000;
  p_requiredresources__level_amounts[2] = 15000000000000000000000;
  p_requiredresources__level_amounts[3] = 1000000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  uint8[] memory p_production__level_resources = new uint8[](2);
  p_production__level_resources[0] = 15;
  p_production__level_resources[1] = 16;
  uint256[] memory p_production__level_amounts = new uint256[](2);
  p_production__level_amounts[0] = 24999999999999997902848;
  p_production__level_amounts[1] = 5000000000000000000000;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Production.encode(
    p_production__level_resources,
    p_production__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MarketPrototypeId = "Market";

function MarketKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = MarketPrototypeId;
  return _keyTuple;
}

function MarketLevelKeys(uint32 level) pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](2);

  _keyTuple[0] = MarketPrototypeId;
  _keyTuple[1] = bytes32(uint256(level));
  return _keyTuple;
}
function MarketPrototype(IStore store) {
  bytes32[] memory keys = MarketKeys();
  ResourceId[] memory tableIds = new ResourceId[](2);
  bytes[] memory staticData = new bytes[](2);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](2);
  bytes[] memory dynamicData = new bytes[](2);

  tableIds[0] = P_Blueprint._tableId;
  tableIds[1] = P_MaxLevel._tableId;

  int32[] memory p_blueprint_value = new int32[](18);
  p_blueprint_value[0] = 0;
  p_blueprint_value[1] = 0;
  p_blueprint_value[2] = 0;
  p_blueprint_value[3] = -1;
  p_blueprint_value[4] = 0;
  p_blueprint_value[5] = -2;
  p_blueprint_value[6] = -1;
  p_blueprint_value[7] = 0;
  p_blueprint_value[8] = -1;
  p_blueprint_value[9] = -1;
  p_blueprint_value[10] = -1;
  p_blueprint_value[11] = -2;
  p_blueprint_value[12] = -2;
  p_blueprint_value[13] = 0;
  p_blueprint_value[14] = -2;
  p_blueprint_value[15] = -1;
  p_blueprint_value[16] = -2;
  p_blueprint_value[17] = -2;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_Blueprint.encode(p_blueprint_value);
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_MaxLevel.encode(1);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);

  createMarketLevel1(store);
}

/* ----------------------------- LEVEL 1 ----------------------------- */
function createMarketLevel1(IStore store) {
  bytes32[] memory levelKeys = MarketLevelKeys(1);
  ResourceId[] memory tableIds = new ResourceId[](2);
  bytes[] memory staticData = new bytes[](2);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](2);
  bytes[] memory dynamicData = new bytes[](2);

  tableIds[0] = P_RequiredBaseLevel._tableId;
  tableIds[1] = P_RequiredResources._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredBaseLevel.encode(6);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 8;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 10;
  p_requiredresources__level_resources[3] = 11;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 100000000000000000000;
  p_requiredresources__level_amounts[1] = 100000000000000000000;
  p_requiredresources__level_amounts[2] = 100000000000000000000;
  p_requiredresources__level_amounts[3] = 100000000000000000000;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant IsUtilityPrototypeId = "IsUtility";

function IsUtilityKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](0);

  return _keyTuple;
}

function IsUtilityLevelKeys(uint32 level) pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);

  _keyTuple[0] = bytes32(uint256(level));
  return _keyTuple;
}
function IsUtilityPrototype(IStore store) {
  createIsUtilityLevel11(store);
  createIsUtilityLevel12(store);
  createIsUtilityLevel13(store);
  createIsUtilityLevel14(store);
  createIsUtilityLevel15(store);
  createIsUtilityLevel16(store);
  createIsUtilityLevel19(store);
}

/* ----------------------------- LEVEL 11 ----------------------------- */
function createIsUtilityLevel11(IStore store) {
  bytes32[] memory levelKeys = IsUtilityLevelKeys(11);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_IsUtility._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_IsUtility.encode(true);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 12 ----------------------------- */
function createIsUtilityLevel12(IStore store) {
  bytes32[] memory levelKeys = IsUtilityLevelKeys(12);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_IsUtility._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_IsUtility.encode(true);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 13 ----------------------------- */
function createIsUtilityLevel13(IStore store) {
  bytes32[] memory levelKeys = IsUtilityLevelKeys(13);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_IsUtility._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_IsUtility.encode(true);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 14 ----------------------------- */
function createIsUtilityLevel14(IStore store) {
  bytes32[] memory levelKeys = IsUtilityLevelKeys(14);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_IsUtility._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_IsUtility.encode(true);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 15 ----------------------------- */
function createIsUtilityLevel15(IStore store) {
  bytes32[] memory levelKeys = IsUtilityLevelKeys(15);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_IsUtility._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_IsUtility.encode(true);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 16 ----------------------------- */
function createIsUtilityLevel16(IStore store) {
  bytes32[] memory levelKeys = IsUtilityLevelKeys(16);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_IsUtility._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_IsUtility.encode(true);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 19 ----------------------------- */
function createIsUtilityLevel19(IStore store) {
  bytes32[] memory levelKeys = IsUtilityLevelKeys(19);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_IsUtility._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_IsUtility.encode(true);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant RecoverablesPrototypeId = "Recoverables";

function RecoverablesKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](0);

  return _keyTuple;
}

function RecoverablesLevelKeys(uint32 level) pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);

  _keyTuple[0] = bytes32(uint256(level));
  return _keyTuple;
}
function RecoverablesPrototype(IStore store) {
  createRecoverablesLevel17(store);
  createRecoverablesLevel18(store);
}

/* ----------------------------- LEVEL 17 ----------------------------- */
function createRecoverablesLevel17(IStore store) {
  bytes32[] memory levelKeys = RecoverablesLevelKeys(17);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_IsRecoverable._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_IsRecoverable.encode(true);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 18 ----------------------------- */
function createRecoverablesLevel18(IStore store) {
  bytes32[] memory levelKeys = RecoverablesLevelKeys(18);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_IsRecoverable._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_IsRecoverable.encode(true);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant IsAdvancedResourcePrototypeId = "IsAdvancedResource";

function IsAdvancedResourceKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](0);

  return _keyTuple;
}

function IsAdvancedResourceLevelKeys(uint32 level) pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);

  _keyTuple[0] = bytes32(uint256(level));
  return _keyTuple;
}
function IsAdvancedResourcePrototype(IStore store) {
  createIsAdvancedResourceLevel1(store);
  createIsAdvancedResourceLevel2(store);
  createIsAdvancedResourceLevel3(store);
  createIsAdvancedResourceLevel4(store);
  createIsAdvancedResourceLevel5(store);
  createIsAdvancedResourceLevel6(store);
  createIsAdvancedResourceLevel7(store);
  createIsAdvancedResourceLevel8(store);
  createIsAdvancedResourceLevel9(store);
  createIsAdvancedResourceLevel10(store);
}

/* ----------------------------- LEVEL 1 ----------------------------- */
function createIsAdvancedResourceLevel1(IStore store) {
  bytes32[] memory levelKeys = IsAdvancedResourceLevelKeys(1);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_IsResource._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_IsResource.encode(true, false);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 2 ----------------------------- */
function createIsAdvancedResourceLevel2(IStore store) {
  bytes32[] memory levelKeys = IsAdvancedResourceLevelKeys(2);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_IsResource._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_IsResource.encode(true, false);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 3 ----------------------------- */
function createIsAdvancedResourceLevel3(IStore store) {
  bytes32[] memory levelKeys = IsAdvancedResourceLevelKeys(3);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_IsResource._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_IsResource.encode(true, false);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 4 ----------------------------- */
function createIsAdvancedResourceLevel4(IStore store) {
  bytes32[] memory levelKeys = IsAdvancedResourceLevelKeys(4);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_IsResource._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_IsResource.encode(true, true);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 5 ----------------------------- */
function createIsAdvancedResourceLevel5(IStore store) {
  bytes32[] memory levelKeys = IsAdvancedResourceLevelKeys(5);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_IsResource._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_IsResource.encode(true, true);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 6 ----------------------------- */
function createIsAdvancedResourceLevel6(IStore store) {
  bytes32[] memory levelKeys = IsAdvancedResourceLevelKeys(6);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_IsResource._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_IsResource.encode(true, true);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 7 ----------------------------- */
function createIsAdvancedResourceLevel7(IStore store) {
  bytes32[] memory levelKeys = IsAdvancedResourceLevelKeys(7);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_IsResource._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_IsResource.encode(true, true);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 8 ----------------------------- */
function createIsAdvancedResourceLevel8(IStore store) {
  bytes32[] memory levelKeys = IsAdvancedResourceLevelKeys(8);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_IsResource._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_IsResource.encode(true, false);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 9 ----------------------------- */
function createIsAdvancedResourceLevel9(IStore store) {
  bytes32[] memory levelKeys = IsAdvancedResourceLevelKeys(9);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_IsResource._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_IsResource.encode(true, false);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 10 ----------------------------- */
function createIsAdvancedResourceLevel10(IStore store) {
  bytes32[] memory levelKeys = IsAdvancedResourceLevelKeys(10);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_IsResource._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_IsResource.encode(true, false);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant ColonySlotsConfigPrototypeId = "ColonySlotsConfig";

function ColonySlotsConfigKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](0);

  return _keyTuple;
}

function ColonySlotsConfigPrototype(IStore store) {
  bytes32[] memory keys = ColonySlotsConfigKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ColonySlotsConfig._tableId;

  uint8[] memory p_colonyslotsconfig_resources = new uint8[](3);
  p_colonyslotsconfig_resources[0] = 8;
  p_colonyslotsconfig_resources[1] = 9;
  p_colonyslotsconfig_resources[2] = 10;
  uint256[] memory p_colonyslotsconfig_amounts = new uint256[](3);
  p_colonyslotsconfig_amounts[0] = 1000000000000000000000;
  p_colonyslotsconfig_amounts[1] = 1000000000000000000000;
  p_colonyslotsconfig_amounts[2] = 1000000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ColonySlotsConfig.encode(
    3,
    p_colonyslotsconfig_resources,
    p_colonyslotsconfig_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant UnitPrototypeId = "Unit";

function UnitKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = UnitPrototypeId;
  return _keyTuple;
}

function UnitLevelKeys(uint32 level) pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](2);

  _keyTuple[0] = UnitPrototypeId;
  _keyTuple[1] = bytes32(uint256(level));
  return _keyTuple;
}
function UnitPrototype(IStore store) {
  createUnitLevel0(store);
  createUnitLevel1(store);
  createUnitLevel2(store);
  createUnitLevel3(store);
  createUnitLevel4(store);
  createUnitLevel5(store);
  createUnitLevel6(store);
  createUnitLevel7(store);
  createUnitLevel8(store);
  createUnitLevel9(store);
  createUnitLevel10(store);
}

/* ----------------------------- LEVEL 0 ----------------------------- */
function createUnitLevel0(IStore store) {
  bytes32[] memory levelKeys = UnitLevelKeys(0);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x4e554c4c00000000000000000000000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 1 ----------------------------- */
function createUnitLevel1(IStore store) {
  bytes32[] memory levelKeys = UnitLevelKeys(1);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x416567697344726f6e6500000000000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 2 ----------------------------- */
function createUnitLevel2(IStore store) {
  bytes32[] memory levelKeys = UnitLevelKeys(2);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x416e76696c44726f6e6500000000000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 3 ----------------------------- */
function createUnitLevel3(IStore store) {
  bytes32[] memory levelKeys = UnitLevelKeys(3);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x5374696e67657244726f6e650000000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 4 ----------------------------- */
function createUnitLevel4(IStore store) {
  bytes32[] memory levelKeys = UnitLevelKeys(4);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x48616d6d657244726f6e65000000000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 5 ----------------------------- */
function createUnitLevel5(IStore store) {
  bytes32[] memory levelKeys = UnitLevelKeys(5);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x4d696e7574656d616e4d6172696e650000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 6 ----------------------------- */
function createUnitLevel6(IStore store) {
  bytes32[] memory levelKeys = UnitLevelKeys(6);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x54726964656e744d6172696e6500000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 7 ----------------------------- */
function createUnitLevel7(IStore store) {
  bytes32[] memory levelKeys = UnitLevelKeys(7);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x4c696768746e696e674372616674000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 8 ----------------------------- */
function createUnitLevel8(IStore store) {
  bytes32[] memory levelKeys = UnitLevelKeys(8);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x436f6c6f6e795368697000000000000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 9 ----------------------------- */
function createUnitLevel9(IStore store) {
  bytes32[] memory levelKeys = UnitLevelKeys(9);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x44726f6964000000000000000000000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 10 ----------------------------- */
function createUnitLevel10(IStore store) {
  bytes32[] memory levelKeys = UnitLevelKeys(10);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x4c454e4754480000000000000000000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant FleetStancePrototypeId = "FleetStance";

function FleetStanceKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = FleetStancePrototypeId;
  return _keyTuple;
}

function FleetStanceLevelKeys(uint32 level) pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](2);

  _keyTuple[0] = FleetStancePrototypeId;
  _keyTuple[1] = bytes32(uint256(level));
  return _keyTuple;
}
function FleetStancePrototype(IStore store) {
  createFleetStanceLevel0(store);
  createFleetStanceLevel1(store);
  createFleetStanceLevel2(store);
  createFleetStanceLevel3(store);
  createFleetStanceLevel4(store);
}

/* ----------------------------- LEVEL 0 ----------------------------- */
function createFleetStanceLevel0(IStore store) {
  bytes32[] memory levelKeys = FleetStanceLevelKeys(0);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x4e554c4c00000000000000000000000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 1 ----------------------------- */
function createFleetStanceLevel1(IStore store) {
  bytes32[] memory levelKeys = FleetStanceLevelKeys(1);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x466f6c6c6f770000000000000000000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 2 ----------------------------- */
function createFleetStanceLevel2(IStore store) {
  bytes32[] memory levelKeys = FleetStanceLevelKeys(2);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x446566656e640000000000000000000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 3 ----------------------------- */
function createFleetStanceLevel3(IStore store) {
  bytes32[] memory levelKeys = FleetStanceLevelKeys(3);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x426c6f636b000000000000000000000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 4 ----------------------------- */
function createFleetStanceLevel4(IStore store) {
  bytes32[] memory levelKeys = FleetStanceLevelKeys(4);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x4c454e4754480000000000000000000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant LightningCraftPrototypeId = "LightningCraft";

function LightningCraftKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = LightningCraftPrototypeId;
  return _keyTuple;
}

function LightningCraftLevelKeys(uint32 level) pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](2);

  _keyTuple[0] = LightningCraftPrototypeId;
  _keyTuple[1] = bytes32(uint256(level));
  return _keyTuple;
}
function LightningCraftPrototype(IStore store) {
  bytes32[] memory keys = LightningCraftKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_MaxLevel._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_MaxLevel.encode(5);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);

  createLightningCraftLevel0(store);
  createLightningCraftLevel1(store);
  createLightningCraftLevel2(store);
  createLightningCraftLevel3(store);
  createLightningCraftLevel4(store);
  createLightningCraftLevel5(store);
}

/* ----------------------------- LEVEL 0 ----------------------------- */
function createLightningCraftLevel0(IStore store) {
  bytes32[] memory levelKeys = LightningCraftLevelKeys(0);
  ResourceId[] memory tableIds = new ResourceId[](2);
  bytes[] memory staticData = new bytes[](2);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](2);
  bytes[] memory dynamicData = new bytes[](2);

  tableIds[0] = P_RequiredResources._tableId;
  tableIds[1] = P_Unit._tableId;

  uint8[] memory p_requiredresources__level_resources = new uint8[](5);
  p_requiredresources__level_resources[0] = 4;
  p_requiredresources__level_resources[1] = 7;
  p_requiredresources__level_resources[2] = 5;
  p_requiredresources__level_resources[3] = 6;
  p_requiredresources__level_resources[4] = 12;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](5);
  p_requiredresources__level_amounts[0] = 10000000000000000000;
  p_requiredresources__level_amounts[1] = 10000000000000000000;
  p_requiredresources__level_amounts[2] = 10000000000000000000;
  p_requiredresources__level_amounts[3] = 10000000000000000000;
  p_requiredresources__level_amounts[4] = 1;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_Unit.encode(
    10000000000000000000,
    10000000000000000000,
    600,
    100000000000000000000,
    1800,
    10000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 1 ----------------------------- */
function createLightningCraftLevel1(IStore store) {
  bytes32[] memory levelKeys = LightningCraftLevelKeys(1);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredUpgradeResources._tableId;
  tableIds[1] = P_RequiredBaseLevel._tableId;
  tableIds[2] = P_RequiredResources._tableId;
  tableIds[3] = P_Unit._tableId;

  uint8[] memory p_requiredupgraderesources__level_resources = new uint8[](1);
  p_requiredupgraderesources__level_resources[0] = 6;
  uint256[] memory p_requiredupgraderesources__level_amounts = new uint256[](1);
  p_requiredupgraderesources__level_amounts[0] = 200000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredUpgradeResources.encode(
    p_requiredupgraderesources__level_resources,
    p_requiredupgraderesources__level_amounts
  );
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredBaseLevel.encode(11);
  uint8[] memory p_requiredresources__level_resources = new uint8[](5);
  p_requiredresources__level_resources[0] = 4;
  p_requiredresources__level_resources[1] = 7;
  p_requiredresources__level_resources[2] = 5;
  p_requiredresources__level_resources[3] = 6;
  p_requiredresources__level_resources[4] = 12;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](5);
  p_requiredresources__level_amounts[0] = 11000000000000000000;
  p_requiredresources__level_amounts[1] = 11000000000000000000;
  p_requiredresources__level_amounts[2] = 11000000000000000000;
  p_requiredresources__level_amounts[3] = 11000000000000000000;
  p_requiredresources__level_amounts[4] = 1;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Unit.encode(
    11000000000000000000,
    11000000000000000000,
    720,
    120000000000000000000,
    1800,
    11000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 2 ----------------------------- */
function createLightningCraftLevel2(IStore store) {
  bytes32[] memory levelKeys = LightningCraftLevelKeys(2);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredUpgradeResources._tableId;
  tableIds[1] = P_RequiredBaseLevel._tableId;
  tableIds[2] = P_RequiredResources._tableId;
  tableIds[3] = P_Unit._tableId;

  uint8[] memory p_requiredupgraderesources__level_resources = new uint8[](1);
  p_requiredupgraderesources__level_resources[0] = 6;
  uint256[] memory p_requiredupgraderesources__level_amounts = new uint256[](1);
  p_requiredupgraderesources__level_amounts[0] = 600000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredUpgradeResources.encode(
    p_requiredupgraderesources__level_resources,
    p_requiredupgraderesources__level_amounts
  );
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredBaseLevel.encode(12);
  uint8[] memory p_requiredresources__level_resources = new uint8[](5);
  p_requiredresources__level_resources[0] = 4;
  p_requiredresources__level_resources[1] = 7;
  p_requiredresources__level_resources[2] = 5;
  p_requiredresources__level_resources[3] = 6;
  p_requiredresources__level_resources[4] = 12;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](5);
  p_requiredresources__level_amounts[0] = 12000000000000000000;
  p_requiredresources__level_amounts[1] = 12000000000000000000;
  p_requiredresources__level_amounts[2] = 12000000000000000000;
  p_requiredresources__level_amounts[3] = 12000000000000000000;
  p_requiredresources__level_amounts[4] = 1;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Unit.encode(
    12000000000000000000,
    12000000000000000000,
    840,
    140000000000000000000,
    1800,
    12000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 3 ----------------------------- */
function createLightningCraftLevel3(IStore store) {
  bytes32[] memory levelKeys = LightningCraftLevelKeys(3);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredUpgradeResources._tableId;
  tableIds[1] = P_RequiredBaseLevel._tableId;
  tableIds[2] = P_RequiredResources._tableId;
  tableIds[3] = P_Unit._tableId;

  uint8[] memory p_requiredupgraderesources__level_resources = new uint8[](1);
  p_requiredupgraderesources__level_resources[0] = 6;
  uint256[] memory p_requiredupgraderesources__level_amounts = new uint256[](1);
  p_requiredupgraderesources__level_amounts[0] = 2000000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredUpgradeResources.encode(
    p_requiredupgraderesources__level_resources,
    p_requiredupgraderesources__level_amounts
  );
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredBaseLevel.encode(13);
  uint8[] memory p_requiredresources__level_resources = new uint8[](5);
  p_requiredresources__level_resources[0] = 4;
  p_requiredresources__level_resources[1] = 7;
  p_requiredresources__level_resources[2] = 5;
  p_requiredresources__level_resources[3] = 6;
  p_requiredresources__level_resources[4] = 12;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](5);
  p_requiredresources__level_amounts[0] = 13000000000000000000;
  p_requiredresources__level_amounts[1] = 13000000000000000000;
  p_requiredresources__level_amounts[2] = 13000000000000000000;
  p_requiredresources__level_amounts[3] = 13000000000000000000;
  p_requiredresources__level_amounts[4] = 1;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Unit.encode(
    13000000000000000000,
    13000000000000000000,
    960,
    160000000000000000000,
    1800,
    13000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 4 ----------------------------- */
function createLightningCraftLevel4(IStore store) {
  bytes32[] memory levelKeys = LightningCraftLevelKeys(4);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredUpgradeResources._tableId;
  tableIds[1] = P_RequiredBaseLevel._tableId;
  tableIds[2] = P_RequiredResources._tableId;
  tableIds[3] = P_Unit._tableId;

  uint8[] memory p_requiredupgraderesources__level_resources = new uint8[](1);
  p_requiredupgraderesources__level_resources[0] = 6;
  uint256[] memory p_requiredupgraderesources__level_amounts = new uint256[](1);
  p_requiredupgraderesources__level_amounts[0] = 4000000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredUpgradeResources.encode(
    p_requiredupgraderesources__level_resources,
    p_requiredupgraderesources__level_amounts
  );
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredBaseLevel.encode(14);
  uint8[] memory p_requiredresources__level_resources = new uint8[](5);
  p_requiredresources__level_resources[0] = 4;
  p_requiredresources__level_resources[1] = 7;
  p_requiredresources__level_resources[2] = 5;
  p_requiredresources__level_resources[3] = 6;
  p_requiredresources__level_resources[4] = 12;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](5);
  p_requiredresources__level_amounts[0] = 14000000000000000000;
  p_requiredresources__level_amounts[1] = 14000000000000000000;
  p_requiredresources__level_amounts[2] = 14000000000000000000;
  p_requiredresources__level_amounts[3] = 14000000000000000000;
  p_requiredresources__level_amounts[4] = 1;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Unit.encode(
    14000000000000000000,
    14000000000000000000,
    1080,
    180000000000000000000,
    1800,
    14000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 5 ----------------------------- */
function createLightningCraftLevel5(IStore store) {
  bytes32[] memory levelKeys = LightningCraftLevelKeys(5);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredUpgradeResources._tableId;
  tableIds[1] = P_RequiredBaseLevel._tableId;
  tableIds[2] = P_RequiredResources._tableId;
  tableIds[3] = P_Unit._tableId;

  uint8[] memory p_requiredupgraderesources__level_resources = new uint8[](1);
  p_requiredupgraderesources__level_resources[0] = 6;
  uint256[] memory p_requiredupgraderesources__level_amounts = new uint256[](1);
  p_requiredupgraderesources__level_amounts[0] = 10000000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredUpgradeResources.encode(
    p_requiredupgraderesources__level_resources,
    p_requiredupgraderesources__level_amounts
  );
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredBaseLevel.encode(15);
  uint8[] memory p_requiredresources__level_resources = new uint8[](5);
  p_requiredresources__level_resources[0] = 4;
  p_requiredresources__level_resources[1] = 7;
  p_requiredresources__level_resources[2] = 5;
  p_requiredresources__level_resources[3] = 6;
  p_requiredresources__level_resources[4] = 12;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](5);
  p_requiredresources__level_amounts[0] = 15000000000000000000;
  p_requiredresources__level_amounts[1] = 15000000000000000000;
  p_requiredresources__level_amounts[2] = 15000000000000000000;
  p_requiredresources__level_amounts[3] = 15000000000000000000;
  p_requiredresources__level_amounts[4] = 1;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Unit.encode(
    15000000000000000000,
    15000000000000000000,
    1200,
    200000000000000000000,
    1800,
    15000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant AnvilDronePrototypeId = "AnvilDrone";

function AnvilDroneKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = AnvilDronePrototypeId;
  return _keyTuple;
}

function AnvilDroneLevelKeys(uint32 level) pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](2);

  _keyTuple[0] = AnvilDronePrototypeId;
  _keyTuple[1] = bytes32(uint256(level));
  return _keyTuple;
}
function AnvilDronePrototype(IStore store) {
  bytes32[] memory keys = AnvilDroneKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_MaxLevel._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_MaxLevel.encode(5);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);

  createAnvilDroneLevel0(store);
  createAnvilDroneLevel1(store);
  createAnvilDroneLevel2(store);
  createAnvilDroneLevel3(store);
  createAnvilDroneLevel4(store);
  createAnvilDroneLevel5(store);
}

/* ----------------------------- LEVEL 0 ----------------------------- */
function createAnvilDroneLevel0(IStore store) {
  bytes32[] memory levelKeys = AnvilDroneLevelKeys(0);
  ResourceId[] memory tableIds = new ResourceId[](2);
  bytes[] memory staticData = new bytes[](2);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](2);
  bytes[] memory dynamicData = new bytes[](2);

  tableIds[0] = P_RequiredResources._tableId;
  tableIds[1] = P_Unit._tableId;

  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 8;
  p_requiredresources__level_resources[2] = 12;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 25000000000000000000;
  p_requiredresources__level_amounts[1] = 50000000000000000000;
  p_requiredresources__level_amounts[2] = 2;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_Unit.encode(
    200000000000000000000,
    200000000000000000000,
    50,
    60000000000000000000,
    600,
    250000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 1 ----------------------------- */
function createAnvilDroneLevel1(IStore store) {
  bytes32[] memory levelKeys = AnvilDroneLevelKeys(1);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredUpgradeResources._tableId;
  tableIds[1] = P_RequiredBaseLevel._tableId;
  tableIds[2] = P_RequiredResources._tableId;
  tableIds[3] = P_Unit._tableId;

  uint8[] memory p_requiredupgraderesources__level_resources = new uint8[](1);
  p_requiredupgraderesources__level_resources[0] = 4;
  uint256[] memory p_requiredupgraderesources__level_amounts = new uint256[](1);
  p_requiredupgraderesources__level_amounts[0] = 200000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredUpgradeResources.encode(
    p_requiredupgraderesources__level_resources,
    p_requiredupgraderesources__level_amounts
  );
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredBaseLevel.encode(6);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 8;
  p_requiredresources__level_resources[2] = 12;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 25000000000000000000;
  p_requiredresources__level_amounts[1] = 50000000000000000000;
  p_requiredresources__level_amounts[2] = 2;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Unit.encode(
    210000000000000000000,
    225000000000000000000,
    60,
    64000000000000000000,
    580,
    280000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 2 ----------------------------- */
function createAnvilDroneLevel2(IStore store) {
  bytes32[] memory levelKeys = AnvilDroneLevelKeys(2);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredUpgradeResources._tableId;
  tableIds[1] = P_RequiredBaseLevel._tableId;
  tableIds[2] = P_RequiredResources._tableId;
  tableIds[3] = P_Unit._tableId;

  uint8[] memory p_requiredupgraderesources__level_resources = new uint8[](1);
  p_requiredupgraderesources__level_resources[0] = 4;
  uint256[] memory p_requiredupgraderesources__level_amounts = new uint256[](1);
  p_requiredupgraderesources__level_amounts[0] = 600000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredUpgradeResources.encode(
    p_requiredupgraderesources__level_resources,
    p_requiredupgraderesources__level_amounts
  );
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredBaseLevel.encode(7);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 8;
  p_requiredresources__level_resources[2] = 12;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 25000000000000000000;
  p_requiredresources__level_amounts[1] = 50000000000000000000;
  p_requiredresources__level_amounts[2] = 2;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Unit.encode(
    220000000000000000000,
    250000000000000000000,
    70,
    68000000000000000000,
    560,
    310000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 3 ----------------------------- */
function createAnvilDroneLevel3(IStore store) {
  bytes32[] memory levelKeys = AnvilDroneLevelKeys(3);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredUpgradeResources._tableId;
  tableIds[1] = P_RequiredBaseLevel._tableId;
  tableIds[2] = P_RequiredResources._tableId;
  tableIds[3] = P_Unit._tableId;

  uint8[] memory p_requiredupgraderesources__level_resources = new uint8[](1);
  p_requiredupgraderesources__level_resources[0] = 4;
  uint256[] memory p_requiredupgraderesources__level_amounts = new uint256[](1);
  p_requiredupgraderesources__level_amounts[0] = 2000000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredUpgradeResources.encode(
    p_requiredupgraderesources__level_resources,
    p_requiredupgraderesources__level_amounts
  );
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredBaseLevel.encode(8);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 8;
  p_requiredresources__level_resources[2] = 12;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 25000000000000000000;
  p_requiredresources__level_amounts[1] = 50000000000000000000;
  p_requiredresources__level_amounts[2] = 2;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Unit.encode(
    230000000000000000000,
    275000000000000000000,
    80,
    72000000000000000000,
    540,
    340000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 4 ----------------------------- */
function createAnvilDroneLevel4(IStore store) {
  bytes32[] memory levelKeys = AnvilDroneLevelKeys(4);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredUpgradeResources._tableId;
  tableIds[1] = P_RequiredBaseLevel._tableId;
  tableIds[2] = P_RequiredResources._tableId;
  tableIds[3] = P_Unit._tableId;

  uint8[] memory p_requiredupgraderesources__level_resources = new uint8[](1);
  p_requiredupgraderesources__level_resources[0] = 4;
  uint256[] memory p_requiredupgraderesources__level_amounts = new uint256[](1);
  p_requiredupgraderesources__level_amounts[0] = 4000000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredUpgradeResources.encode(
    p_requiredupgraderesources__level_resources,
    p_requiredupgraderesources__level_amounts
  );
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredBaseLevel.encode(10);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 8;
  p_requiredresources__level_resources[2] = 12;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 25000000000000000000;
  p_requiredresources__level_amounts[1] = 50000000000000000000;
  p_requiredresources__level_amounts[2] = 2;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Unit.encode(
    240000000000000000000,
    300000000000000000000,
    90,
    76000000000000000000,
    520,
    370000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 5 ----------------------------- */
function createAnvilDroneLevel5(IStore store) {
  bytes32[] memory levelKeys = AnvilDroneLevelKeys(5);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredUpgradeResources._tableId;
  tableIds[1] = P_RequiredBaseLevel._tableId;
  tableIds[2] = P_RequiredResources._tableId;
  tableIds[3] = P_Unit._tableId;

  uint8[] memory p_requiredupgraderesources__level_resources = new uint8[](1);
  p_requiredupgraderesources__level_resources[0] = 4;
  uint256[] memory p_requiredupgraderesources__level_amounts = new uint256[](1);
  p_requiredupgraderesources__level_amounts[0] = 10000000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredUpgradeResources.encode(
    p_requiredupgraderesources__level_resources,
    p_requiredupgraderesources__level_amounts
  );
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredBaseLevel.encode(15);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 8;
  p_requiredresources__level_resources[2] = 12;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 25000000000000000000;
  p_requiredresources__level_amounts[1] = 50000000000000000000;
  p_requiredresources__level_amounts[2] = 2;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Unit.encode(
    250000000000000000000,
    350000000000000000000,
    100,
    80000000000000000000,
    500,
    400000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant AegisDronePrototypeId = "AegisDrone";

function AegisDroneKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = AegisDronePrototypeId;
  return _keyTuple;
}

function AegisDroneLevelKeys(uint32 level) pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](2);

  _keyTuple[0] = AegisDronePrototypeId;
  _keyTuple[1] = bytes32(uint256(level));
  return _keyTuple;
}
function AegisDronePrototype(IStore store) {
  bytes32[] memory keys = AegisDroneKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_MaxLevel._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_MaxLevel.encode(5);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);

  createAegisDroneLevel0(store);
  createAegisDroneLevel1(store);
  createAegisDroneLevel2(store);
  createAegisDroneLevel3(store);
  createAegisDroneLevel4(store);
  createAegisDroneLevel5(store);
}

/* ----------------------------- LEVEL 0 ----------------------------- */
function createAegisDroneLevel0(IStore store) {
  bytes32[] memory levelKeys = AegisDroneLevelKeys(0);
  ResourceId[] memory tableIds = new ResourceId[](2);
  bytes[] memory staticData = new bytes[](2);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](2);
  bytes[] memory dynamicData = new bytes[](2);

  tableIds[0] = P_RequiredResources._tableId;
  tableIds[1] = P_Unit._tableId;

  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 8;
  p_requiredresources__level_resources[2] = 4;
  p_requiredresources__level_resources[3] = 12;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 100000000000000000000;
  p_requiredresources__level_amounts[1] = 100000000000000000000;
  p_requiredresources__level_amounts[2] = 20000000000000000000;
  p_requiredresources__level_amounts[3] = 3;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_Unit.encode(
    100000000000000000000,
    500000000000000000000,
    50,
    30000000000000000000,
    1800,
    600000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 1 ----------------------------- */
function createAegisDroneLevel1(IStore store) {
  bytes32[] memory levelKeys = AegisDroneLevelKeys(1);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredUpgradeResources._tableId;
  tableIds[1] = P_RequiredBaseLevel._tableId;
  tableIds[2] = P_RequiredResources._tableId;
  tableIds[3] = P_Unit._tableId;

  uint8[] memory p_requiredupgraderesources__level_resources = new uint8[](1);
  p_requiredupgraderesources__level_resources[0] = 4;
  uint256[] memory p_requiredupgraderesources__level_amounts = new uint256[](1);
  p_requiredupgraderesources__level_amounts[0] = 200000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredUpgradeResources.encode(
    p_requiredupgraderesources__level_resources,
    p_requiredupgraderesources__level_amounts
  );
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredBaseLevel.encode(9);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 8;
  p_requiredresources__level_resources[2] = 4;
  p_requiredresources__level_resources[3] = 12;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 100000000000000000000;
  p_requiredresources__level_amounts[1] = 100000000000000000000;
  p_requiredresources__level_amounts[2] = 20000000000000000000;
  p_requiredresources__level_amounts[3] = 3;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Unit.encode(
    112000000000000000000,
    575000000000000000000,
    60,
    32000000000000000000,
    1800,
    720000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 2 ----------------------------- */
function createAegisDroneLevel2(IStore store) {
  bytes32[] memory levelKeys = AegisDroneLevelKeys(2);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredUpgradeResources._tableId;
  tableIds[1] = P_RequiredBaseLevel._tableId;
  tableIds[2] = P_RequiredResources._tableId;
  tableIds[3] = P_Unit._tableId;

  uint8[] memory p_requiredupgraderesources__level_resources = new uint8[](1);
  p_requiredupgraderesources__level_resources[0] = 4;
  uint256[] memory p_requiredupgraderesources__level_amounts = new uint256[](1);
  p_requiredupgraderesources__level_amounts[0] = 600000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredUpgradeResources.encode(
    p_requiredupgraderesources__level_resources,
    p_requiredupgraderesources__level_amounts
  );
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredBaseLevel.encode(10);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 8;
  p_requiredresources__level_resources[2] = 4;
  p_requiredresources__level_resources[3] = 12;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 100000000000000000000;
  p_requiredresources__level_amounts[1] = 100000000000000000000;
  p_requiredresources__level_amounts[2] = 20000000000000000000;
  p_requiredresources__level_amounts[3] = 3;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Unit.encode(
    124000000000000000000,
    650000000000000000000,
    70,
    34000000000000000000,
    1800,
    840000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 3 ----------------------------- */
function createAegisDroneLevel3(IStore store) {
  bytes32[] memory levelKeys = AegisDroneLevelKeys(3);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredUpgradeResources._tableId;
  tableIds[1] = P_RequiredBaseLevel._tableId;
  tableIds[2] = P_RequiredResources._tableId;
  tableIds[3] = P_Unit._tableId;

  uint8[] memory p_requiredupgraderesources__level_resources = new uint8[](1);
  p_requiredupgraderesources__level_resources[0] = 4;
  uint256[] memory p_requiredupgraderesources__level_amounts = new uint256[](1);
  p_requiredupgraderesources__level_amounts[0] = 2000000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredUpgradeResources.encode(
    p_requiredupgraderesources__level_resources,
    p_requiredupgraderesources__level_amounts
  );
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredBaseLevel.encode(11);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 8;
  p_requiredresources__level_resources[2] = 4;
  p_requiredresources__level_resources[3] = 12;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 100000000000000000000;
  p_requiredresources__level_amounts[1] = 100000000000000000000;
  p_requiredresources__level_amounts[2] = 20000000000000000000;
  p_requiredresources__level_amounts[3] = 3;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Unit.encode(
    136000000000000000000,
    725000000000000000000,
    80,
    36000000000000000000,
    1800,
    960000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 4 ----------------------------- */
function createAegisDroneLevel4(IStore store) {
  bytes32[] memory levelKeys = AegisDroneLevelKeys(4);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredUpgradeResources._tableId;
  tableIds[1] = P_RequiredBaseLevel._tableId;
  tableIds[2] = P_RequiredResources._tableId;
  tableIds[3] = P_Unit._tableId;

  uint8[] memory p_requiredupgraderesources__level_resources = new uint8[](1);
  p_requiredupgraderesources__level_resources[0] = 4;
  uint256[] memory p_requiredupgraderesources__level_amounts = new uint256[](1);
  p_requiredupgraderesources__level_amounts[0] = 4000000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredUpgradeResources.encode(
    p_requiredupgraderesources__level_resources,
    p_requiredupgraderesources__level_amounts
  );
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredBaseLevel.encode(13);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 8;
  p_requiredresources__level_resources[2] = 4;
  p_requiredresources__level_resources[3] = 12;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 100000000000000000000;
  p_requiredresources__level_amounts[1] = 100000000000000000000;
  p_requiredresources__level_amounts[2] = 20000000000000000000;
  p_requiredresources__level_amounts[3] = 3;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Unit.encode(
    148000000000000000000,
    800000000000000000000,
    90,
    38000000000000000000,
    1800,
    1080000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 5 ----------------------------- */
function createAegisDroneLevel5(IStore store) {
  bytes32[] memory levelKeys = AegisDroneLevelKeys(5);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredUpgradeResources._tableId;
  tableIds[1] = P_RequiredBaseLevel._tableId;
  tableIds[2] = P_RequiredResources._tableId;
  tableIds[3] = P_Unit._tableId;

  uint8[] memory p_requiredupgraderesources__level_resources = new uint8[](1);
  p_requiredupgraderesources__level_resources[0] = 4;
  uint256[] memory p_requiredupgraderesources__level_amounts = new uint256[](1);
  p_requiredupgraderesources__level_amounts[0] = 10000000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredUpgradeResources.encode(
    p_requiredupgraderesources__level_resources,
    p_requiredupgraderesources__level_amounts
  );
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredBaseLevel.encode(15);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 1;
  p_requiredresources__level_resources[1] = 8;
  p_requiredresources__level_resources[2] = 4;
  p_requiredresources__level_resources[3] = 12;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 100000000000000000000;
  p_requiredresources__level_amounts[1] = 100000000000000000000;
  p_requiredresources__level_amounts[2] = 20000000000000000000;
  p_requiredresources__level_amounts[3] = 3;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Unit.encode(
    160000000000000000000,
    1000000000000000000000,
    100,
    40000000000000000000,
    1800,
    1200000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant HammerDronePrototypeId = "HammerDrone";

function HammerDroneKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = HammerDronePrototypeId;
  return _keyTuple;
}

function HammerDroneLevelKeys(uint32 level) pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](2);

  _keyTuple[0] = HammerDronePrototypeId;
  _keyTuple[1] = bytes32(uint256(level));
  return _keyTuple;
}
function HammerDronePrototype(IStore store) {
  bytes32[] memory keys = HammerDroneKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_MaxLevel._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_MaxLevel.encode(5);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);

  createHammerDroneLevel0(store);
  createHammerDroneLevel1(store);
  createHammerDroneLevel2(store);
  createHammerDroneLevel3(store);
  createHammerDroneLevel4(store);
  createHammerDroneLevel5(store);
}

/* ----------------------------- LEVEL 0 ----------------------------- */
function createHammerDroneLevel0(IStore store) {
  bytes32[] memory levelKeys = HammerDroneLevelKeys(0);
  ResourceId[] memory tableIds = new ResourceId[](2);
  bytes[] memory staticData = new bytes[](2);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](2);
  bytes[] memory dynamicData = new bytes[](2);

  tableIds[0] = P_RequiredResources._tableId;
  tableIds[1] = P_Unit._tableId;

  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 3;
  p_requiredresources__level_resources[1] = 10;
  p_requiredresources__level_resources[2] = 12;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 25000000000000000000;
  p_requiredresources__level_amounts[1] = 50000000000000000000;
  p_requiredresources__level_amounts[2] = 2;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_Unit.encode(
    300000000000000000000,
    200000000000000000000,
    50,
    50000000000000000000,
    600,
    175000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 1 ----------------------------- */
function createHammerDroneLevel1(IStore store) {
  bytes32[] memory levelKeys = HammerDroneLevelKeys(1);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredUpgradeResources._tableId;
  tableIds[1] = P_RequiredBaseLevel._tableId;
  tableIds[2] = P_RequiredResources._tableId;
  tableIds[3] = P_Unit._tableId;

  uint8[] memory p_requiredupgraderesources__level_resources = new uint8[](1);
  p_requiredupgraderesources__level_resources[0] = 7;
  uint256[] memory p_requiredupgraderesources__level_amounts = new uint256[](1);
  p_requiredupgraderesources__level_amounts[0] = 200000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredUpgradeResources.encode(
    p_requiredupgraderesources__level_resources,
    p_requiredupgraderesources__level_amounts
  );
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredBaseLevel.encode(6);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 3;
  p_requiredresources__level_resources[1] = 10;
  p_requiredresources__level_resources[2] = 12;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 25000000000000000000;
  p_requiredresources__level_amounts[1] = 50000000000000000000;
  p_requiredresources__level_amounts[2] = 2;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Unit.encode(
    325000000000000000000,
    210000000000000000000,
    70,
    60000000000000000000,
    580,
    190000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 2 ----------------------------- */
function createHammerDroneLevel2(IStore store) {
  bytes32[] memory levelKeys = HammerDroneLevelKeys(2);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredUpgradeResources._tableId;
  tableIds[1] = P_RequiredBaseLevel._tableId;
  tableIds[2] = P_RequiredResources._tableId;
  tableIds[3] = P_Unit._tableId;

  uint8[] memory p_requiredupgraderesources__level_resources = new uint8[](1);
  p_requiredupgraderesources__level_resources[0] = 7;
  uint256[] memory p_requiredupgraderesources__level_amounts = new uint256[](1);
  p_requiredupgraderesources__level_amounts[0] = 600000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredUpgradeResources.encode(
    p_requiredupgraderesources__level_resources,
    p_requiredupgraderesources__level_amounts
  );
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredBaseLevel.encode(7);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 3;
  p_requiredresources__level_resources[1] = 10;
  p_requiredresources__level_resources[2] = 12;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 25000000000000000000;
  p_requiredresources__level_amounts[1] = 50000000000000000000;
  p_requiredresources__level_amounts[2] = 2;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Unit.encode(
    350000000000000000000,
    220000000000000000000,
    90,
    70000000000000000000,
    560,
    205000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 3 ----------------------------- */
function createHammerDroneLevel3(IStore store) {
  bytes32[] memory levelKeys = HammerDroneLevelKeys(3);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredUpgradeResources._tableId;
  tableIds[1] = P_RequiredBaseLevel._tableId;
  tableIds[2] = P_RequiredResources._tableId;
  tableIds[3] = P_Unit._tableId;

  uint8[] memory p_requiredupgraderesources__level_resources = new uint8[](1);
  p_requiredupgraderesources__level_resources[0] = 7;
  uint256[] memory p_requiredupgraderesources__level_amounts = new uint256[](1);
  p_requiredupgraderesources__level_amounts[0] = 2000000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredUpgradeResources.encode(
    p_requiredupgraderesources__level_resources,
    p_requiredupgraderesources__level_amounts
  );
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredBaseLevel.encode(8);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 3;
  p_requiredresources__level_resources[1] = 10;
  p_requiredresources__level_resources[2] = 12;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 25000000000000000000;
  p_requiredresources__level_amounts[1] = 50000000000000000000;
  p_requiredresources__level_amounts[2] = 2;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Unit.encode(
    375000000000000000000,
    230000000000000000000,
    110,
    80000000000000000000,
    540,
    220000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 4 ----------------------------- */
function createHammerDroneLevel4(IStore store) {
  bytes32[] memory levelKeys = HammerDroneLevelKeys(4);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredUpgradeResources._tableId;
  tableIds[1] = P_RequiredBaseLevel._tableId;
  tableIds[2] = P_RequiredResources._tableId;
  tableIds[3] = P_Unit._tableId;

  uint8[] memory p_requiredupgraderesources__level_resources = new uint8[](1);
  p_requiredupgraderesources__level_resources[0] = 7;
  uint256[] memory p_requiredupgraderesources__level_amounts = new uint256[](1);
  p_requiredupgraderesources__level_amounts[0] = 4000000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredUpgradeResources.encode(
    p_requiredupgraderesources__level_resources,
    p_requiredupgraderesources__level_amounts
  );
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredBaseLevel.encode(10);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 3;
  p_requiredresources__level_resources[1] = 10;
  p_requiredresources__level_resources[2] = 12;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 25000000000000000000;
  p_requiredresources__level_amounts[1] = 50000000000000000000;
  p_requiredresources__level_amounts[2] = 2;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Unit.encode(
    400000000000000000000,
    240000000000000000000,
    130,
    90000000000000000000,
    520,
    235000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 5 ----------------------------- */
function createHammerDroneLevel5(IStore store) {
  bytes32[] memory levelKeys = HammerDroneLevelKeys(5);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredUpgradeResources._tableId;
  tableIds[1] = P_RequiredBaseLevel._tableId;
  tableIds[2] = P_RequiredResources._tableId;
  tableIds[3] = P_Unit._tableId;

  uint8[] memory p_requiredupgraderesources__level_resources = new uint8[](1);
  p_requiredupgraderesources__level_resources[0] = 7;
  uint256[] memory p_requiredupgraderesources__level_amounts = new uint256[](1);
  p_requiredupgraderesources__level_amounts[0] = 10000000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredUpgradeResources.encode(
    p_requiredupgraderesources__level_resources,
    p_requiredupgraderesources__level_amounts
  );
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredBaseLevel.encode(15);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 3;
  p_requiredresources__level_resources[1] = 10;
  p_requiredresources__level_resources[2] = 12;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 25000000000000000000;
  p_requiredresources__level_amounts[1] = 50000000000000000000;
  p_requiredresources__level_amounts[2] = 2;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Unit.encode(
    450000000000000000000,
    250000000000000000000,
    150,
    100000000000000000000,
    500,
    250000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant StingerDronePrototypeId = "StingerDrone";

function StingerDroneKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = StingerDronePrototypeId;
  return _keyTuple;
}

function StingerDroneLevelKeys(uint32 level) pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](2);

  _keyTuple[0] = StingerDronePrototypeId;
  _keyTuple[1] = bytes32(uint256(level));
  return _keyTuple;
}
function StingerDronePrototype(IStore store) {
  bytes32[] memory keys = StingerDroneKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_MaxLevel._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_MaxLevel.encode(5);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);

  createStingerDroneLevel0(store);
  createStingerDroneLevel1(store);
  createStingerDroneLevel2(store);
  createStingerDroneLevel3(store);
  createStingerDroneLevel4(store);
  createStingerDroneLevel5(store);
}

/* ----------------------------- LEVEL 0 ----------------------------- */
function createStingerDroneLevel0(IStore store) {
  bytes32[] memory levelKeys = StingerDroneLevelKeys(0);
  ResourceId[] memory tableIds = new ResourceId[](2);
  bytes[] memory staticData = new bytes[](2);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](2);
  bytes[] memory dynamicData = new bytes[](2);

  tableIds[0] = P_RequiredResources._tableId;
  tableIds[1] = P_Unit._tableId;

  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 3;
  p_requiredresources__level_resources[1] = 10;
  p_requiredresources__level_resources[2] = 7;
  p_requiredresources__level_resources[3] = 12;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 100000000000000000000;
  p_requiredresources__level_amounts[1] = 100000000000000000000;
  p_requiredresources__level_amounts[2] = 20000000000000000000;
  p_requiredresources__level_amounts[3] = 3;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_Unit.encode(
    600000000000000000000,
    75000000000000000000,
    100,
    25000000000000000000,
    1800,
    500000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 1 ----------------------------- */
function createStingerDroneLevel1(IStore store) {
  bytes32[] memory levelKeys = StingerDroneLevelKeys(1);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredUpgradeResources._tableId;
  tableIds[1] = P_RequiredBaseLevel._tableId;
  tableIds[2] = P_RequiredResources._tableId;
  tableIds[3] = P_Unit._tableId;

  uint8[] memory p_requiredupgraderesources__level_resources = new uint8[](1);
  p_requiredupgraderesources__level_resources[0] = 7;
  uint256[] memory p_requiredupgraderesources__level_amounts = new uint256[](1);
  p_requiredupgraderesources__level_amounts[0] = 200000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredUpgradeResources.encode(
    p_requiredupgraderesources__level_resources,
    p_requiredupgraderesources__level_amounts
  );
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredBaseLevel.encode(9);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 3;
  p_requiredresources__level_resources[1] = 10;
  p_requiredresources__level_resources[2] = 7;
  p_requiredresources__level_resources[3] = 12;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 100000000000000000000;
  p_requiredresources__level_amounts[1] = 100000000000000000000;
  p_requiredresources__level_amounts[2] = 20000000000000000000;
  p_requiredresources__level_amounts[3] = 3;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Unit.encode(
    720000000000000000000,
    100000000000000000000,
    120,
    30000000000000000000,
    1800,
    600000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 2 ----------------------------- */
function createStingerDroneLevel2(IStore store) {
  bytes32[] memory levelKeys = StingerDroneLevelKeys(2);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredUpgradeResources._tableId;
  tableIds[1] = P_RequiredBaseLevel._tableId;
  tableIds[2] = P_RequiredResources._tableId;
  tableIds[3] = P_Unit._tableId;

  uint8[] memory p_requiredupgraderesources__level_resources = new uint8[](1);
  p_requiredupgraderesources__level_resources[0] = 7;
  uint256[] memory p_requiredupgraderesources__level_amounts = new uint256[](1);
  p_requiredupgraderesources__level_amounts[0] = 600000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredUpgradeResources.encode(
    p_requiredupgraderesources__level_resources,
    p_requiredupgraderesources__level_amounts
  );
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredBaseLevel.encode(10);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 3;
  p_requiredresources__level_resources[1] = 10;
  p_requiredresources__level_resources[2] = 7;
  p_requiredresources__level_resources[3] = 12;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 100000000000000000000;
  p_requiredresources__level_amounts[1] = 100000000000000000000;
  p_requiredresources__level_amounts[2] = 20000000000000000000;
  p_requiredresources__level_amounts[3] = 3;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Unit.encode(
    840000000000000000000,
    125000000000000000000,
    140,
    35000000000000000000,
    1800,
    700000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 3 ----------------------------- */
function createStingerDroneLevel3(IStore store) {
  bytes32[] memory levelKeys = StingerDroneLevelKeys(3);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredUpgradeResources._tableId;
  tableIds[1] = P_RequiredBaseLevel._tableId;
  tableIds[2] = P_RequiredResources._tableId;
  tableIds[3] = P_Unit._tableId;

  uint8[] memory p_requiredupgraderesources__level_resources = new uint8[](1);
  p_requiredupgraderesources__level_resources[0] = 7;
  uint256[] memory p_requiredupgraderesources__level_amounts = new uint256[](1);
  p_requiredupgraderesources__level_amounts[0] = 2000000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredUpgradeResources.encode(
    p_requiredupgraderesources__level_resources,
    p_requiredupgraderesources__level_amounts
  );
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredBaseLevel.encode(11);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 3;
  p_requiredresources__level_resources[1] = 10;
  p_requiredresources__level_resources[2] = 7;
  p_requiredresources__level_resources[3] = 12;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 100000000000000000000;
  p_requiredresources__level_amounts[1] = 100000000000000000000;
  p_requiredresources__level_amounts[2] = 20000000000000000000;
  p_requiredresources__level_amounts[3] = 3;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Unit.encode(
    960000000000000000000,
    150000000000000000000,
    160,
    40000000000000000000,
    1800,
    800000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 4 ----------------------------- */
function createStingerDroneLevel4(IStore store) {
  bytes32[] memory levelKeys = StingerDroneLevelKeys(4);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredUpgradeResources._tableId;
  tableIds[1] = P_RequiredBaseLevel._tableId;
  tableIds[2] = P_RequiredResources._tableId;
  tableIds[3] = P_Unit._tableId;

  uint8[] memory p_requiredupgraderesources__level_resources = new uint8[](1);
  p_requiredupgraderesources__level_resources[0] = 7;
  uint256[] memory p_requiredupgraderesources__level_amounts = new uint256[](1);
  p_requiredupgraderesources__level_amounts[0] = 4000000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredUpgradeResources.encode(
    p_requiredupgraderesources__level_resources,
    p_requiredupgraderesources__level_amounts
  );
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredBaseLevel.encode(13);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 3;
  p_requiredresources__level_resources[1] = 10;
  p_requiredresources__level_resources[2] = 7;
  p_requiredresources__level_resources[3] = 12;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 100000000000000000000;
  p_requiredresources__level_amounts[1] = 100000000000000000000;
  p_requiredresources__level_amounts[2] = 20000000000000000000;
  p_requiredresources__level_amounts[3] = 3;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Unit.encode(
    1080000000000000000000,
    175000000000000000000,
    180,
    45000000000000000000,
    1800,
    900000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 5 ----------------------------- */
function createStingerDroneLevel5(IStore store) {
  bytes32[] memory levelKeys = StingerDroneLevelKeys(5);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredUpgradeResources._tableId;
  tableIds[1] = P_RequiredBaseLevel._tableId;
  tableIds[2] = P_RequiredResources._tableId;
  tableIds[3] = P_Unit._tableId;

  uint8[] memory p_requiredupgraderesources__level_resources = new uint8[](1);
  p_requiredupgraderesources__level_resources[0] = 7;
  uint256[] memory p_requiredupgraderesources__level_amounts = new uint256[](1);
  p_requiredupgraderesources__level_amounts[0] = 10000000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredUpgradeResources.encode(
    p_requiredupgraderesources__level_resources,
    p_requiredupgraderesources__level_amounts
  );
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredBaseLevel.encode(15);
  uint8[] memory p_requiredresources__level_resources = new uint8[](4);
  p_requiredresources__level_resources[0] = 3;
  p_requiredresources__level_resources[1] = 10;
  p_requiredresources__level_resources[2] = 7;
  p_requiredresources__level_resources[3] = 12;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](4);
  p_requiredresources__level_amounts[0] = 100000000000000000000;
  p_requiredresources__level_amounts[1] = 100000000000000000000;
  p_requiredresources__level_amounts[2] = 20000000000000000000;
  p_requiredresources__level_amounts[3] = 3;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Unit.encode(
    1200000000000000000000,
    200000000000000000000,
    200,
    50000000000000000000,
    1800,
    1000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant ColonyShipPrototypeId = "ColonyShip";

function ColonyShipKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = ColonyShipPrototypeId;
  return _keyTuple;
}

function ColonyShipLevelKeys(uint32 level) pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](2);

  _keyTuple[0] = ColonyShipPrototypeId;
  _keyTuple[1] = bytes32(uint256(level));
  return _keyTuple;
}
function ColonyShipPrototype(IStore store) {
  bytes32[] memory keys = ColonyShipKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_MaxLevel._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_MaxLevel.encode(0);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);

  createColonyShipLevel0(store);
}

/* ----------------------------- LEVEL 0 ----------------------------- */
function createColonyShipLevel0(IStore store) {
  bytes32[] memory levelKeys = ColonyShipLevelKeys(0);
  ResourceId[] memory tableIds = new ResourceId[](3);
  bytes[] memory staticData = new bytes[](3);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](3);
  bytes[] memory dynamicData = new bytes[](3);

  tableIds[0] = P_RequiredResources._tableId;
  tableIds[1] = P_RequiredBaseLevel._tableId;
  tableIds[2] = P_Unit._tableId;

  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 8;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 10;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 2500000000000000000000;
  p_requiredresources__level_amounts[1] = 2500000000000000000000;
  p_requiredresources__level_amounts[2] = 2500000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredBaseLevel.encode(8);
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_Unit.encode(
    20000000000000000000,
    50000000000000000000,
    100,
    2000000000000000000000,
    43200,
    2000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant DroidPrototypeId = "Droid";

function DroidKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = DroidPrototypeId;
  return _keyTuple;
}

function DroidLevelKeys(uint32 level) pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](2);

  _keyTuple[0] = DroidPrototypeId;
  _keyTuple[1] = bytes32(uint256(level));
  return _keyTuple;
}
function DroidPrototype(IStore store) {
  bytes32[] memory keys = DroidKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_MaxLevel._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_MaxLevel.encode(0);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);

  createDroidLevel0(store);
}

/* ----------------------------- LEVEL 0 ----------------------------- */
function createDroidLevel0(IStore store) {
  bytes32[] memory levelKeys = DroidLevelKeys(0);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_Unit._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_Unit.encode(
    0,
    200000000000000000000,
    1,
    0,
    720,
    200000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MinutemanMarinePrototypeId = "MinutemanMarine";

function MinutemanMarineKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = MinutemanMarinePrototypeId;
  return _keyTuple;
}

function MinutemanMarineLevelKeys(uint32 level) pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](2);

  _keyTuple[0] = MinutemanMarinePrototypeId;
  _keyTuple[1] = bytes32(uint256(level));
  return _keyTuple;
}
function MinutemanMarinePrototype(IStore store) {
  bytes32[] memory keys = MinutemanMarineKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_MaxLevel._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_MaxLevel.encode(5);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);

  createMinutemanMarineLevel0(store);
  createMinutemanMarineLevel1(store);
  createMinutemanMarineLevel2(store);
  createMinutemanMarineLevel3(store);
  createMinutemanMarineLevel4(store);
  createMinutemanMarineLevel5(store);
}

/* ----------------------------- LEVEL 0 ----------------------------- */
function createMinutemanMarineLevel0(IStore store) {
  bytes32[] memory levelKeys = MinutemanMarineLevelKeys(0);
  ResourceId[] memory tableIds = new ResourceId[](2);
  bytes[] memory staticData = new bytes[](2);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](2);
  bytes[] memory dynamicData = new bytes[](2);

  tableIds[0] = P_RequiredResources._tableId;
  tableIds[1] = P_Unit._tableId;

  uint8[] memory p_requiredresources__level_resources = new uint8[](2);
  p_requiredresources__level_resources[0] = 2;
  p_requiredresources__level_resources[1] = 12;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](2);
  p_requiredresources__level_amounts[0] = 25000000000000000000;
  p_requiredresources__level_amounts[1] = 1;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_Unit.encode(
    40000000000000000000,
    20000000000000000000,
    250,
    40000000000000000000,
    120,
    15000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 1 ----------------------------- */
function createMinutemanMarineLevel1(IStore store) {
  bytes32[] memory levelKeys = MinutemanMarineLevelKeys(1);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredUpgradeResources._tableId;
  tableIds[1] = P_RequiredBaseLevel._tableId;
  tableIds[2] = P_RequiredResources._tableId;
  tableIds[3] = P_Unit._tableId;

  uint8[] memory p_requiredupgraderesources__level_resources = new uint8[](1);
  p_requiredupgraderesources__level_resources[0] = 5;
  uint256[] memory p_requiredupgraderesources__level_amounts = new uint256[](1);
  p_requiredupgraderesources__level_amounts[0] = 200000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredUpgradeResources.encode(
    p_requiredupgraderesources__level_resources,
    p_requiredupgraderesources__level_amounts
  );
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredBaseLevel.encode(3);
  uint8[] memory p_requiredresources__level_resources = new uint8[](2);
  p_requiredresources__level_resources[0] = 2;
  p_requiredresources__level_resources[1] = 12;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](2);
  p_requiredresources__level_amounts[0] = 25000000000000000000;
  p_requiredresources__level_amounts[1] = 1;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Unit.encode(
    43000000000000000000,
    22000000000000000000,
    275,
    44000000000000000000,
    110,
    17000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 2 ----------------------------- */
function createMinutemanMarineLevel2(IStore store) {
  bytes32[] memory levelKeys = MinutemanMarineLevelKeys(2);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredUpgradeResources._tableId;
  tableIds[1] = P_RequiredBaseLevel._tableId;
  tableIds[2] = P_RequiredResources._tableId;
  tableIds[3] = P_Unit._tableId;

  uint8[] memory p_requiredupgraderesources__level_resources = new uint8[](1);
  p_requiredupgraderesources__level_resources[0] = 5;
  uint256[] memory p_requiredupgraderesources__level_amounts = new uint256[](1);
  p_requiredupgraderesources__level_amounts[0] = 600000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredUpgradeResources.encode(
    p_requiredupgraderesources__level_resources,
    p_requiredupgraderesources__level_amounts
  );
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredBaseLevel.encode(5);
  uint8[] memory p_requiredresources__level_resources = new uint8[](2);
  p_requiredresources__level_resources[0] = 2;
  p_requiredresources__level_resources[1] = 12;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](2);
  p_requiredresources__level_amounts[0] = 25000000000000000000;
  p_requiredresources__level_amounts[1] = 1;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Unit.encode(
    46000000000000000000,
    24000000000000000000,
    300,
    48000000000000000000,
    100,
    19000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 3 ----------------------------- */
function createMinutemanMarineLevel3(IStore store) {
  bytes32[] memory levelKeys = MinutemanMarineLevelKeys(3);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredUpgradeResources._tableId;
  tableIds[1] = P_RequiredBaseLevel._tableId;
  tableIds[2] = P_RequiredResources._tableId;
  tableIds[3] = P_Unit._tableId;

  uint8[] memory p_requiredupgraderesources__level_resources = new uint8[](1);
  p_requiredupgraderesources__level_resources[0] = 5;
  uint256[] memory p_requiredupgraderesources__level_amounts = new uint256[](1);
  p_requiredupgraderesources__level_amounts[0] = 2000000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredUpgradeResources.encode(
    p_requiredupgraderesources__level_resources,
    p_requiredupgraderesources__level_amounts
  );
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredBaseLevel.encode(8);
  uint8[] memory p_requiredresources__level_resources = new uint8[](2);
  p_requiredresources__level_resources[0] = 2;
  p_requiredresources__level_resources[1] = 12;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](2);
  p_requiredresources__level_amounts[0] = 25000000000000000000;
  p_requiredresources__level_amounts[1] = 1;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Unit.encode(
    49000000000000000000,
    26000000000000000000,
    325,
    52000000000000000000,
    90,
    21000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 4 ----------------------------- */
function createMinutemanMarineLevel4(IStore store) {
  bytes32[] memory levelKeys = MinutemanMarineLevelKeys(4);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredUpgradeResources._tableId;
  tableIds[1] = P_RequiredBaseLevel._tableId;
  tableIds[2] = P_RequiredResources._tableId;
  tableIds[3] = P_Unit._tableId;

  uint8[] memory p_requiredupgraderesources__level_resources = new uint8[](1);
  p_requiredupgraderesources__level_resources[0] = 5;
  uint256[] memory p_requiredupgraderesources__level_amounts = new uint256[](1);
  p_requiredupgraderesources__level_amounts[0] = 4000000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredUpgradeResources.encode(
    p_requiredupgraderesources__level_resources,
    p_requiredupgraderesources__level_amounts
  );
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredBaseLevel.encode(10);
  uint8[] memory p_requiredresources__level_resources = new uint8[](2);
  p_requiredresources__level_resources[0] = 2;
  p_requiredresources__level_resources[1] = 12;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](2);
  p_requiredresources__level_amounts[0] = 25000000000000000000;
  p_requiredresources__level_amounts[1] = 1;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Unit.encode(
    52000000000000000000,
    28000000000000000000,
    350,
    56000000000000000000,
    80,
    23000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 5 ----------------------------- */
function createMinutemanMarineLevel5(IStore store) {
  bytes32[] memory levelKeys = MinutemanMarineLevelKeys(5);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredUpgradeResources._tableId;
  tableIds[1] = P_RequiredBaseLevel._tableId;
  tableIds[2] = P_RequiredResources._tableId;
  tableIds[3] = P_Unit._tableId;

  uint8[] memory p_requiredupgraderesources__level_resources = new uint8[](1);
  p_requiredupgraderesources__level_resources[0] = 5;
  uint256[] memory p_requiredupgraderesources__level_amounts = new uint256[](1);
  p_requiredupgraderesources__level_amounts[0] = 10000000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredUpgradeResources.encode(
    p_requiredupgraderesources__level_resources,
    p_requiredupgraderesources__level_amounts
  );
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredBaseLevel.encode(15);
  uint8[] memory p_requiredresources__level_resources = new uint8[](2);
  p_requiredresources__level_resources[0] = 2;
  p_requiredresources__level_resources[1] = 12;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](2);
  p_requiredresources__level_amounts[0] = 25000000000000000000;
  p_requiredresources__level_amounts[1] = 1;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Unit.encode(
    55000000000000000000,
    30000000000000000000,
    400,
    60000000000000000000,
    60,
    25000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant TridentMarinePrototypeId = "TridentMarine";

function TridentMarineKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = TridentMarinePrototypeId;
  return _keyTuple;
}

function TridentMarineLevelKeys(uint32 level) pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](2);

  _keyTuple[0] = TridentMarinePrototypeId;
  _keyTuple[1] = bytes32(uint256(level));
  return _keyTuple;
}
function TridentMarinePrototype(IStore store) {
  bytes32[] memory keys = TridentMarineKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_MaxLevel._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_MaxLevel.encode(5);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);

  createTridentMarineLevel0(store);
  createTridentMarineLevel1(store);
  createTridentMarineLevel2(store);
  createTridentMarineLevel3(store);
  createTridentMarineLevel4(store);
  createTridentMarineLevel5(store);
}

/* ----------------------------- LEVEL 0 ----------------------------- */
function createTridentMarineLevel0(IStore store) {
  bytes32[] memory levelKeys = TridentMarineLevelKeys(0);
  ResourceId[] memory tableIds = new ResourceId[](2);
  bytes[] memory staticData = new bytes[](2);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](2);
  bytes[] memory dynamicData = new bytes[](2);

  tableIds[0] = P_RequiredResources._tableId;
  tableIds[1] = P_Unit._tableId;

  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 2;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 12;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 10000000000000000000;
  p_requiredresources__level_amounts[1] = 10000000000000000000;
  p_requiredresources__level_amounts[2] = 1;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_Unit.encode(
    70000000000000000000,
    80000000000000000000,
    150,
    50000000000000000000,
    200,
    60000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 1 ----------------------------- */
function createTridentMarineLevel1(IStore store) {
  bytes32[] memory levelKeys = TridentMarineLevelKeys(1);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredUpgradeResources._tableId;
  tableIds[1] = P_RequiredBaseLevel._tableId;
  tableIds[2] = P_RequiredResources._tableId;
  tableIds[3] = P_Unit._tableId;

  uint8[] memory p_requiredupgraderesources__level_resources = new uint8[](1);
  p_requiredupgraderesources__level_resources[0] = 5;
  uint256[] memory p_requiredupgraderesources__level_amounts = new uint256[](1);
  p_requiredupgraderesources__level_amounts[0] = 200000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredUpgradeResources.encode(
    p_requiredupgraderesources__level_resources,
    p_requiredupgraderesources__level_amounts
  );
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredBaseLevel.encode(9);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 2;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 12;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 10000000000000000000;
  p_requiredresources__level_amounts[1] = 10000000000000000000;
  p_requiredresources__level_amounts[2] = 1;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Unit.encode(
    74000000000000000000,
    84000000000000000000,
    160,
    60000000000000000000,
    190,
    64000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 2 ----------------------------- */
function createTridentMarineLevel2(IStore store) {
  bytes32[] memory levelKeys = TridentMarineLevelKeys(2);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredUpgradeResources._tableId;
  tableIds[1] = P_RequiredBaseLevel._tableId;
  tableIds[2] = P_RequiredResources._tableId;
  tableIds[3] = P_Unit._tableId;

  uint8[] memory p_requiredupgraderesources__level_resources = new uint8[](1);
  p_requiredupgraderesources__level_resources[0] = 5;
  uint256[] memory p_requiredupgraderesources__level_amounts = new uint256[](1);
  p_requiredupgraderesources__level_amounts[0] = 600000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredUpgradeResources.encode(
    p_requiredupgraderesources__level_resources,
    p_requiredupgraderesources__level_amounts
  );
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredBaseLevel.encode(10);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 2;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 12;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 10000000000000000000;
  p_requiredresources__level_amounts[1] = 10000000000000000000;
  p_requiredresources__level_amounts[2] = 1;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Unit.encode(
    78000000000000000000,
    88000000000000000000,
    170,
    70000000000000000000,
    180,
    68000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 3 ----------------------------- */
function createTridentMarineLevel3(IStore store) {
  bytes32[] memory levelKeys = TridentMarineLevelKeys(3);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredUpgradeResources._tableId;
  tableIds[1] = P_RequiredBaseLevel._tableId;
  tableIds[2] = P_RequiredResources._tableId;
  tableIds[3] = P_Unit._tableId;

  uint8[] memory p_requiredupgraderesources__level_resources = new uint8[](1);
  p_requiredupgraderesources__level_resources[0] = 5;
  uint256[] memory p_requiredupgraderesources__level_amounts = new uint256[](1);
  p_requiredupgraderesources__level_amounts[0] = 2000000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredUpgradeResources.encode(
    p_requiredupgraderesources__level_resources,
    p_requiredupgraderesources__level_amounts
  );
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredBaseLevel.encode(11);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 2;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 12;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 10000000000000000000;
  p_requiredresources__level_amounts[1] = 10000000000000000000;
  p_requiredresources__level_amounts[2] = 1;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Unit.encode(
    82000000000000000000,
    92000000000000000000,
    180,
    80000000000000000000,
    170,
    72000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 4 ----------------------------- */
function createTridentMarineLevel4(IStore store) {
  bytes32[] memory levelKeys = TridentMarineLevelKeys(4);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredUpgradeResources._tableId;
  tableIds[1] = P_RequiredBaseLevel._tableId;
  tableIds[2] = P_RequiredResources._tableId;
  tableIds[3] = P_Unit._tableId;

  uint8[] memory p_requiredupgraderesources__level_resources = new uint8[](1);
  p_requiredupgraderesources__level_resources[0] = 5;
  uint256[] memory p_requiredupgraderesources__level_amounts = new uint256[](1);
  p_requiredupgraderesources__level_amounts[0] = 4000000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredUpgradeResources.encode(
    p_requiredupgraderesources__level_resources,
    p_requiredupgraderesources__level_amounts
  );
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredBaseLevel.encode(13);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 2;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 12;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 10000000000000000000;
  p_requiredresources__level_amounts[1] = 10000000000000000000;
  p_requiredresources__level_amounts[2] = 1;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Unit.encode(
    86000000000000000000,
    96000000000000000000,
    190,
    90000000000000000000,
    160,
    76000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 5 ----------------------------- */
function createTridentMarineLevel5(IStore store) {
  bytes32[] memory levelKeys = TridentMarineLevelKeys(5);
  ResourceId[] memory tableIds = new ResourceId[](4);
  bytes[] memory staticData = new bytes[](4);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](4);
  bytes[] memory dynamicData = new bytes[](4);

  tableIds[0] = P_RequiredUpgradeResources._tableId;
  tableIds[1] = P_RequiredBaseLevel._tableId;
  tableIds[2] = P_RequiredResources._tableId;
  tableIds[3] = P_Unit._tableId;

  uint8[] memory p_requiredupgraderesources__level_resources = new uint8[](1);
  p_requiredupgraderesources__level_resources[0] = 5;
  uint256[] memory p_requiredupgraderesources__level_amounts = new uint256[](1);
  p_requiredupgraderesources__level_amounts[0] = 10000000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_RequiredUpgradeResources.encode(
    p_requiredupgraderesources__level_resources,
    p_requiredupgraderesources__level_amounts
  );
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_RequiredBaseLevel.encode(15);
  uint8[] memory p_requiredresources__level_resources = new uint8[](3);
  p_requiredresources__level_resources[0] = 2;
  p_requiredresources__level_resources[1] = 9;
  p_requiredresources__level_resources[2] = 12;
  uint256[] memory p_requiredresources__level_amounts = new uint256[](3);
  p_requiredresources__level_amounts[0] = 10000000000000000000;
  p_requiredresources__level_amounts[1] = 10000000000000000000;
  p_requiredresources__level_amounts[2] = 1;
  (staticData[2], encodedLengths[2], dynamicData[2]) = P_RequiredResources.encode(
    p_requiredresources__level_resources,
    p_requiredresources__level_amounts
  );
  (staticData[3], encodedLengths[3], dynamicData[3]) = P_Unit.encode(
    90000000000000000000,
    100000000000000000000,
    200,
    100000000000000000000,
    150,
    80000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant PointMultipliersPrototypeId = "PointMultipliers";

function PointMultipliersKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](0);

  return _keyTuple;
}

function PointMultipliersLevelKeys(uint32 level) pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);

  _keyTuple[0] = bytes32(uint256(level));
  return _keyTuple;
}
function PointMultipliersPrototype(IStore store) {
  createPointMultipliersLevel1(store);
  createPointMultipliersLevel2(store);
  createPointMultipliersLevel3(store);
  createPointMultipliersLevel4(store);
  createPointMultipliersLevel5(store);
  createPointMultipliersLevel6(store);
  createPointMultipliersLevel7(store);
  createPointMultipliersLevel8(store);
  createPointMultipliersLevel9(store);
  createPointMultipliersLevel10(store);
}

/* ----------------------------- LEVEL 1 ----------------------------- */
function createPointMultipliersLevel1(IStore store) {
  bytes32[] memory levelKeys = PointMultipliersLevelKeys(1);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_PointMultiplier._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_PointMultiplier.encode(1);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 2 ----------------------------- */
function createPointMultipliersLevel2(IStore store) {
  bytes32[] memory levelKeys = PointMultipliersLevelKeys(2);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_PointMultiplier._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_PointMultiplier.encode(1);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 3 ----------------------------- */
function createPointMultipliersLevel3(IStore store) {
  bytes32[] memory levelKeys = PointMultipliersLevelKeys(3);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_PointMultiplier._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_PointMultiplier.encode(1);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 4 ----------------------------- */
function createPointMultipliersLevel4(IStore store) {
  bytes32[] memory levelKeys = PointMultipliersLevelKeys(4);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_PointMultiplier._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_PointMultiplier.encode(75);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 5 ----------------------------- */
function createPointMultipliersLevel5(IStore store) {
  bytes32[] memory levelKeys = PointMultipliersLevelKeys(5);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_PointMultiplier._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_PointMultiplier.encode(300);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 6 ----------------------------- */
function createPointMultipliersLevel6(IStore store) {
  bytes32[] memory levelKeys = PointMultipliersLevelKeys(6);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_PointMultiplier._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_PointMultiplier.encode(800);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 7 ----------------------------- */
function createPointMultipliersLevel7(IStore store) {
  bytes32[] memory levelKeys = PointMultipliersLevelKeys(7);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_PointMultiplier._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_PointMultiplier.encode(150);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 8 ----------------------------- */
function createPointMultipliersLevel8(IStore store) {
  bytes32[] memory levelKeys = PointMultipliersLevelKeys(8);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_PointMultiplier._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_PointMultiplier.encode(5);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 9 ----------------------------- */
function createPointMultipliersLevel9(IStore store) {
  bytes32[] memory levelKeys = PointMultipliersLevelKeys(9);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_PointMultiplier._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_PointMultiplier.encode(5);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 10 ----------------------------- */
function createPointMultipliersLevel10(IStore store) {
  bytes32[] memory levelKeys = PointMultipliersLevelKeys(10);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_PointMultiplier._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_PointMultiplier.encode(5);

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant ObjectivesPrototypeId = "Objectives";

function ObjectivesKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = ObjectivesPrototypeId;
  return _keyTuple;
}

function ObjectivesLevelKeys(uint32 level) pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](2);

  _keyTuple[0] = ObjectivesPrototypeId;
  _keyTuple[1] = bytes32(uint256(level));
  return _keyTuple;
}
function ObjectivesPrototype(IStore store) {
  createObjectivesLevel0(store);
  createObjectivesLevel1(store);
  createObjectivesLevel2(store);
  createObjectivesLevel3(store);
  createObjectivesLevel4(store);
  createObjectivesLevel5(store);
  createObjectivesLevel6(store);
  createObjectivesLevel7(store);
  createObjectivesLevel8(store);
  createObjectivesLevel9(store);
  createObjectivesLevel10(store);
  createObjectivesLevel11(store);
  createObjectivesLevel12(store);
  createObjectivesLevel13(store);
  createObjectivesLevel14(store);
  createObjectivesLevel15(store);
  createObjectivesLevel16(store);
  createObjectivesLevel17(store);
  createObjectivesLevel18(store);
  createObjectivesLevel19(store);
  createObjectivesLevel20(store);
  createObjectivesLevel21(store);
  createObjectivesLevel22(store);
  createObjectivesLevel23(store);
  createObjectivesLevel24(store);
  createObjectivesLevel25(store);
  createObjectivesLevel26(store);
  createObjectivesLevel27(store);
  createObjectivesLevel28(store);
  createObjectivesLevel29(store);
  createObjectivesLevel30(store);
  createObjectivesLevel31(store);
  createObjectivesLevel32(store);
  createObjectivesLevel33(store);
  createObjectivesLevel34(store);
  createObjectivesLevel35(store);
  createObjectivesLevel36(store);
  createObjectivesLevel37(store);
  createObjectivesLevel38(store);
  createObjectivesLevel39(store);
  createObjectivesLevel40(store);
  createObjectivesLevel41(store);
  createObjectivesLevel42(store);
  createObjectivesLevel43(store);
  createObjectivesLevel44(store);
  createObjectivesLevel45(store);
  createObjectivesLevel46(store);
  createObjectivesLevel47(store);
  createObjectivesLevel48(store);
  createObjectivesLevel49(store);
  createObjectivesLevel50(store);
  createObjectivesLevel51(store);
  createObjectivesLevel52(store);
  createObjectivesLevel53(store);
  createObjectivesLevel54(store);
  createObjectivesLevel55(store);
  createObjectivesLevel56(store);
  createObjectivesLevel57(store);
  createObjectivesLevel58(store);
  createObjectivesLevel59(store);
  createObjectivesLevel60(store);
  createObjectivesLevel61(store);
  createObjectivesLevel62(store);
  createObjectivesLevel63(store);
  createObjectivesLevel64(store);
  createObjectivesLevel65(store);
  createObjectivesLevel66(store);
  createObjectivesLevel67(store);
  createObjectivesLevel68(store);
  createObjectivesLevel69(store);
  createObjectivesLevel70(store);
  createObjectivesLevel71(store);
  createObjectivesLevel72(store);
  createObjectivesLevel73(store);
  createObjectivesLevel74(store);
  createObjectivesLevel75(store);
  createObjectivesLevel76(store);
  createObjectivesLevel77(store);
  createObjectivesLevel78(store);
  createObjectivesLevel79(store);
  createObjectivesLevel80(store);
}

/* ----------------------------- LEVEL 0 ----------------------------- */
function createObjectivesLevel0(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(0);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x4e554c4c00000000000000000000000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 1 ----------------------------- */
function createObjectivesLevel1(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(1);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x4a6f696e446973636f7264000000000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 2 ----------------------------- */
function createObjectivesLevel2(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(2);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x466f6c6c6f775477697474657200000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 3 ----------------------------- */
function createObjectivesLevel3(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(3);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x4275696c6449726f6e4d696e6500000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 4 ----------------------------- */
function createObjectivesLevel4(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(4);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x4275696c64436f707065724d696e650000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 5 ----------------------------- */
function createObjectivesLevel5(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(5);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x4275696c644c69746869756d4d696e6500000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 6 ----------------------------- */
function createObjectivesLevel6(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(6);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x557067726164654d61696e426173653200000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 7 ----------------------------- */
function createObjectivesLevel7(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(7);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x557067726164654d61696e426173653300000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 8 ----------------------------- */
function createObjectivesLevel8(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(8);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x557067726164654d61696e426173653400000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 9 ----------------------------- */
function createObjectivesLevel9(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(9);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x557067726164654d61696e426173653500000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 10 ----------------------------- */
function createObjectivesLevel10(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(10);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x457870616e644261736532000000000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 11 ----------------------------- */
function createObjectivesLevel11(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(11);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x457870616e644261736533000000000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 12 ----------------------------- */
function createObjectivesLevel12(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(12);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x457870616e644261736534000000000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 13 ----------------------------- */
function createObjectivesLevel13(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(13);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x5570677261646549726f6e4d696e653200000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 14 ----------------------------- */
function createObjectivesLevel14(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(14);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x5570677261646549726f6e4d696e653300000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 15 ----------------------------- */
function createObjectivesLevel15(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(15);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x55706772616465436f707065724d696e65320000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 16 ----------------------------- */
function createObjectivesLevel16(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(16);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x55706772616465436f707065724d696e65330000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 17 ----------------------------- */
function createObjectivesLevel17(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(17);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x557067726164654c69746869756d4d696e653200000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 18 ----------------------------- */
function createObjectivesLevel18(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(18);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x557067726164654c69746869756d4d696e653300000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 19 ----------------------------- */
function createObjectivesLevel19(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(19);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x4275696c64476172616765000000000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 20 ----------------------------- */
function createObjectivesLevel20(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(20);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x5570677261646547617261676500000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 21 ----------------------------- */
function createObjectivesLevel21(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(21);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x4275696c64576f726b73686f7000000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 22 ----------------------------- */
function createObjectivesLevel22(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(22);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x55706772616465576f726b73686f700000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 23 ----------------------------- */
function createObjectivesLevel23(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(23);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x437265617465466c656574000000000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 24 ----------------------------- */
function createObjectivesLevel24(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(24);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x5472616e7366657246726f6d41737465726f6964000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 25 ----------------------------- */
function createObjectivesLevel25(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(25);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x5472616e7366657246726f6d466c656574000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 26 ----------------------------- */
function createObjectivesLevel26(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(26);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x53656e64466c6565740000000000000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 27 ----------------------------- */
function createObjectivesLevel27(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(27);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x426174746c6541737465726f6964000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 28 ----------------------------- */
function createObjectivesLevel28(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(28);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x4f70656e426174746c655265706f727400000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 29 ----------------------------- */
function createObjectivesLevel29(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(29);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x426174746c65466c656574000000000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 30 ----------------------------- */
function createObjectivesLevel30(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(30);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x4275696c64536869707961726400000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 31 ----------------------------- */
function createObjectivesLevel31(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(31);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x5570677261646553686970796172643200000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 32 ----------------------------- */
function createObjectivesLevel32(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(32);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x547261696e436f6c6f6e79536869700000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 33 ----------------------------- */
function createObjectivesLevel33(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(33);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x4465637279707441747461636b00000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 34 ----------------------------- */
function createObjectivesLevel34(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(34);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x4361707475726541737465726f69640000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 35 ----------------------------- */
function createObjectivesLevel35(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(35);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x436170747572654d6f746865726c6f646541737465726f696400000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 36 ----------------------------- */
function createObjectivesLevel36(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(36);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x4275696c64526172654d696e6500000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 37 ----------------------------- */
function createObjectivesLevel37(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(37);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x4561726e5072696d6f6469756d4f6e41737465726f6964000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 38 ----------------------------- */
function createObjectivesLevel38(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(38);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x43617074757265566f6c6174696c655368617264000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 39 ----------------------------- */
function createObjectivesLevel39(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(39);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x4578706c6f6465566f6c6174696c655368617264000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 40 ----------------------------- */
function createObjectivesLevel40(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(40);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x43617074757265576f726d686f6c6541737465726f6964000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 41 ----------------------------- */
function createObjectivesLevel41(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(41);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x54656c65706f72745265736f7572636573000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 42 ----------------------------- */
function createObjectivesLevel42(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(42);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x4275696c64537461726d61707065720000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 43 ----------------------------- */
function createObjectivesLevel43(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(43);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x55706772616465537461726d6170706572320000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 44 ----------------------------- */
function createObjectivesLevel44(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(44);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x437265617465466c656574320000000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 45 ----------------------------- */
function createObjectivesLevel45(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(45);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x446566656e6457697468466c6565740000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 46 ----------------------------- */
function createObjectivesLevel46(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(46);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x426c6f636b57697468466c656574000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 47 ----------------------------- */
function createObjectivesLevel47(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(47);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x4c616e64466c6565740000000000000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 48 ----------------------------- */
function createObjectivesLevel48(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(48);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x547261696e4d696e7574656d616e4d6172696e65000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 49 ----------------------------- */
function createObjectivesLevel49(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(49);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x547261696e54726964656e744d6172696e650000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 50 ----------------------------- */
function createObjectivesLevel50(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(50);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x547261696e4c696768746e696e67437261667400000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 51 ----------------------------- */
function createObjectivesLevel51(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(51);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x55706772616465556e6974000000000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 52 ----------------------------- */
function createObjectivesLevel52(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(52);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x4275696c6444726f6e65466163746f7279000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 53 ----------------------------- */
function createObjectivesLevel53(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(53);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x5570677261646544726f6e65466163746f727932000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 54 ----------------------------- */
function createObjectivesLevel54(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(54);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x547261696e416e76696c44726f6e650000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 55 ----------------------------- */
function createObjectivesLevel55(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(55);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x547261696e48616d6d657244726f6e6500000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 56 ----------------------------- */
function createObjectivesLevel56(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(56);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x547261696e416567697344726f6e650000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 57 ----------------------------- */
function createObjectivesLevel57(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(57);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x547261696e5374696e67657244726f6e65000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 58 ----------------------------- */
function createObjectivesLevel58(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(58);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x4275696c6448616e676172000000000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 59 ----------------------------- */
function createObjectivesLevel59(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(59);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x5570677261646548616e67657232000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 60 ----------------------------- */
function createObjectivesLevel60(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(60);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x4275696c64536869656c6447656e657261746f72000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 61 ----------------------------- */
function createObjectivesLevel61(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(61);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x55706772616465536869656c6447656e657261746f7232000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 62 ----------------------------- */
function createObjectivesLevel62(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(62);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x4275696c645661756c7400000000000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 63 ----------------------------- */
function createObjectivesLevel63(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(63);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x557067726164655661756c743200000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 64 ----------------------------- */
function createObjectivesLevel64(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(64);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x4275696c6453414d4c61756e6368657200000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 65 ----------------------------- */
function createObjectivesLevel65(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(65);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x5570677261646553414d4c61756e636865723200000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 66 ----------------------------- */
function createObjectivesLevel66(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(66);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x4275696c6453746f72616765556e697400000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 67 ----------------------------- */
function createObjectivesLevel67(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(67);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x5570677261646553746f72616765556e69743200000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 68 ----------------------------- */
function createObjectivesLevel68(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(68);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x4275696c6449726f6e506c617465466163746f72790000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 69 ----------------------------- */
function createObjectivesLevel69(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(69);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x5570677261646549726f6e506c617465466163746f7279320000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 70 ----------------------------- */
function createObjectivesLevel70(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(70);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x4275696c64416c6c6f79466163746f7279000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 71 ----------------------------- */
function createObjectivesLevel71(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(71);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x55706772616465416c6c6f79466163746f727932000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 72 ----------------------------- */
function createObjectivesLevel72(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(72);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x4275696c64505643656c6c466163746f72790000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 73 ----------------------------- */
function createObjectivesLevel73(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(73);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x55706772616465505643656c6c466163746f7279320000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 74 ----------------------------- */
function createObjectivesLevel74(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(74);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x4275696c64536f6c617250616e656c0000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 75 ----------------------------- */
function createObjectivesLevel75(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(75);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x55706772616465536f6c617250616e656c320000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 76 ----------------------------- */
function createObjectivesLevel76(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(76);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x4275696c644d61726b6574000000000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 77 ----------------------------- */
function createObjectivesLevel77(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(77);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x4d61726b65745377617000000000000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 78 ----------------------------- */
function createObjectivesLevel78(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(78);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x4a6f696e416c6c69616e63650000000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 79 ----------------------------- */
function createObjectivesLevel79(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(79);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x5072696d6f506c61796572000000000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

/* ----------------------------- LEVEL 80 ----------------------------- */
function createObjectivesLevel80(IStore store) {
  bytes32[] memory levelKeys = ObjectivesLevelKeys(80);
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_EnumToPrototype._tableId;

  (staticData[0], encodedLengths[0], dynamicData[0]) = P_EnumToPrototype.encode(
    0x4c454e4754480000000000000000000000000000000000000000000000000000
  );

  createPrototype(store, levelKeys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant BuildIronMinePrototypeId = "BuildIronMine";

function BuildIronMineKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = BuildIronMinePrototypeId;
  return _keyTuple;
}

function BuildIronMinePrototype(IStore store) {
  bytes32[] memory keys = BuildIronMineKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](1);
  p_resourcereward_resources[0] = 1;
  uint256[] memory p_resourcereward_amounts = new uint256[](1);
  p_resourcereward_amounts[0] = 50000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant BuildCopperMinePrototypeId = "BuildCopperMine";

function BuildCopperMineKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = BuildCopperMinePrototypeId;
  return _keyTuple;
}

function BuildCopperMinePrototype(IStore store) {
  bytes32[] memory keys = BuildCopperMineKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](1);
  p_resourcereward_resources[0] = 2;
  uint256[] memory p_resourcereward_amounts = new uint256[](1);
  p_resourcereward_amounts[0] = 50000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant BuildLithiumMinePrototypeId = "BuildLithiumMine";

function BuildLithiumMineKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = BuildLithiumMinePrototypeId;
  return _keyTuple;
}

function BuildLithiumMinePrototype(IStore store) {
  bytes32[] memory keys = BuildLithiumMineKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](1);
  p_resourcereward_resources[0] = 3;
  uint256[] memory p_resourcereward_amounts = new uint256[](1);
  p_resourcereward_amounts[0] = 50000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant UpgradeMainBase2PrototypeId = "UpgradeMainBase2";

function UpgradeMainBase2Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = UpgradeMainBase2PrototypeId;
  return _keyTuple;
}

function UpgradeMainBase2Prototype(IStore store) {
  bytes32[] memory keys = UpgradeMainBase2Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](3);
  p_resourcereward_resources[0] = 1;
  p_resourcereward_resources[1] = 2;
  p_resourcereward_resources[2] = 3;
  uint256[] memory p_resourcereward_amounts = new uint256[](3);
  p_resourcereward_amounts[0] = 100000000000000000000;
  p_resourcereward_amounts[1] = 100000000000000000000;
  p_resourcereward_amounts[2] = 100000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant UpgradeMainBase3PrototypeId = "UpgradeMainBase3";

function UpgradeMainBase3Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = UpgradeMainBase3PrototypeId;
  return _keyTuple;
}

function UpgradeMainBase3Prototype(IStore store) {
  bytes32[] memory keys = UpgradeMainBase3Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](3);
  p_resourcereward_resources[0] = 1;
  p_resourcereward_resources[1] = 2;
  p_resourcereward_resources[2] = 3;
  uint256[] memory p_resourcereward_amounts = new uint256[](3);
  p_resourcereward_amounts[0] = 250000000000000000000;
  p_resourcereward_amounts[1] = 250000000000000000000;
  p_resourcereward_amounts[2] = 250000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant UpgradeMainBase4PrototypeId = "UpgradeMainBase4";

function UpgradeMainBase4Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = UpgradeMainBase4PrototypeId;
  return _keyTuple;
}

function UpgradeMainBase4Prototype(IStore store) {
  bytes32[] memory keys = UpgradeMainBase4Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](3);
  p_resourcereward_resources[0] = 1;
  p_resourcereward_resources[1] = 2;
  p_resourcereward_resources[2] = 3;
  uint256[] memory p_resourcereward_amounts = new uint256[](3);
  p_resourcereward_amounts[0] = 250000000000000000000;
  p_resourcereward_amounts[1] = 250000000000000000000;
  p_resourcereward_amounts[2] = 250000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant UpgradeMainBase5PrototypeId = "UpgradeMainBase5";

function UpgradeMainBase5Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = UpgradeMainBase5PrototypeId;
  return _keyTuple;
}

function UpgradeMainBase5Prototype(IStore store) {
  bytes32[] memory keys = UpgradeMainBase5Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](3);
  p_resourcereward_resources[0] = 1;
  p_resourcereward_resources[1] = 2;
  p_resourcereward_resources[2] = 3;
  uint256[] memory p_resourcereward_amounts = new uint256[](3);
  p_resourcereward_amounts[0] = 250000000000000000000;
  p_resourcereward_amounts[1] = 250000000000000000000;
  p_resourcereward_amounts[2] = 250000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant ExpandBase2PrototypeId = "ExpandBase2";

function ExpandBase2Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = ExpandBase2PrototypeId;
  return _keyTuple;
}

function ExpandBase2Prototype(IStore store) {
  bytes32[] memory keys = ExpandBase2Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](3);
  p_resourcereward_resources[0] = 1;
  p_resourcereward_resources[1] = 2;
  p_resourcereward_resources[2] = 3;
  uint256[] memory p_resourcereward_amounts = new uint256[](3);
  p_resourcereward_amounts[0] = 100000000000000000000;
  p_resourcereward_amounts[1] = 100000000000000000000;
  p_resourcereward_amounts[2] = 100000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant ExpandBase3PrototypeId = "ExpandBase3";

function ExpandBase3Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = ExpandBase3PrototypeId;
  return _keyTuple;
}

function ExpandBase3Prototype(IStore store) {
  bytes32[] memory keys = ExpandBase3Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](3);
  p_resourcereward_resources[0] = 1;
  p_resourcereward_resources[1] = 2;
  p_resourcereward_resources[2] = 3;
  uint256[] memory p_resourcereward_amounts = new uint256[](3);
  p_resourcereward_amounts[0] = 250000000000000000000;
  p_resourcereward_amounts[1] = 250000000000000000000;
  p_resourcereward_amounts[2] = 250000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant ExpandBase4PrototypeId = "ExpandBase4";

function ExpandBase4Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = ExpandBase4PrototypeId;
  return _keyTuple;
}

function ExpandBase4Prototype(IStore store) {
  bytes32[] memory keys = ExpandBase4Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](3);
  p_resourcereward_resources[0] = 1;
  p_resourcereward_resources[1] = 2;
  p_resourcereward_resources[2] = 3;
  uint256[] memory p_resourcereward_amounts = new uint256[](3);
  p_resourcereward_amounts[0] = 250000000000000000000;
  p_resourcereward_amounts[1] = 250000000000000000000;
  p_resourcereward_amounts[2] = 250000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant UpgradeIronMine2PrototypeId = "UpgradeIronMine2";

function UpgradeIronMine2Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = UpgradeIronMine2PrototypeId;
  return _keyTuple;
}

function UpgradeIronMine2Prototype(IStore store) {
  bytes32[] memory keys = UpgradeIronMine2Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](1);
  p_resourcereward_resources[0] = 1;
  uint256[] memory p_resourcereward_amounts = new uint256[](1);
  p_resourcereward_amounts[0] = 100000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant UpgradeIronMine3PrototypeId = "UpgradeIronMine3";

function UpgradeIronMine3Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = UpgradeIronMine3PrototypeId;
  return _keyTuple;
}

function UpgradeIronMine3Prototype(IStore store) {
  bytes32[] memory keys = UpgradeIronMine3Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](1);
  p_resourcereward_resources[0] = 1;
  uint256[] memory p_resourcereward_amounts = new uint256[](1);
  p_resourcereward_amounts[0] = 250000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant UpgradeCopperMine2PrototypeId = "UpgradeCopperMine2";

function UpgradeCopperMine2Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = UpgradeCopperMine2PrototypeId;
  return _keyTuple;
}

function UpgradeCopperMine2Prototype(IStore store) {
  bytes32[] memory keys = UpgradeCopperMine2Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](1);
  p_resourcereward_resources[0] = 2;
  uint256[] memory p_resourcereward_amounts = new uint256[](1);
  p_resourcereward_amounts[0] = 100000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant UpgradeCopperMine3PrototypeId = "UpgradeCopperMine3";

function UpgradeCopperMine3Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = UpgradeCopperMine3PrototypeId;
  return _keyTuple;
}

function UpgradeCopperMine3Prototype(IStore store) {
  bytes32[] memory keys = UpgradeCopperMine3Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](1);
  p_resourcereward_resources[0] = 2;
  uint256[] memory p_resourcereward_amounts = new uint256[](1);
  p_resourcereward_amounts[0] = 250000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant UpgradeLithiumMine2PrototypeId = "UpgradeLithiumMine2";

function UpgradeLithiumMine2Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = UpgradeLithiumMine2PrototypeId;
  return _keyTuple;
}

function UpgradeLithiumMine2Prototype(IStore store) {
  bytes32[] memory keys = UpgradeLithiumMine2Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](1);
  p_resourcereward_resources[0] = 3;
  uint256[] memory p_resourcereward_amounts = new uint256[](1);
  p_resourcereward_amounts[0] = 100000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant UpgradeLithiumMine3PrototypeId = "UpgradeLithiumMine3";

function UpgradeLithiumMine3Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = UpgradeLithiumMine3PrototypeId;
  return _keyTuple;
}

function UpgradeLithiumMine3Prototype(IStore store) {
  bytes32[] memory keys = UpgradeLithiumMine3Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](1);
  p_resourcereward_resources[0] = 3;
  uint256[] memory p_resourcereward_amounts = new uint256[](1);
  p_resourcereward_amounts[0] = 250000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant BuildGaragePrototypeId = "BuildGarage";

function BuildGarageKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = BuildGaragePrototypeId;
  return _keyTuple;
}

function BuildGaragePrototype(IStore store) {
  bytes32[] memory keys = BuildGarageKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_UnitReward._tableId;

  bytes32[] memory p_unitreward_units = new bytes32[](3);
  p_unitreward_units[0] = 0x4d696e7574656d616e4d6172696e650000000000000000000000000000000000;
  p_unitreward_units[1] = 0x416e76696c44726f6e6500000000000000000000000000000000000000000000;
  p_unitreward_units[2] = 0x48616d6d657244726f6e65000000000000000000000000000000000000000000;
  uint256[] memory p_unitreward_amounts = new uint256[](3);
  p_unitreward_amounts[0] = 5;
  p_unitreward_amounts[1] = 5;
  p_unitreward_amounts[2] = 5;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_UnitReward.encode(p_unitreward_units, p_unitreward_amounts);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant UpgradeGaragePrototypeId = "UpgradeGarage";

function UpgradeGarageKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = UpgradeGaragePrototypeId;
  return _keyTuple;
}

function UpgradeGaragePrototype(IStore store) {
  bytes32[] memory keys = UpgradeGarageKeys();
  ResourceId[] memory tableIds = new ResourceId[](2);
  bytes[] memory staticData = new bytes[](2);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](2);
  bytes[] memory dynamicData = new bytes[](2);

  tableIds[0] = P_ResourceReward._tableId;
  tableIds[1] = P_UnitReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](3);
  p_resourcereward_resources[0] = 1;
  p_resourcereward_resources[1] = 2;
  p_resourcereward_resources[2] = 3;
  uint256[] memory p_resourcereward_amounts = new uint256[](3);
  p_resourcereward_amounts[0] = 50000000000000000000;
  p_resourcereward_amounts[1] = 50000000000000000000;
  p_resourcereward_amounts[2] = 50000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );
  bytes32[] memory p_unitreward_units = new bytes32[](1);
  p_unitreward_units[0] = 0x4c696768746e696e674372616674000000000000000000000000000000000000;
  uint256[] memory p_unitreward_amounts = new uint256[](1);
  p_unitreward_amounts[0] = 5;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_UnitReward.encode(p_unitreward_units, p_unitreward_amounts);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant BuildWorkshopPrototypeId = "BuildWorkshop";

function BuildWorkshopKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = BuildWorkshopPrototypeId;
  return _keyTuple;
}

function BuildWorkshopPrototype(IStore store) {
  bytes32[] memory keys = BuildWorkshopKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](3);
  p_resourcereward_resources[0] = 1;
  p_resourcereward_resources[1] = 2;
  p_resourcereward_resources[2] = 3;
  uint256[] memory p_resourcereward_amounts = new uint256[](3);
  p_resourcereward_amounts[0] = 150000000000000000000;
  p_resourcereward_amounts[1] = 100000000000000000000;
  p_resourcereward_amounts[2] = 150000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant UpgradeWorkshopPrototypeId = "UpgradeWorkshop";

function UpgradeWorkshopKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = UpgradeWorkshopPrototypeId;
  return _keyTuple;
}

function UpgradeWorkshopPrototype(IStore store) {
  bytes32[] memory keys = UpgradeWorkshopKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](3);
  p_resourcereward_resources[0] = 1;
  p_resourcereward_resources[1] = 2;
  p_resourcereward_resources[2] = 3;
  uint256[] memory p_resourcereward_amounts = new uint256[](3);
  p_resourcereward_amounts[0] = 250000000000000000000;
  p_resourcereward_amounts[1] = 150000000000000000000;
  p_resourcereward_amounts[2] = 250000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant CreateFleetPrototypeId = "CreateFleet";

function CreateFleetKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = CreateFleetPrototypeId;
  return _keyTuple;
}

function CreateFleetPrototype(IStore store) {
  bytes32[] memory keys = CreateFleetKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](3);
  p_resourcereward_resources[0] = 1;
  p_resourcereward_resources[1] = 2;
  p_resourcereward_resources[2] = 3;
  uint256[] memory p_resourcereward_amounts = new uint256[](3);
  p_resourcereward_amounts[0] = 25000000000000000000;
  p_resourcereward_amounts[1] = 25000000000000000000;
  p_resourcereward_amounts[2] = 25000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant TransferFromAsteroidPrototypeId = "TransferFromAsteroid";

function TransferFromAsteroidKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = TransferFromAsteroidPrototypeId;
  return _keyTuple;
}

function TransferFromAsteroidPrototype(IStore store) {
  bytes32[] memory keys = TransferFromAsteroidKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](3);
  p_resourcereward_resources[0] = 1;
  p_resourcereward_resources[1] = 2;
  p_resourcereward_resources[2] = 3;
  uint256[] memory p_resourcereward_amounts = new uint256[](3);
  p_resourcereward_amounts[0] = 25000000000000000000;
  p_resourcereward_amounts[1] = 25000000000000000000;
  p_resourcereward_amounts[2] = 25000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant TransferFromFleetPrototypeId = "TransferFromFleet";

function TransferFromFleetKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = TransferFromFleetPrototypeId;
  return _keyTuple;
}

function TransferFromFleetPrototype(IStore store) {
  bytes32[] memory keys = TransferFromFleetKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](3);
  p_resourcereward_resources[0] = 1;
  p_resourcereward_resources[1] = 2;
  p_resourcereward_resources[2] = 3;
  uint256[] memory p_resourcereward_amounts = new uint256[](3);
  p_resourcereward_amounts[0] = 25000000000000000000;
  p_resourcereward_amounts[1] = 25000000000000000000;
  p_resourcereward_amounts[2] = 25000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant SendFleetPrototypeId = "SendFleet";

function SendFleetKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = SendFleetPrototypeId;
  return _keyTuple;
}

function SendFleetPrototype(IStore store) {
  bytes32[] memory keys = SendFleetKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](3);
  p_resourcereward_resources[0] = 1;
  p_resourcereward_resources[1] = 2;
  p_resourcereward_resources[2] = 3;
  uint256[] memory p_resourcereward_amounts = new uint256[](3);
  p_resourcereward_amounts[0] = 25000000000000000000;
  p_resourcereward_amounts[1] = 25000000000000000000;
  p_resourcereward_amounts[2] = 25000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant BattleAsteroidPrototypeId = "BattleAsteroid";

function BattleAsteroidKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = BattleAsteroidPrototypeId;
  return _keyTuple;
}

function BattleAsteroidPrototype(IStore store) {
  bytes32[] memory keys = BattleAsteroidKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](3);
  p_resourcereward_resources[0] = 1;
  p_resourcereward_resources[1] = 2;
  p_resourcereward_resources[2] = 3;
  uint256[] memory p_resourcereward_amounts = new uint256[](3);
  p_resourcereward_amounts[0] = 25000000000000000000;
  p_resourcereward_amounts[1] = 25000000000000000000;
  p_resourcereward_amounts[2] = 25000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant OpenBattleReportPrototypeId = "OpenBattleReport";

function OpenBattleReportKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = OpenBattleReportPrototypeId;
  return _keyTuple;
}

function OpenBattleReportPrototype(IStore store) {
  bytes32[] memory keys = OpenBattleReportKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](3);
  p_resourcereward_resources[0] = 1;
  p_resourcereward_resources[1] = 2;
  p_resourcereward_resources[2] = 3;
  uint256[] memory p_resourcereward_amounts = new uint256[](3);
  p_resourcereward_amounts[0] = 25000000000000000000;
  p_resourcereward_amounts[1] = 25000000000000000000;
  p_resourcereward_amounts[2] = 25000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant BattleFleetPrototypeId = "BattleFleet";

function BattleFleetKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = BattleFleetPrototypeId;
  return _keyTuple;
}

function BattleFleetPrototype(IStore store) {
  bytes32[] memory keys = BattleFleetKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](3);
  p_resourcereward_resources[0] = 1;
  p_resourcereward_resources[1] = 2;
  p_resourcereward_resources[2] = 3;
  uint256[] memory p_resourcereward_amounts = new uint256[](3);
  p_resourcereward_amounts[0] = 250000000000000000000;
  p_resourcereward_amounts[1] = 250000000000000000000;
  p_resourcereward_amounts[2] = 250000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant BuildShipyardPrototypeId = "BuildShipyard";

function BuildShipyardKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = BuildShipyardPrototypeId;
  return _keyTuple;
}

function BuildShipyardPrototype(IStore store) {
  bytes32[] memory keys = BuildShipyardKeys();
  ResourceId[] memory tableIds = new ResourceId[](2);
  bytes[] memory staticData = new bytes[](2);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](2);
  bytes[] memory dynamicData = new bytes[](2);

  tableIds[0] = P_ResourceReward._tableId;
  tableIds[1] = P_UnitReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](3);
  p_resourcereward_resources[0] = 8;
  p_resourcereward_resources[1] = 9;
  p_resourcereward_resources[2] = 10;
  uint256[] memory p_resourcereward_amounts = new uint256[](3);
  p_resourcereward_amounts[0] = 100000000000000000000;
  p_resourcereward_amounts[1] = 100000000000000000000;
  p_resourcereward_amounts[2] = 100000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );
  bytes32[] memory p_unitreward_units = new bytes32[](1);
  p_unitreward_units[0] = 0x4c696768746e696e674372616674000000000000000000000000000000000000;
  uint256[] memory p_unitreward_amounts = new uint256[](1);
  p_unitreward_amounts[0] = 10;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_UnitReward.encode(p_unitreward_units, p_unitreward_amounts);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant UpgradeShipyard2PrototypeId = "UpgradeShipyard2";

function UpgradeShipyard2Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = UpgradeShipyard2PrototypeId;
  return _keyTuple;
}

function UpgradeShipyard2Prototype(IStore store) {
  bytes32[] memory keys = UpgradeShipyard2Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](3);
  p_resourcereward_resources[0] = 8;
  p_resourcereward_resources[1] = 9;
  p_resourcereward_resources[2] = 10;
  uint256[] memory p_resourcereward_amounts = new uint256[](3);
  p_resourcereward_amounts[0] = 25000000000000000000;
  p_resourcereward_amounts[1] = 25000000000000000000;
  p_resourcereward_amounts[2] = 25000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant TrainColonyShipPrototypeId = "TrainColonyShip";

function TrainColonyShipKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = TrainColonyShipPrototypeId;
  return _keyTuple;
}

function TrainColonyShipPrototype(IStore store) {
  bytes32[] memory keys = TrainColonyShipKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](3);
  p_resourcereward_resources[0] = 8;
  p_resourcereward_resources[1] = 9;
  p_resourcereward_resources[2] = 10;
  uint256[] memory p_resourcereward_amounts = new uint256[](3);
  p_resourcereward_amounts[0] = 100000000000000000000;
  p_resourcereward_amounts[1] = 100000000000000000000;
  p_resourcereward_amounts[2] = 100000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant DecryptAttackPrototypeId = "DecryptAttack";

function DecryptAttackKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = DecryptAttackPrototypeId;
  return _keyTuple;
}

function DecryptAttackPrototype(IStore store) {
  bytes32[] memory keys = DecryptAttackKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](3);
  p_resourcereward_resources[0] = 8;
  p_resourcereward_resources[1] = 9;
  p_resourcereward_resources[2] = 10;
  uint256[] memory p_resourcereward_amounts = new uint256[](3);
  p_resourcereward_amounts[0] = 25000000000000000000;
  p_resourcereward_amounts[1] = 25000000000000000000;
  p_resourcereward_amounts[2] = 25000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant CaptureAsteroidPrototypeId = "CaptureAsteroid";

function CaptureAsteroidKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = CaptureAsteroidPrototypeId;
  return _keyTuple;
}

function CaptureAsteroidPrototype(IStore store) {
  bytes32[] memory keys = CaptureAsteroidKeys();
  ResourceId[] memory tableIds = new ResourceId[](2);
  bytes[] memory staticData = new bytes[](2);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](2);
  bytes[] memory dynamicData = new bytes[](2);

  tableIds[0] = P_ResourceReward._tableId;
  tableIds[1] = P_UnitReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](3);
  p_resourcereward_resources[0] = 8;
  p_resourcereward_resources[1] = 9;
  p_resourcereward_resources[2] = 10;
  uint256[] memory p_resourcereward_amounts = new uint256[](3);
  p_resourcereward_amounts[0] = 100000000000000000000;
  p_resourcereward_amounts[1] = 100000000000000000000;
  p_resourcereward_amounts[2] = 100000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );
  bytes32[] memory p_unitreward_units = new bytes32[](1);
  p_unitreward_units[0] = 0x4c696768746e696e674372616674000000000000000000000000000000000000;
  uint256[] memory p_unitreward_amounts = new uint256[](1);
  p_unitreward_amounts[0] = 10;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_UnitReward.encode(p_unitreward_units, p_unitreward_amounts);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant CaptureMotherlodeAsteroidPrototypeId = "CaptureMotherlodeAsteroid";

function CaptureMotherlodeAsteroidKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = CaptureMotherlodeAsteroidPrototypeId;
  return _keyTuple;
}

function CaptureMotherlodeAsteroidPrototype(IStore store) {
  bytes32[] memory keys = CaptureMotherlodeAsteroidKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](3);
  p_resourcereward_resources[0] = 4;
  p_resourcereward_resources[1] = 5;
  p_resourcereward_resources[2] = 7;
  uint256[] memory p_resourcereward_amounts = new uint256[](3);
  p_resourcereward_amounts[0] = 25000000000000000000;
  p_resourcereward_amounts[1] = 25000000000000000000;
  p_resourcereward_amounts[2] = 25000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant ExtractMotherlodeResourcePrototypeId = "ExtractMotherlodeResource";

function ExtractMotherlodeResourceKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = ExtractMotherlodeResourcePrototypeId;
  return _keyTuple;
}

function ExtractMotherlodeResourcePrototype(IStore store) {
  bytes32[] memory keys = ExtractMotherlodeResourceKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](3);
  p_resourcereward_resources[0] = 4;
  p_resourcereward_resources[1] = 5;
  p_resourcereward_resources[2] = 7;
  uint256[] memory p_resourcereward_amounts = new uint256[](3);
  p_resourcereward_amounts[0] = 10000000000000000000;
  p_resourcereward_amounts[1] = 10000000000000000000;
  p_resourcereward_amounts[2] = 10000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant EarnPrimodiumOnAsteroidPrototypeId = "EarnPrimodiumOnAsteroid";

function EarnPrimodiumOnAsteroidKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = EarnPrimodiumOnAsteroidPrototypeId;
  return _keyTuple;
}

function EarnPrimodiumOnAsteroidPrototype(IStore store) {
  bytes32[] memory keys = EarnPrimodiumOnAsteroidKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](1);
  p_resourcereward_resources[0] = 6;
  uint256[] memory p_resourcereward_amounts = new uint256[](1);
  p_resourcereward_amounts[0] = 10000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant EarnPrimodiumOnShardPrototypeId = "EarnPrimodiumOnShard";

function EarnPrimodiumOnShardKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = EarnPrimodiumOnShardPrototypeId;
  return _keyTuple;
}

function EarnPrimodiumOnShardPrototype(IStore store) {
  bytes32[] memory keys = EarnPrimodiumOnShardKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](1);
  p_resourcereward_resources[0] = 6;
  uint256[] memory p_resourcereward_amounts = new uint256[](1);
  p_resourcereward_amounts[0] = 10000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant ExplodeShardPrototypeId = "ExplodeShard";

function ExplodeShardKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = ExplodeShardPrototypeId;
  return _keyTuple;
}

function ExplodeShardPrototype(IStore store) {
  bytes32[] memory keys = ExplodeShardKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](1);
  p_resourcereward_resources[0] = 6;
  uint256[] memory p_resourcereward_amounts = new uint256[](1);
  p_resourcereward_amounts[0] = 25000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant CaptureWormholeAsteroidPrototypeId = "CaptureWormholeAsteroid";

function CaptureWormholeAsteroidKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = CaptureWormholeAsteroidPrototypeId;
  return _keyTuple;
}

function CaptureWormholeAsteroidPrototype(IStore store) {
  bytes32[] memory keys = CaptureWormholeAsteroidKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](3);
  p_resourcereward_resources[0] = 8;
  p_resourcereward_resources[1] = 9;
  p_resourcereward_resources[2] = 10;
  uint256[] memory p_resourcereward_amounts = new uint256[](3);
  p_resourcereward_amounts[0] = 100000000000000000000;
  p_resourcereward_amounts[1] = 100000000000000000000;
  p_resourcereward_amounts[2] = 100000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant TeleportResourcesPrototypeId = "TeleportResources";

function TeleportResourcesKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = TeleportResourcesPrototypeId;
  return _keyTuple;
}

function TeleportResourcesPrototype(IStore store) {
  bytes32[] memory keys = TeleportResourcesKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_UnitReward._tableId;

  bytes32[] memory p_unitreward_units = new bytes32[](1);
  p_unitreward_units[0] = 0x4c696768746e696e674372616674000000000000000000000000000000000000;
  uint256[] memory p_unitreward_amounts = new uint256[](1);
  p_unitreward_amounts[0] = 10;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_UnitReward.encode(p_unitreward_units, p_unitreward_amounts);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant BuildStarmapperPrototypeId = "BuildStarmapper";

function BuildStarmapperKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = BuildStarmapperPrototypeId;
  return _keyTuple;
}

function BuildStarmapperPrototype(IStore store) {
  bytes32[] memory keys = BuildStarmapperKeys();
  ResourceId[] memory tableIds = new ResourceId[](2);
  bytes[] memory staticData = new bytes[](2);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](2);
  bytes[] memory dynamicData = new bytes[](2);

  tableIds[0] = P_ResourceReward._tableId;
  tableIds[1] = P_UnitReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](3);
  p_resourcereward_resources[0] = 1;
  p_resourcereward_resources[1] = 2;
  p_resourcereward_resources[2] = 3;
  uint256[] memory p_resourcereward_amounts = new uint256[](3);
  p_resourcereward_amounts[0] = 25000000000000000000;
  p_resourcereward_amounts[1] = 25000000000000000000;
  p_resourcereward_amounts[2] = 25000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );
  bytes32[] memory p_unitreward_units = new bytes32[](1);
  p_unitreward_units[0] = 0x4c696768746e696e674372616674000000000000000000000000000000000000;
  uint256[] memory p_unitreward_amounts = new uint256[](1);
  p_unitreward_amounts[0] = 10;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_UnitReward.encode(p_unitreward_units, p_unitreward_amounts);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant UpgradeStarmapper2PrototypeId = "UpgradeStarmapper2";

function UpgradeStarmapper2Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = UpgradeStarmapper2PrototypeId;
  return _keyTuple;
}

function UpgradeStarmapper2Prototype(IStore store) {
  bytes32[] memory keys = UpgradeStarmapper2Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](3);
  p_resourcereward_resources[0] = 8;
  p_resourcereward_resources[1] = 9;
  p_resourcereward_resources[2] = 10;
  uint256[] memory p_resourcereward_amounts = new uint256[](3);
  p_resourcereward_amounts[0] = 25000000000000000000;
  p_resourcereward_amounts[1] = 25000000000000000000;
  p_resourcereward_amounts[2] = 25000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant DefendWithFleetPrototypeId = "DefendWithFleet";

function DefendWithFleetKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = DefendWithFleetPrototypeId;
  return _keyTuple;
}

function DefendWithFleetPrototype(IStore store) {
  bytes32[] memory keys = DefendWithFleetKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](3);
  p_resourcereward_resources[0] = 1;
  p_resourcereward_resources[1] = 2;
  p_resourcereward_resources[2] = 3;
  uint256[] memory p_resourcereward_amounts = new uint256[](3);
  p_resourcereward_amounts[0] = 25000000000000000000;
  p_resourcereward_amounts[1] = 25000000000000000000;
  p_resourcereward_amounts[2] = 25000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant BlockWithFleetPrototypeId = "BlockWithFleet";

function BlockWithFleetKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = BlockWithFleetPrototypeId;
  return _keyTuple;
}

function BlockWithFleetPrototype(IStore store) {
  bytes32[] memory keys = BlockWithFleetKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](3);
  p_resourcereward_resources[0] = 1;
  p_resourcereward_resources[1] = 2;
  p_resourcereward_resources[2] = 3;
  uint256[] memory p_resourcereward_amounts = new uint256[](3);
  p_resourcereward_amounts[0] = 25000000000000000000;
  p_resourcereward_amounts[1] = 25000000000000000000;
  p_resourcereward_amounts[2] = 25000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant LandFleetPrototypeId = "LandFleet";

function LandFleetKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = LandFleetPrototypeId;
  return _keyTuple;
}

function LandFleetPrototype(IStore store) {
  bytes32[] memory keys = LandFleetKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](3);
  p_resourcereward_resources[0] = 1;
  p_resourcereward_resources[1] = 2;
  p_resourcereward_resources[2] = 3;
  uint256[] memory p_resourcereward_amounts = new uint256[](3);
  p_resourcereward_amounts[0] = 25000000000000000000;
  p_resourcereward_amounts[1] = 25000000000000000000;
  p_resourcereward_amounts[2] = 25000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant TrainMinutemanMarinePrototypeId = "TrainMinutemanMarine";

function TrainMinutemanMarineKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = TrainMinutemanMarinePrototypeId;
  return _keyTuple;
}

function TrainMinutemanMarinePrototype(IStore store) {
  bytes32[] memory keys = TrainMinutemanMarineKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](3);
  p_resourcereward_resources[0] = 1;
  p_resourcereward_resources[1] = 2;
  p_resourcereward_resources[2] = 3;
  uint256[] memory p_resourcereward_amounts = new uint256[](3);
  p_resourcereward_amounts[0] = 100000000000000000000;
  p_resourcereward_amounts[1] = 100000000000000000000;
  p_resourcereward_amounts[2] = 100000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant TrainTridentMarinePrototypeId = "TrainTridentMarine";

function TrainTridentMarineKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = TrainTridentMarinePrototypeId;
  return _keyTuple;
}

function TrainTridentMarinePrototype(IStore store) {
  bytes32[] memory keys = TrainTridentMarineKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](1);
  p_resourcereward_resources[0] = 9;
  uint256[] memory p_resourcereward_amounts = new uint256[](1);
  p_resourcereward_amounts[0] = 100000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant TrainLightningCraftPrototypeId = "TrainLightningCraft";

function TrainLightningCraftKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = TrainLightningCraftPrototypeId;
  return _keyTuple;
}

function TrainLightningCraftPrototype(IStore store) {
  bytes32[] memory keys = TrainLightningCraftKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](1);
  p_resourcereward_resources[0] = 6;
  uint256[] memory p_resourcereward_amounts = new uint256[](1);
  p_resourcereward_amounts[0] = 10000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant UpgradeUnitPrototypeId = "UpgradeUnit";

function UpgradeUnitKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = UpgradeUnitPrototypeId;
  return _keyTuple;
}

function UpgradeUnitPrototype(IStore store) {
  bytes32[] memory keys = UpgradeUnitKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](4);
  p_resourcereward_resources[0] = 4;
  p_resourcereward_resources[1] = 5;
  p_resourcereward_resources[2] = 7;
  p_resourcereward_resources[3] = 6;
  uint256[] memory p_resourcereward_amounts = new uint256[](4);
  p_resourcereward_amounts[0] = 10000000000000000000;
  p_resourcereward_amounts[1] = 10000000000000000000;
  p_resourcereward_amounts[2] = 10000000000000000000;
  p_resourcereward_amounts[3] = 5000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant BuildDroneFactoryPrototypeId = "BuildDroneFactory";

function BuildDroneFactoryKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = BuildDroneFactoryPrototypeId;
  return _keyTuple;
}

function BuildDroneFactoryPrototype(IStore store) {
  bytes32[] memory keys = BuildDroneFactoryKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](3);
  p_resourcereward_resources[0] = 8;
  p_resourcereward_resources[1] = 9;
  p_resourcereward_resources[2] = 10;
  uint256[] memory p_resourcereward_amounts = new uint256[](3);
  p_resourcereward_amounts[0] = 100000000000000000000;
  p_resourcereward_amounts[1] = 100000000000000000000;
  p_resourcereward_amounts[2] = 100000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant UpgradeDroneFactory2PrototypeId = "UpgradeDroneFactory2";

function UpgradeDroneFactory2Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = UpgradeDroneFactory2PrototypeId;
  return _keyTuple;
}

function UpgradeDroneFactory2Prototype(IStore store) {
  bytes32[] memory keys = UpgradeDroneFactory2Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](3);
  p_resourcereward_resources[0] = 8;
  p_resourcereward_resources[1] = 9;
  p_resourcereward_resources[2] = 10;
  uint256[] memory p_resourcereward_amounts = new uint256[](3);
  p_resourcereward_amounts[0] = 25000000000000000000;
  p_resourcereward_amounts[1] = 25000000000000000000;
  p_resourcereward_amounts[2] = 25000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant TrainAnvilDronePrototypeId = "TrainAnvilDrone";

function TrainAnvilDroneKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = TrainAnvilDronePrototypeId;
  return _keyTuple;
}

function TrainAnvilDronePrototype(IStore store) {
  bytes32[] memory keys = TrainAnvilDroneKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](1);
  p_resourcereward_resources[0] = 8;
  uint256[] memory p_resourcereward_amounts = new uint256[](1);
  p_resourcereward_amounts[0] = 25000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant TrainHammerDronePrototypeId = "TrainHammerDrone";

function TrainHammerDroneKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = TrainHammerDronePrototypeId;
  return _keyTuple;
}

function TrainHammerDronePrototype(IStore store) {
  bytes32[] memory keys = TrainHammerDroneKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](1);
  p_resourcereward_resources[0] = 10;
  uint256[] memory p_resourcereward_amounts = new uint256[](1);
  p_resourcereward_amounts[0] = 25000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant TrainAegisDronePrototypeId = "TrainAegisDrone";

function TrainAegisDroneKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = TrainAegisDronePrototypeId;
  return _keyTuple;
}

function TrainAegisDronePrototype(IStore store) {
  bytes32[] memory keys = TrainAegisDroneKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](1);
  p_resourcereward_resources[0] = 4;
  uint256[] memory p_resourcereward_amounts = new uint256[](1);
  p_resourcereward_amounts[0] = 10000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant TrainStingerDronePrototypeId = "TrainStingerDrone";

function TrainStingerDroneKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = TrainStingerDronePrototypeId;
  return _keyTuple;
}

function TrainStingerDronePrototype(IStore store) {
  bytes32[] memory keys = TrainStingerDroneKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](1);
  p_resourcereward_resources[0] = 7;
  uint256[] memory p_resourcereward_amounts = new uint256[](1);
  p_resourcereward_amounts[0] = 10000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant BuildHangarPrototypeId = "BuildHangar";

function BuildHangarKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = BuildHangarPrototypeId;
  return _keyTuple;
}

function BuildHangarPrototype(IStore store) {
  bytes32[] memory keys = BuildHangarKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_UnitReward._tableId;

  bytes32[] memory p_unitreward_units = new bytes32[](3);
  p_unitreward_units[0] = 0x416e76696c44726f6e6500000000000000000000000000000000000000000000;
  p_unitreward_units[1] = 0x48616d6d657244726f6e65000000000000000000000000000000000000000000;
  p_unitreward_units[2] = 0x4c696768746e696e674372616674000000000000000000000000000000000000;
  uint256[] memory p_unitreward_amounts = new uint256[](3);
  p_unitreward_amounts[0] = 5;
  p_unitreward_amounts[1] = 5;
  p_unitreward_amounts[2] = 10;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_UnitReward.encode(p_unitreward_units, p_unitreward_amounts);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant UpgradeHanger2PrototypeId = "UpgradeHanger2";

function UpgradeHanger2Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = UpgradeHanger2PrototypeId;
  return _keyTuple;
}

function UpgradeHanger2Prototype(IStore store) {
  bytes32[] memory keys = UpgradeHanger2Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](3);
  p_resourcereward_resources[0] = 8;
  p_resourcereward_resources[1] = 9;
  p_resourcereward_resources[2] = 10;
  uint256[] memory p_resourcereward_amounts = new uint256[](3);
  p_resourcereward_amounts[0] = 25000000000000000000;
  p_resourcereward_amounts[1] = 25000000000000000000;
  p_resourcereward_amounts[2] = 25000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant BuildShieldGeneratorPrototypeId = "BuildShieldGenerator";

function BuildShieldGeneratorKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = BuildShieldGeneratorPrototypeId;
  return _keyTuple;
}

function BuildShieldGeneratorPrototype(IStore store) {
  bytes32[] memory keys = BuildShieldGeneratorKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](3);
  p_resourcereward_resources[0] = 8;
  p_resourcereward_resources[1] = 9;
  p_resourcereward_resources[2] = 10;
  uint256[] memory p_resourcereward_amounts = new uint256[](3);
  p_resourcereward_amounts[0] = 100000000000000000000;
  p_resourcereward_amounts[1] = 100000000000000000000;
  p_resourcereward_amounts[2] = 100000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant UpgradeShieldGenerator2PrototypeId = "UpgradeShieldGenerator2";

function UpgradeShieldGenerator2Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = UpgradeShieldGenerator2PrototypeId;
  return _keyTuple;
}

function UpgradeShieldGenerator2Prototype(IStore store) {
  bytes32[] memory keys = UpgradeShieldGenerator2Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](3);
  p_resourcereward_resources[0] = 8;
  p_resourcereward_resources[1] = 9;
  p_resourcereward_resources[2] = 10;
  uint256[] memory p_resourcereward_amounts = new uint256[](3);
  p_resourcereward_amounts[0] = 100000000000000000000;
  p_resourcereward_amounts[1] = 100000000000000000000;
  p_resourcereward_amounts[2] = 100000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant BuildVaultPrototypeId = "BuildVault";

function BuildVaultKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = BuildVaultPrototypeId;
  return _keyTuple;
}

function BuildVaultPrototype(IStore store) {
  bytes32[] memory keys = BuildVaultKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_UnitReward._tableId;

  bytes32[] memory p_unitreward_units = new bytes32[](1);
  p_unitreward_units[0] = 0x416e76696c44726f6e6500000000000000000000000000000000000000000000;
  uint256[] memory p_unitreward_amounts = new uint256[](1);
  p_unitreward_amounts[0] = 5;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_UnitReward.encode(p_unitreward_units, p_unitreward_amounts);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant UpgradeVault2PrototypeId = "UpgradeVault2";

function UpgradeVault2Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = UpgradeVault2PrototypeId;
  return _keyTuple;
}

function UpgradeVault2Prototype(IStore store) {
  bytes32[] memory keys = UpgradeVault2Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](3);
  p_resourcereward_resources[0] = 8;
  p_resourcereward_resources[1] = 9;
  p_resourcereward_resources[2] = 10;
  uint256[] memory p_resourcereward_amounts = new uint256[](3);
  p_resourcereward_amounts[0] = 25000000000000000000;
  p_resourcereward_amounts[1] = 25000000000000000000;
  p_resourcereward_amounts[2] = 25000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant BuildSAMLauncherPrototypeId = "BuildSAMLauncher";

function BuildSAMLauncherKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = BuildSAMLauncherPrototypeId;
  return _keyTuple;
}

function BuildSAMLauncherPrototype(IStore store) {
  bytes32[] memory keys = BuildSAMLauncherKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_UnitReward._tableId;

  bytes32[] memory p_unitreward_units = new bytes32[](1);
  p_unitreward_units[0] = 0x48616d6d657244726f6e65000000000000000000000000000000000000000000;
  uint256[] memory p_unitreward_amounts = new uint256[](1);
  p_unitreward_amounts[0] = 5;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_UnitReward.encode(p_unitreward_units, p_unitreward_amounts);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant UpgradeSAMLauncher2PrototypeId = "UpgradeSAMLauncher2";

function UpgradeSAMLauncher2Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = UpgradeSAMLauncher2PrototypeId;
  return _keyTuple;
}

function UpgradeSAMLauncher2Prototype(IStore store) {
  bytes32[] memory keys = UpgradeSAMLauncher2Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](3);
  p_resourcereward_resources[0] = 8;
  p_resourcereward_resources[1] = 9;
  p_resourcereward_resources[2] = 10;
  uint256[] memory p_resourcereward_amounts = new uint256[](3);
  p_resourcereward_amounts[0] = 25000000000000000000;
  p_resourcereward_amounts[1] = 25000000000000000000;
  p_resourcereward_amounts[2] = 25000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant BuildStorageUnitPrototypeId = "BuildStorageUnit";

function BuildStorageUnitKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = BuildStorageUnitPrototypeId;
  return _keyTuple;
}

function BuildStorageUnitPrototype(IStore store) {
  bytes32[] memory keys = BuildStorageUnitKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](3);
  p_resourcereward_resources[0] = 1;
  p_resourcereward_resources[1] = 2;
  p_resourcereward_resources[2] = 3;
  uint256[] memory p_resourcereward_amounts = new uint256[](3);
  p_resourcereward_amounts[0] = 100000000000000000000;
  p_resourcereward_amounts[1] = 100000000000000000000;
  p_resourcereward_amounts[2] = 100000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant UpgradeStorageUnit2PrototypeId = "UpgradeStorageUnit2";

function UpgradeStorageUnit2Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = UpgradeStorageUnit2PrototypeId;
  return _keyTuple;
}

function UpgradeStorageUnit2Prototype(IStore store) {
  bytes32[] memory keys = UpgradeStorageUnit2Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](3);
  p_resourcereward_resources[0] = 1;
  p_resourcereward_resources[1] = 2;
  p_resourcereward_resources[2] = 3;
  uint256[] memory p_resourcereward_amounts = new uint256[](3);
  p_resourcereward_amounts[0] = 200000000000000000000;
  p_resourcereward_amounts[1] = 200000000000000000000;
  p_resourcereward_amounts[2] = 200000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant BuildIronPlateFactoryPrototypeId = "BuildIronPlateFactory";

function BuildIronPlateFactoryKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = BuildIronPlateFactoryPrototypeId;
  return _keyTuple;
}

function BuildIronPlateFactoryPrototype(IStore store) {
  bytes32[] memory keys = BuildIronPlateFactoryKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](3);
  p_resourcereward_resources[0] = 8;
  p_resourcereward_resources[1] = 9;
  p_resourcereward_resources[2] = 10;
  uint256[] memory p_resourcereward_amounts = new uint256[](3);
  p_resourcereward_amounts[0] = 25000000000000000000;
  p_resourcereward_amounts[1] = 25000000000000000000;
  p_resourcereward_amounts[2] = 25000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant UpgradeIronPlateFactory2PrototypeId = "UpgradeIronPlateFactory2";

function UpgradeIronPlateFactory2Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = UpgradeIronPlateFactory2PrototypeId;
  return _keyTuple;
}

function UpgradeIronPlateFactory2Prototype(IStore store) {
  bytes32[] memory keys = UpgradeIronPlateFactory2Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](1);
  p_resourcereward_resources[0] = 8;
  uint256[] memory p_resourcereward_amounts = new uint256[](1);
  p_resourcereward_amounts[0] = 50000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant BuildAlloyFactoryPrototypeId = "BuildAlloyFactory";

function BuildAlloyFactoryKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = BuildAlloyFactoryPrototypeId;
  return _keyTuple;
}

function BuildAlloyFactoryPrototype(IStore store) {
  bytes32[] memory keys = BuildAlloyFactoryKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](3);
  p_resourcereward_resources[0] = 8;
  p_resourcereward_resources[1] = 9;
  p_resourcereward_resources[2] = 10;
  uint256[] memory p_resourcereward_amounts = new uint256[](3);
  p_resourcereward_amounts[0] = 25000000000000000000;
  p_resourcereward_amounts[1] = 25000000000000000000;
  p_resourcereward_amounts[2] = 25000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant UpgradeAlloyFactory2PrototypeId = "UpgradeAlloyFactory2";

function UpgradeAlloyFactory2Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = UpgradeAlloyFactory2PrototypeId;
  return _keyTuple;
}

function UpgradeAlloyFactory2Prototype(IStore store) {
  bytes32[] memory keys = UpgradeAlloyFactory2Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](1);
  p_resourcereward_resources[0] = 9;
  uint256[] memory p_resourcereward_amounts = new uint256[](1);
  p_resourcereward_amounts[0] = 50000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant BuildPVCellFactoryPrototypeId = "BuildPVCellFactory";

function BuildPVCellFactoryKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = BuildPVCellFactoryPrototypeId;
  return _keyTuple;
}

function BuildPVCellFactoryPrototype(IStore store) {
  bytes32[] memory keys = BuildPVCellFactoryKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](3);
  p_resourcereward_resources[0] = 8;
  p_resourcereward_resources[1] = 9;
  p_resourcereward_resources[2] = 10;
  uint256[] memory p_resourcereward_amounts = new uint256[](3);
  p_resourcereward_amounts[0] = 25000000000000000000;
  p_resourcereward_amounts[1] = 25000000000000000000;
  p_resourcereward_amounts[2] = 25000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant UpgradePVCellFactory2PrototypeId = "UpgradePVCellFactory2";

function UpgradePVCellFactory2Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = UpgradePVCellFactory2PrototypeId;
  return _keyTuple;
}

function UpgradePVCellFactory2Prototype(IStore store) {
  bytes32[] memory keys = UpgradePVCellFactory2Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](1);
  p_resourcereward_resources[0] = 10;
  uint256[] memory p_resourcereward_amounts = new uint256[](1);
  p_resourcereward_amounts[0] = 50000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant BuildSolarPanelPrototypeId = "BuildSolarPanel";

function BuildSolarPanelKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = BuildSolarPanelPrototypeId;
  return _keyTuple;
}

function BuildSolarPanelPrototype(IStore store) {
  bytes32[] memory keys = BuildSolarPanelKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](3);
  p_resourcereward_resources[0] = 1;
  p_resourcereward_resources[1] = 2;
  p_resourcereward_resources[2] = 3;
  uint256[] memory p_resourcereward_amounts = new uint256[](3);
  p_resourcereward_amounts[0] = 100000000000000000000;
  p_resourcereward_amounts[1] = 100000000000000000000;
  p_resourcereward_amounts[2] = 100000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant UpgradeSolarPanel2PrototypeId = "UpgradeSolarPanel2";

function UpgradeSolarPanel2Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = UpgradeSolarPanel2PrototypeId;
  return _keyTuple;
}

function UpgradeSolarPanel2LevelKeys(uint32 level) pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](2);

  _keyTuple[0] = UpgradeSolarPanel2PrototypeId;
  _keyTuple[1] = bytes32(uint256(level));
  return _keyTuple;
}
function UpgradeSolarPanel2Prototype(IStore store) {
  bytes32[] memory keys = UpgradeSolarPanel2Keys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](3);
  p_resourcereward_resources[0] = 1;
  p_resourcereward_resources[1] = 2;
  p_resourcereward_resources[2] = 3;
  uint256[] memory p_resourcereward_amounts = new uint256[](3);
  p_resourcereward_amounts[0] = 100000000000000000000;
  p_resourcereward_amounts[1] = 100000000000000000000;
  p_resourcereward_amounts[2] = 100000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant BuildMarketPrototypeId = "BuildMarket";

function BuildMarketKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = BuildMarketPrototypeId;
  return _keyTuple;
}

function BuildMarketPrototype(IStore store) {
  bytes32[] memory keys = BuildMarketKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](4);
  p_resourcereward_resources[0] = 4;
  p_resourcereward_resources[1] = 5;
  p_resourcereward_resources[2] = 7;
  p_resourcereward_resources[3] = 6;
  uint256[] memory p_resourcereward_amounts = new uint256[](4);
  p_resourcereward_amounts[0] = 1000000000000000000;
  p_resourcereward_amounts[1] = 1000000000000000000;
  p_resourcereward_amounts[2] = 1000000000000000000;
  p_resourcereward_amounts[3] = 1000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant MarketSwapPrototypeId = "MarketSwap";

function MarketSwapKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = MarketSwapPrototypeId;
  return _keyTuple;
}

function MarketSwapPrototype(IStore store) {
  bytes32[] memory keys = MarketSwapKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](1);
  p_resourcereward_resources[0] = 6;
  uint256[] memory p_resourcereward_amounts = new uint256[](1);
  p_resourcereward_amounts[0] = 1000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant JoinAlliancePrototypeId = "JoinAlliance";

function JoinAllianceKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = JoinAlliancePrototypeId;
  return _keyTuple;
}

function JoinAlliancePrototype(IStore store) {
  bytes32[] memory keys = JoinAllianceKeys();
  ResourceId[] memory tableIds = new ResourceId[](2);
  bytes[] memory staticData = new bytes[](2);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](2);
  bytes[] memory dynamicData = new bytes[](2);

  tableIds[0] = P_ResourceReward._tableId;
  tableIds[1] = P_UnitReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](3);
  p_resourcereward_resources[0] = 1;
  p_resourcereward_resources[1] = 2;
  p_resourcereward_resources[2] = 3;
  uint256[] memory p_resourcereward_amounts = new uint256[](3);
  p_resourcereward_amounts[0] = 25000000000000000000;
  p_resourcereward_amounts[1] = 25000000000000000000;
  p_resourcereward_amounts[2] = 25000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );
  bytes32[] memory p_unitreward_units = new bytes32[](1);
  p_unitreward_units[0] = 0x4c696768746e696e674372616674000000000000000000000000000000000000;
  uint256[] memory p_unitreward_amounts = new uint256[](1);
  p_unitreward_amounts[0] = 5;
  (staticData[1], encodedLengths[1], dynamicData[1]) = P_UnitReward.encode(p_unitreward_units, p_unitreward_amounts);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant JoinDiscordPrototypeId = "JoinDiscord";

function JoinDiscordKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = JoinDiscordPrototypeId;
  return _keyTuple;
}

function JoinDiscordPrototype(IStore store) {
  bytes32[] memory keys = JoinDiscordKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](3);
  p_resourcereward_resources[0] = 1;
  p_resourcereward_resources[1] = 2;
  p_resourcereward_resources[2] = 3;
  uint256[] memory p_resourcereward_amounts = new uint256[](3);
  p_resourcereward_amounts[0] = 25000000000000000000;
  p_resourcereward_amounts[1] = 25000000000000000000;
  p_resourcereward_amounts[2] = 25000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant FollowTwitterPrototypeId = "FollowTwitter";

function FollowTwitterKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = FollowTwitterPrototypeId;
  return _keyTuple;
}

function FollowTwitterPrototype(IStore store) {
  bytes32[] memory keys = FollowTwitterKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_ResourceReward._tableId;

  uint8[] memory p_resourcereward_resources = new uint8[](3);
  p_resourcereward_resources[0] = 1;
  p_resourcereward_resources[1] = 2;
  p_resourcereward_resources[2] = 3;
  uint256[] memory p_resourcereward_amounts = new uint256[](3);
  p_resourcereward_amounts[0] = 25000000000000000000;
  p_resourcereward_amounts[1] = 25000000000000000000;
  p_resourcereward_amounts[2] = 25000000000000000000;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_ResourceReward.encode(
    p_resourcereward_resources,
    p_resourcereward_amounts
  );

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}

bytes32 constant PrimoPlayerPrototypeId = "PrimoPlayer";

function PrimoPlayerKeys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](1);
  _keyTuple[0] = PrimoPlayerPrototypeId;
  return _keyTuple;
}

function PrimoPlayerPrototype(IStore store) {
  bytes32[] memory keys = PrimoPlayerKeys();
  ResourceId[] memory tableIds = new ResourceId[](1);
  bytes[] memory staticData = new bytes[](1);
  EncodedLengths[] memory encodedLengths = new EncodedLengths[](1);
  bytes[] memory dynamicData = new bytes[](1);

  tableIds[0] = P_UnitReward._tableId;

  bytes32[] memory p_unitreward_units = new bytes32[](1);
  p_unitreward_units[0] = 0x4c696768746e696e674372616674000000000000000000000000000000000000;
  uint256[] memory p_unitreward_amounts = new uint256[](1);
  p_unitreward_amounts[0] = 10;
  (staticData[0], encodedLengths[0], dynamicData[0]) = P_UnitReward.encode(p_unitreward_units, p_unitreward_amounts);

  createPrototype(store, keys, tableIds, staticData, encodedLengths, dynamicData);
}
